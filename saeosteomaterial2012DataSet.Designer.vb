'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.4927
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("saeosteomaterial2012DataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class saeosteomaterial2012DataSet
    Inherits Global.System.Data.DataSet
    
    Private tablearticulos As articulosDataTable
    
    Private tablecon_inv As con_invDataTable
    
    Private tablemovimientos01 As movimientos01DataTable
    
    Private tabledeta_mov01 As deta_mov01DataTable
    
    Private tableterceros As tercerosDataTable
    
    Private tableparinven As parinvenDataTable
    
    Private tabledetafac01 As detafac01DataTable
    
    Private tablefacturas01 As facturas01DataTable
    
    Private tablefacpagos01 As facpagos01DataTable
    
    Private tablecobdpen As cobdpenDataTable
    
    Private tablectas_x_pagar As ctas_x_pagarDataTable
    
    Private tableparafacts As parafactsDataTable
    
    Private tableselpuc As selpucDataTable
    
    Private tabledocumentos01 As documentos01DataTable
    
    Private tablecontrato_inm As contrato_inmDataTable
    
    Private tableparcontrato As parcontratoDataTable
    
    Private tableinm_dpden As inm_dpdenDataTable
    
    Private tableinm_llaves As inm_llavesDataTable
    
    Private tableinm_servicios As inm_serviciosDataTable
    
    Private tableinmuebles As inmueblesDataTable
    
    Private relationcon_inv_ibfk_1 As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("articulos")) Is Nothing) Then
                MyBase.Tables.Add(New articulosDataTable(ds.Tables("articulos")))
            End If
            If (Not (ds.Tables("con_inv")) Is Nothing) Then
                MyBase.Tables.Add(New con_invDataTable(ds.Tables("con_inv")))
            End If
            If (Not (ds.Tables("movimientos01")) Is Nothing) Then
                MyBase.Tables.Add(New movimientos01DataTable(ds.Tables("movimientos01")))
            End If
            If (Not (ds.Tables("deta_mov01")) Is Nothing) Then
                MyBase.Tables.Add(New deta_mov01DataTable(ds.Tables("deta_mov01")))
            End If
            If (Not (ds.Tables("terceros")) Is Nothing) Then
                MyBase.Tables.Add(New tercerosDataTable(ds.Tables("terceros")))
            End If
            If (Not (ds.Tables("parinven")) Is Nothing) Then
                MyBase.Tables.Add(New parinvenDataTable(ds.Tables("parinven")))
            End If
            If (Not (ds.Tables("detafac01")) Is Nothing) Then
                MyBase.Tables.Add(New detafac01DataTable(ds.Tables("detafac01")))
            End If
            If (Not (ds.Tables("facturas01")) Is Nothing) Then
                MyBase.Tables.Add(New facturas01DataTable(ds.Tables("facturas01")))
            End If
            If (Not (ds.Tables("facpagos01")) Is Nothing) Then
                MyBase.Tables.Add(New facpagos01DataTable(ds.Tables("facpagos01")))
            End If
            If (Not (ds.Tables("cobdpen")) Is Nothing) Then
                MyBase.Tables.Add(New cobdpenDataTable(ds.Tables("cobdpen")))
            End If
            If (Not (ds.Tables("ctas_x_pagar")) Is Nothing) Then
                MyBase.Tables.Add(New ctas_x_pagarDataTable(ds.Tables("ctas_x_pagar")))
            End If
            If (Not (ds.Tables("parafacts")) Is Nothing) Then
                MyBase.Tables.Add(New parafactsDataTable(ds.Tables("parafacts")))
            End If
            If (Not (ds.Tables("selpuc")) Is Nothing) Then
                MyBase.Tables.Add(New selpucDataTable(ds.Tables("selpuc")))
            End If
            If (Not (ds.Tables("documentos01")) Is Nothing) Then
                MyBase.Tables.Add(New documentos01DataTable(ds.Tables("documentos01")))
            End If
            If (Not (ds.Tables("contrato_inm")) Is Nothing) Then
                MyBase.Tables.Add(New contrato_inmDataTable(ds.Tables("contrato_inm")))
            End If
            If (Not (ds.Tables("parcontrato")) Is Nothing) Then
                MyBase.Tables.Add(New parcontratoDataTable(ds.Tables("parcontrato")))
            End If
            If (Not (ds.Tables("inm_dpden")) Is Nothing) Then
                MyBase.Tables.Add(New inm_dpdenDataTable(ds.Tables("inm_dpden")))
            End If
            If (Not (ds.Tables("inm_llaves")) Is Nothing) Then
                MyBase.Tables.Add(New inm_llavesDataTable(ds.Tables("inm_llaves")))
            End If
            If (Not (ds.Tables("inm_servicios")) Is Nothing) Then
                MyBase.Tables.Add(New inm_serviciosDataTable(ds.Tables("inm_servicios")))
            End If
            If (Not (ds.Tables("inmuebles")) Is Nothing) Then
                MyBase.Tables.Add(New inmueblesDataTable(ds.Tables("inmuebles")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property articulos() As articulosDataTable
        Get
            Return Me.tablearticulos
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property con_inv() As con_invDataTable
        Get
            Return Me.tablecon_inv
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property movimientos01() As movimientos01DataTable
        Get
            Return Me.tablemovimientos01
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property deta_mov01() As deta_mov01DataTable
        Get
            Return Me.tabledeta_mov01
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property terceros() As tercerosDataTable
        Get
            Return Me.tableterceros
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property parinven() As parinvenDataTable
        Get
            Return Me.tableparinven
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property detafac01() As detafac01DataTable
        Get
            Return Me.tabledetafac01
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property facturas01() As facturas01DataTable
        Get
            Return Me.tablefacturas01
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property facpagos01() As facpagos01DataTable
        Get
            Return Me.tablefacpagos01
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property cobdpen() As cobdpenDataTable
        Get
            Return Me.tablecobdpen
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ctas_x_pagar() As ctas_x_pagarDataTable
        Get
            Return Me.tablectas_x_pagar
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property parafacts() As parafactsDataTable
        Get
            Return Me.tableparafacts
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property selpuc() As selpucDataTable
        Get
            Return Me.tableselpuc
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property documentos01() As documentos01DataTable
        Get
            Return Me.tabledocumentos01
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property contrato_inm() As contrato_inmDataTable
        Get
            Return Me.tablecontrato_inm
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property parcontrato() As parcontratoDataTable
        Get
            Return Me.tableparcontrato
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property inm_dpden() As inm_dpdenDataTable
        Get
            Return Me.tableinm_dpden
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property inm_llaves() As inm_llavesDataTable
        Get
            Return Me.tableinm_llaves
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property inm_servicios() As inm_serviciosDataTable
        Get
            Return Me.tableinm_servicios
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property inmuebles() As inmueblesDataTable
        Get
            Return Me.tableinmuebles
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As saeosteomaterial2012DataSet = CType(MyBase.Clone,saeosteomaterial2012DataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("articulos")) Is Nothing) Then
                MyBase.Tables.Add(New articulosDataTable(ds.Tables("articulos")))
            End If
            If (Not (ds.Tables("con_inv")) Is Nothing) Then
                MyBase.Tables.Add(New con_invDataTable(ds.Tables("con_inv")))
            End If
            If (Not (ds.Tables("movimientos01")) Is Nothing) Then
                MyBase.Tables.Add(New movimientos01DataTable(ds.Tables("movimientos01")))
            End If
            If (Not (ds.Tables("deta_mov01")) Is Nothing) Then
                MyBase.Tables.Add(New deta_mov01DataTable(ds.Tables("deta_mov01")))
            End If
            If (Not (ds.Tables("terceros")) Is Nothing) Then
                MyBase.Tables.Add(New tercerosDataTable(ds.Tables("terceros")))
            End If
            If (Not (ds.Tables("parinven")) Is Nothing) Then
                MyBase.Tables.Add(New parinvenDataTable(ds.Tables("parinven")))
            End If
            If (Not (ds.Tables("detafac01")) Is Nothing) Then
                MyBase.Tables.Add(New detafac01DataTable(ds.Tables("detafac01")))
            End If
            If (Not (ds.Tables("facturas01")) Is Nothing) Then
                MyBase.Tables.Add(New facturas01DataTable(ds.Tables("facturas01")))
            End If
            If (Not (ds.Tables("facpagos01")) Is Nothing) Then
                MyBase.Tables.Add(New facpagos01DataTable(ds.Tables("facpagos01")))
            End If
            If (Not (ds.Tables("cobdpen")) Is Nothing) Then
                MyBase.Tables.Add(New cobdpenDataTable(ds.Tables("cobdpen")))
            End If
            If (Not (ds.Tables("ctas_x_pagar")) Is Nothing) Then
                MyBase.Tables.Add(New ctas_x_pagarDataTable(ds.Tables("ctas_x_pagar")))
            End If
            If (Not (ds.Tables("parafacts")) Is Nothing) Then
                MyBase.Tables.Add(New parafactsDataTable(ds.Tables("parafacts")))
            End If
            If (Not (ds.Tables("selpuc")) Is Nothing) Then
                MyBase.Tables.Add(New selpucDataTable(ds.Tables("selpuc")))
            End If
            If (Not (ds.Tables("documentos01")) Is Nothing) Then
                MyBase.Tables.Add(New documentos01DataTable(ds.Tables("documentos01")))
            End If
            If (Not (ds.Tables("contrato_inm")) Is Nothing) Then
                MyBase.Tables.Add(New contrato_inmDataTable(ds.Tables("contrato_inm")))
            End If
            If (Not (ds.Tables("parcontrato")) Is Nothing) Then
                MyBase.Tables.Add(New parcontratoDataTable(ds.Tables("parcontrato")))
            End If
            If (Not (ds.Tables("inm_dpden")) Is Nothing) Then
                MyBase.Tables.Add(New inm_dpdenDataTable(ds.Tables("inm_dpden")))
            End If
            If (Not (ds.Tables("inm_llaves")) Is Nothing) Then
                MyBase.Tables.Add(New inm_llavesDataTable(ds.Tables("inm_llaves")))
            End If
            If (Not (ds.Tables("inm_servicios")) Is Nothing) Then
                MyBase.Tables.Add(New inm_serviciosDataTable(ds.Tables("inm_servicios")))
            End If
            If (Not (ds.Tables("inmuebles")) Is Nothing) Then
                MyBase.Tables.Add(New inmueblesDataTable(ds.Tables("inmuebles")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablearticulos = CType(MyBase.Tables("articulos"),articulosDataTable)
        If (initTable = true) Then
            If (Not (Me.tablearticulos) Is Nothing) Then
                Me.tablearticulos.InitVars
            End If
        End If
        Me.tablecon_inv = CType(MyBase.Tables("con_inv"),con_invDataTable)
        If (initTable = true) Then
            If (Not (Me.tablecon_inv) Is Nothing) Then
                Me.tablecon_inv.InitVars
            End If
        End If
        Me.tablemovimientos01 = CType(MyBase.Tables("movimientos01"),movimientos01DataTable)
        If (initTable = true) Then
            If (Not (Me.tablemovimientos01) Is Nothing) Then
                Me.tablemovimientos01.InitVars
            End If
        End If
        Me.tabledeta_mov01 = CType(MyBase.Tables("deta_mov01"),deta_mov01DataTable)
        If (initTable = true) Then
            If (Not (Me.tabledeta_mov01) Is Nothing) Then
                Me.tabledeta_mov01.InitVars
            End If
        End If
        Me.tableterceros = CType(MyBase.Tables("terceros"),tercerosDataTable)
        If (initTable = true) Then
            If (Not (Me.tableterceros) Is Nothing) Then
                Me.tableterceros.InitVars
            End If
        End If
        Me.tableparinven = CType(MyBase.Tables("parinven"),parinvenDataTable)
        If (initTable = true) Then
            If (Not (Me.tableparinven) Is Nothing) Then
                Me.tableparinven.InitVars
            End If
        End If
        Me.tabledetafac01 = CType(MyBase.Tables("detafac01"),detafac01DataTable)
        If (initTable = true) Then
            If (Not (Me.tabledetafac01) Is Nothing) Then
                Me.tabledetafac01.InitVars
            End If
        End If
        Me.tablefacturas01 = CType(MyBase.Tables("facturas01"),facturas01DataTable)
        If (initTable = true) Then
            If (Not (Me.tablefacturas01) Is Nothing) Then
                Me.tablefacturas01.InitVars
            End If
        End If
        Me.tablefacpagos01 = CType(MyBase.Tables("facpagos01"),facpagos01DataTable)
        If (initTable = true) Then
            If (Not (Me.tablefacpagos01) Is Nothing) Then
                Me.tablefacpagos01.InitVars
            End If
        End If
        Me.tablecobdpen = CType(MyBase.Tables("cobdpen"),cobdpenDataTable)
        If (initTable = true) Then
            If (Not (Me.tablecobdpen) Is Nothing) Then
                Me.tablecobdpen.InitVars
            End If
        End If
        Me.tablectas_x_pagar = CType(MyBase.Tables("ctas_x_pagar"),ctas_x_pagarDataTable)
        If (initTable = true) Then
            If (Not (Me.tablectas_x_pagar) Is Nothing) Then
                Me.tablectas_x_pagar.InitVars
            End If
        End If
        Me.tableparafacts = CType(MyBase.Tables("parafacts"),parafactsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableparafacts) Is Nothing) Then
                Me.tableparafacts.InitVars
            End If
        End If
        Me.tableselpuc = CType(MyBase.Tables("selpuc"),selpucDataTable)
        If (initTable = true) Then
            If (Not (Me.tableselpuc) Is Nothing) Then
                Me.tableselpuc.InitVars
            End If
        End If
        Me.tabledocumentos01 = CType(MyBase.Tables("documentos01"),documentos01DataTable)
        If (initTable = true) Then
            If (Not (Me.tabledocumentos01) Is Nothing) Then
                Me.tabledocumentos01.InitVars
            End If
        End If
        Me.tablecontrato_inm = CType(MyBase.Tables("contrato_inm"),contrato_inmDataTable)
        If (initTable = true) Then
            If (Not (Me.tablecontrato_inm) Is Nothing) Then
                Me.tablecontrato_inm.InitVars
            End If
        End If
        Me.tableparcontrato = CType(MyBase.Tables("parcontrato"),parcontratoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableparcontrato) Is Nothing) Then
                Me.tableparcontrato.InitVars
            End If
        End If
        Me.tableinm_dpden = CType(MyBase.Tables("inm_dpden"),inm_dpdenDataTable)
        If (initTable = true) Then
            If (Not (Me.tableinm_dpden) Is Nothing) Then
                Me.tableinm_dpden.InitVars
            End If
        End If
        Me.tableinm_llaves = CType(MyBase.Tables("inm_llaves"),inm_llavesDataTable)
        If (initTable = true) Then
            If (Not (Me.tableinm_llaves) Is Nothing) Then
                Me.tableinm_llaves.InitVars
            End If
        End If
        Me.tableinm_servicios = CType(MyBase.Tables("inm_servicios"),inm_serviciosDataTable)
        If (initTable = true) Then
            If (Not (Me.tableinm_servicios) Is Nothing) Then
                Me.tableinm_servicios.InitVars
            End If
        End If
        Me.tableinmuebles = CType(MyBase.Tables("inmuebles"),inmueblesDataTable)
        If (initTable = true) Then
            If (Not (Me.tableinmuebles) Is Nothing) Then
                Me.tableinmuebles.InitVars
            End If
        End If
        Me.relationcon_inv_ibfk_1 = Me.Relations("con_inv_ibfk_1")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "saeosteomaterial2012DataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/saeosteomaterial2012DataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablearticulos = New articulosDataTable
        MyBase.Tables.Add(Me.tablearticulos)
        Me.tablecon_inv = New con_invDataTable
        MyBase.Tables.Add(Me.tablecon_inv)
        Me.tablemovimientos01 = New movimientos01DataTable
        MyBase.Tables.Add(Me.tablemovimientos01)
        Me.tabledeta_mov01 = New deta_mov01DataTable
        MyBase.Tables.Add(Me.tabledeta_mov01)
        Me.tableterceros = New tercerosDataTable
        MyBase.Tables.Add(Me.tableterceros)
        Me.tableparinven = New parinvenDataTable
        MyBase.Tables.Add(Me.tableparinven)
        Me.tabledetafac01 = New detafac01DataTable
        MyBase.Tables.Add(Me.tabledetafac01)
        Me.tablefacturas01 = New facturas01DataTable
        MyBase.Tables.Add(Me.tablefacturas01)
        Me.tablefacpagos01 = New facpagos01DataTable
        MyBase.Tables.Add(Me.tablefacpagos01)
        Me.tablecobdpen = New cobdpenDataTable
        MyBase.Tables.Add(Me.tablecobdpen)
        Me.tablectas_x_pagar = New ctas_x_pagarDataTable
        MyBase.Tables.Add(Me.tablectas_x_pagar)
        Me.tableparafacts = New parafactsDataTable
        MyBase.Tables.Add(Me.tableparafacts)
        Me.tableselpuc = New selpucDataTable
        MyBase.Tables.Add(Me.tableselpuc)
        Me.tabledocumentos01 = New documentos01DataTable
        MyBase.Tables.Add(Me.tabledocumentos01)
        Me.tablecontrato_inm = New contrato_inmDataTable
        MyBase.Tables.Add(Me.tablecontrato_inm)
        Me.tableparcontrato = New parcontratoDataTable
        MyBase.Tables.Add(Me.tableparcontrato)
        Me.tableinm_dpden = New inm_dpdenDataTable
        MyBase.Tables.Add(Me.tableinm_dpden)
        Me.tableinm_llaves = New inm_llavesDataTable
        MyBase.Tables.Add(Me.tableinm_llaves)
        Me.tableinm_servicios = New inm_serviciosDataTable
        MyBase.Tables.Add(Me.tableinm_servicios)
        Me.tableinmuebles = New inmueblesDataTable
        MyBase.Tables.Add(Me.tableinmuebles)
        Me.relationcon_inv_ibfk_1 = New Global.System.Data.DataRelation("con_inv_ibfk_1", New Global.System.Data.DataColumn() {Me.tablearticulos.codartColumn}, New Global.System.Data.DataColumn() {Me.tablecon_inv.codartColumn}, false)
        Me.Relations.Add(Me.relationcon_inv_ibfk_1)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializearticulos() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializecon_inv() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializemovimientos01() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializedeta_mov01() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeterceros() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeparinven() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializedetafac01() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializefacturas01() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializefacpagos01() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializecobdpen() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializectas_x_pagar() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeparafacts() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeselpuc() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializedocumentos01() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializecontrato_inm() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeparcontrato() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeinm_dpden() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeinm_llaves() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeinm_servicios() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeinmuebles() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As saeosteomaterial2012DataSet = New saeosteomaterial2012DataSet
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub articulosRowChangeEventHandler(ByVal sender As Object, ByVal e As articulosRowChangeEvent)
    
    Public Delegate Sub con_invRowChangeEventHandler(ByVal sender As Object, ByVal e As con_invRowChangeEvent)
    
    Public Delegate Sub movimientos01RowChangeEventHandler(ByVal sender As Object, ByVal e As movimientos01RowChangeEvent)
    
    Public Delegate Sub deta_mov01RowChangeEventHandler(ByVal sender As Object, ByVal e As deta_mov01RowChangeEvent)
    
    Public Delegate Sub tercerosRowChangeEventHandler(ByVal sender As Object, ByVal e As tercerosRowChangeEvent)
    
    Public Delegate Sub parinvenRowChangeEventHandler(ByVal sender As Object, ByVal e As parinvenRowChangeEvent)
    
    Public Delegate Sub detafac01RowChangeEventHandler(ByVal sender As Object, ByVal e As detafac01RowChangeEvent)
    
    Public Delegate Sub facturas01RowChangeEventHandler(ByVal sender As Object, ByVal e As facturas01RowChangeEvent)
    
    Public Delegate Sub facpagos01RowChangeEventHandler(ByVal sender As Object, ByVal e As facpagos01RowChangeEvent)
    
    Public Delegate Sub cobdpenRowChangeEventHandler(ByVal sender As Object, ByVal e As cobdpenRowChangeEvent)
    
    Public Delegate Sub ctas_x_pagarRowChangeEventHandler(ByVal sender As Object, ByVal e As ctas_x_pagarRowChangeEvent)
    
    Public Delegate Sub parafactsRowChangeEventHandler(ByVal sender As Object, ByVal e As parafactsRowChangeEvent)
    
    Public Delegate Sub selpucRowChangeEventHandler(ByVal sender As Object, ByVal e As selpucRowChangeEvent)
    
    Public Delegate Sub documentos01RowChangeEventHandler(ByVal sender As Object, ByVal e As documentos01RowChangeEvent)
    
    Public Delegate Sub contrato_inmRowChangeEventHandler(ByVal sender As Object, ByVal e As contrato_inmRowChangeEvent)
    
    Public Delegate Sub parcontratoRowChangeEventHandler(ByVal sender As Object, ByVal e As parcontratoRowChangeEvent)
    
    Public Delegate Sub inm_dpdenRowChangeEventHandler(ByVal sender As Object, ByVal e As inm_dpdenRowChangeEvent)
    
    Public Delegate Sub inm_llavesRowChangeEventHandler(ByVal sender As Object, ByVal e As inm_llavesRowChangeEvent)
    
    Public Delegate Sub inm_serviciosRowChangeEventHandler(ByVal sender As Object, ByVal e As inm_serviciosRowChangeEvent)
    
    Public Delegate Sub inmueblesRowChangeEventHandler(ByVal sender As Object, ByVal e As inmueblesRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class articulosDataTable
        Inherits Global.System.Data.TypedTableBase(Of articulosRow)
        
        Private columncodart As Global.System.Data.DataColumn
        
        Private columnnomart As Global.System.Data.DataColumn
        
        Private columndesart As Global.System.Data.DataColumn
        
        Private columnnivel As Global.System.Data.DataColumn
        
        Private columnreferencia As Global.System.Data.DataColumn
        
        Private columncodbar As Global.System.Data.DataColumn
        
        Private columncos_uni As Global.System.Data.DataColumn
        
        Private columncos_pro As Global.System.Data.DataColumn
        
        Private columnmargen As Global.System.Data.DataColumn
        
        Private columnprecio As Global.System.Data.DataColumn
        
        Private columniva As Global.System.Data.DataColumn
        
        Private columnexento As Global.System.Data.DataColumn
        
        Private columnexcluido As Global.System.Data.DataColumn
        
        Private columncue_inv As Global.System.Data.DataColumn
        
        Private columncue_ing As Global.System.Data.DataColumn
        
        Private columncue_cos As Global.System.Data.DataColumn
        
        Private columncue_iva_v As Global.System.Data.DataColumn
        
        Private columncue_iva_c As Global.System.Data.DataColumn
        
        Private columncue_dev As Global.System.Data.DataColumn
        
        Private columnunidad As Global.System.Data.DataColumn
        
        Private columnempaque As Global.System.Data.DataColumn
        
        Private columncan_emp As Global.System.Data.DataColumn
        
        Private columnuni_emp As Global.System.Data.DataColumn
        
        Private columncant_min As Global.System.Data.DataColumn
        
        Private columnpp As Global.System.Data.DataColumn
        
        Private columnestado As Global.System.Data.DataColumn
        
        Private columncon_comi As Global.System.Data.DataColumn
        
        Private columnimporta As Global.System.Data.DataColumn
        
        Private columnnum_reg As Global.System.Data.DataColumn
        
        Private columnpor_ara As Global.System.Data.DataColumn
        
        Private columnpos_ara As Global.System.Data.DataColumn
        
        Private columnp1 As Global.System.Data.DataColumn
        
        Private columnp2 As Global.System.Data.DataColumn
        
        Private columnp3 As Global.System.Data.DataColumn
        
        Private columnp4 As Global.System.Data.DataColumn
        
        Private columnp5 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "articulos"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nomartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnomart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property desartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndesart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nivelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnivel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property referenciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnreferencia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codbarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodbar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cos_uniColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncos_uni
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cos_proColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncos_pro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property margenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmargen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property precioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprecio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columniva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property exentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnexento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property excluidoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnexcluido
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cue_invColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncue_inv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cue_ingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncue_ing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cue_cosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncue_cos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cue_iva_vColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncue_iva_v
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cue_iva_cColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncue_iva_c
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cue_devColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncue_dev
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property unidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnunidad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property empaqueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnempaque
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property can_empColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncan_emp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property uni_empColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuni_emp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cant_minColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncant_min
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ppColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property estadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnestado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property con_comiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncon_comi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property importaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimporta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property num_regColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnum_reg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property por_araColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpor_ara
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pos_araColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpos_ara
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property p1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnp1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property p2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnp2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property p3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnp3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property p4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnp4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property p5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnp5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As articulosRow
            Get
                Return CType(Me.Rows(index),articulosRow)
            End Get
        End Property
        
        Public Event articulosRowChanging As articulosRowChangeEventHandler
        
        Public Event articulosRowChanged As articulosRowChangeEventHandler
        
        Public Event articulosRowDeleting As articulosRowChangeEventHandler
        
        Public Event articulosRowDeleted As articulosRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddarticulosRow(ByVal row As articulosRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddarticulosRow( _
                    ByVal codart As String,  _
                    ByVal nomart As String,  _
                    ByVal desart As String,  _
                    ByVal nivel As String,  _
                    ByVal referencia As String,  _
                    ByVal codbar As String,  _
                    ByVal cos_uni As Double,  _
                    ByVal cos_pro As Double,  _
                    ByVal margen As Decimal,  _
                    ByVal precio As Double,  _
                    ByVal iva As Decimal,  _
                    ByVal exento As String,  _
                    ByVal excluido As String,  _
                    ByVal cue_inv As String,  _
                    ByVal cue_ing As String,  _
                    ByVal cue_cos As String,  _
                    ByVal cue_iva_v As String,  _
                    ByVal cue_iva_c As String,  _
                    ByVal cue_dev As String,  _
                    ByVal unidad As String,  _
                    ByVal empaque As Double,  _
                    ByVal can_emp As Double,  _
                    ByVal uni_emp As Double,  _
                    ByVal cant_min As Double,  _
                    ByVal pp As Double,  _
                    ByVal estado As String,  _
                    ByVal con_comi As String,  _
                    ByVal importa As String,  _
                    ByVal num_reg As String,  _
                    ByVal por_ara As Decimal,  _
                    ByVal pos_ara As String,  _
                    ByVal p1 As String,  _
                    ByVal p2 As String,  _
                    ByVal p3 As String,  _
                    ByVal p4 As String,  _
                    ByVal p5 As String) As articulosRow
            Dim rowarticulosRow As articulosRow = CType(Me.NewRow,articulosRow)
            Dim columnValuesArray() As Object = New Object() {codart, nomart, desart, nivel, referencia, codbar, cos_uni, cos_pro, margen, precio, iva, exento, excluido, cue_inv, cue_ing, cue_cos, cue_iva_v, cue_iva_c, cue_dev, unidad, empaque, can_emp, uni_emp, cant_min, pp, estado, con_comi, importa, num_reg, por_ara, pos_ara, p1, p2, p3, p4, p5}
            rowarticulosRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowarticulosRow)
            Return rowarticulosRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBycodart(ByVal codart As String) As articulosRow
            Return CType(Me.Rows.Find(New Object() {codart}),articulosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As articulosDataTable = CType(MyBase.Clone,articulosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New articulosDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncodart = MyBase.Columns("codart")
            Me.columnnomart = MyBase.Columns("nomart")
            Me.columndesart = MyBase.Columns("desart")
            Me.columnnivel = MyBase.Columns("nivel")
            Me.columnreferencia = MyBase.Columns("referencia")
            Me.columncodbar = MyBase.Columns("codbar")
            Me.columncos_uni = MyBase.Columns("cos_uni")
            Me.columncos_pro = MyBase.Columns("cos_pro")
            Me.columnmargen = MyBase.Columns("margen")
            Me.columnprecio = MyBase.Columns("precio")
            Me.columniva = MyBase.Columns("iva")
            Me.columnexento = MyBase.Columns("exento")
            Me.columnexcluido = MyBase.Columns("excluido")
            Me.columncue_inv = MyBase.Columns("cue_inv")
            Me.columncue_ing = MyBase.Columns("cue_ing")
            Me.columncue_cos = MyBase.Columns("cue_cos")
            Me.columncue_iva_v = MyBase.Columns("cue_iva_v")
            Me.columncue_iva_c = MyBase.Columns("cue_iva_c")
            Me.columncue_dev = MyBase.Columns("cue_dev")
            Me.columnunidad = MyBase.Columns("unidad")
            Me.columnempaque = MyBase.Columns("empaque")
            Me.columncan_emp = MyBase.Columns("can_emp")
            Me.columnuni_emp = MyBase.Columns("uni_emp")
            Me.columncant_min = MyBase.Columns("cant_min")
            Me.columnpp = MyBase.Columns("pp")
            Me.columnestado = MyBase.Columns("estado")
            Me.columncon_comi = MyBase.Columns("con_comi")
            Me.columnimporta = MyBase.Columns("importa")
            Me.columnnum_reg = MyBase.Columns("num_reg")
            Me.columnpor_ara = MyBase.Columns("por_ara")
            Me.columnpos_ara = MyBase.Columns("pos_ara")
            Me.columnp1 = MyBase.Columns("p1")
            Me.columnp2 = MyBase.Columns("p2")
            Me.columnp3 = MyBase.Columns("p3")
            Me.columnp4 = MyBase.Columns("p4")
            Me.columnp5 = MyBase.Columns("p5")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncodart = New Global.System.Data.DataColumn("codart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodart)
            Me.columnnomart = New Global.System.Data.DataColumn("nomart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnomart)
            Me.columndesart = New Global.System.Data.DataColumn("desart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesart)
            Me.columnnivel = New Global.System.Data.DataColumn("nivel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnivel)
            Me.columnreferencia = New Global.System.Data.DataColumn("referencia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreferencia)
            Me.columncodbar = New Global.System.Data.DataColumn("codbar", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodbar)
            Me.columncos_uni = New Global.System.Data.DataColumn("cos_uni", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncos_uni)
            Me.columncos_pro = New Global.System.Data.DataColumn("cos_pro", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncos_pro)
            Me.columnmargen = New Global.System.Data.DataColumn("margen", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmargen)
            Me.columnprecio = New Global.System.Data.DataColumn("precio", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprecio)
            Me.columniva = New Global.System.Data.DataColumn("iva", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columniva)
            Me.columnexento = New Global.System.Data.DataColumn("exento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexento)
            Me.columnexcluido = New Global.System.Data.DataColumn("excluido", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexcluido)
            Me.columncue_inv = New Global.System.Data.DataColumn("cue_inv", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncue_inv)
            Me.columncue_ing = New Global.System.Data.DataColumn("cue_ing", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncue_ing)
            Me.columncue_cos = New Global.System.Data.DataColumn("cue_cos", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncue_cos)
            Me.columncue_iva_v = New Global.System.Data.DataColumn("cue_iva_v", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncue_iva_v)
            Me.columncue_iva_c = New Global.System.Data.DataColumn("cue_iva_c", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncue_iva_c)
            Me.columncue_dev = New Global.System.Data.DataColumn("cue_dev", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncue_dev)
            Me.columnunidad = New Global.System.Data.DataColumn("unidad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnunidad)
            Me.columnempaque = New Global.System.Data.DataColumn("empaque", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnempaque)
            Me.columncan_emp = New Global.System.Data.DataColumn("can_emp", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncan_emp)
            Me.columnuni_emp = New Global.System.Data.DataColumn("uni_emp", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuni_emp)
            Me.columncant_min = New Global.System.Data.DataColumn("cant_min", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant_min)
            Me.columnpp = New Global.System.Data.DataColumn("pp", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpp)
            Me.columnestado = New Global.System.Data.DataColumn("estado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnestado)
            Me.columncon_comi = New Global.System.Data.DataColumn("con_comi", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncon_comi)
            Me.columnimporta = New Global.System.Data.DataColumn("importa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimporta)
            Me.columnnum_reg = New Global.System.Data.DataColumn("num_reg", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnum_reg)
            Me.columnpor_ara = New Global.System.Data.DataColumn("por_ara", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpor_ara)
            Me.columnpos_ara = New Global.System.Data.DataColumn("pos_ara", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpos_ara)
            Me.columnp1 = New Global.System.Data.DataColumn("p1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnp1)
            Me.columnp2 = New Global.System.Data.DataColumn("p2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnp2)
            Me.columnp3 = New Global.System.Data.DataColumn("p3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnp3)
            Me.columnp4 = New Global.System.Data.DataColumn("p4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnp4)
            Me.columnp5 = New Global.System.Data.DataColumn("p5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnp5)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columncodart}, true))
            Me.columncodart.AllowDBNull = false
            Me.columncodart.Unique = true
            Me.columncodart.MaxLength = 18
            Me.columnnomart.AllowDBNull = false
            Me.columnnomart.MaxLength = 60
            Me.columndesart.AllowDBNull = false
            Me.columndesart.MaxLength = 21845
            Me.columnnivel.AllowDBNull = false
            Me.columnnivel.MaxLength = 15
            Me.columnreferencia.AllowDBNull = false
            Me.columnreferencia.MaxLength = 18
            Me.columncodbar.AllowDBNull = false
            Me.columncodbar.MaxLength = 20
            Me.columncos_uni.AllowDBNull = false
            Me.columncos_pro.AllowDBNull = false
            Me.columnmargen.AllowDBNull = false
            Me.columnprecio.AllowDBNull = false
            Me.columniva.AllowDBNull = false
            Me.columnexento.AllowDBNull = false
            Me.columnexento.MaxLength = 2
            Me.columnexcluido.AllowDBNull = false
            Me.columnexcluido.MaxLength = 2
            Me.columncue_inv.AllowDBNull = false
            Me.columncue_inv.MaxLength = 15
            Me.columncue_ing.AllowDBNull = false
            Me.columncue_ing.MaxLength = 15
            Me.columncue_cos.AllowDBNull = false
            Me.columncue_cos.MaxLength = 15
            Me.columncue_iva_v.AllowDBNull = false
            Me.columncue_iva_v.MaxLength = 15
            Me.columncue_iva_c.AllowDBNull = false
            Me.columncue_iva_c.MaxLength = 15
            Me.columncue_dev.AllowDBNull = false
            Me.columncue_dev.MaxLength = 15
            Me.columnunidad.AllowDBNull = false
            Me.columnunidad.MaxLength = 10
            Me.columnempaque.AllowDBNull = false
            Me.columncan_emp.AllowDBNull = false
            Me.columnuni_emp.AllowDBNull = false
            Me.columncant_min.AllowDBNull = false
            Me.columnpp.AllowDBNull = false
            Me.columnestado.AllowDBNull = false
            Me.columnestado.MaxLength = 10
            Me.columncon_comi.AllowDBNull = false
            Me.columncon_comi.MaxLength = 20
            Me.columnimporta.AllowDBNull = false
            Me.columnimporta.MaxLength = 2
            Me.columnnum_reg.AllowDBNull = false
            Me.columnnum_reg.MaxLength = 20
            Me.columnpor_ara.AllowDBNull = false
            Me.columnpos_ara.AllowDBNull = false
            Me.columnpos_ara.MaxLength = 20
            Me.columnp1.AllowDBNull = false
            Me.columnp1.MaxLength = 15
            Me.columnp2.AllowDBNull = false
            Me.columnp2.MaxLength = 15
            Me.columnp3.AllowDBNull = false
            Me.columnp3.MaxLength = 15
            Me.columnp4.AllowDBNull = false
            Me.columnp4.MaxLength = 15
            Me.columnp5.AllowDBNull = false
            Me.columnp5.MaxLength = 15
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewarticulosRow() As articulosRow
            Return CType(Me.NewRow,articulosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New articulosRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(articulosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.articulosRowChangedEvent) Is Nothing) Then
                RaiseEvent articulosRowChanged(Me, New articulosRowChangeEvent(CType(e.Row,articulosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.articulosRowChangingEvent) Is Nothing) Then
                RaiseEvent articulosRowChanging(Me, New articulosRowChangeEvent(CType(e.Row,articulosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.articulosRowDeletedEvent) Is Nothing) Then
                RaiseEvent articulosRowDeleted(Me, New articulosRowChangeEvent(CType(e.Row,articulosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.articulosRowDeletingEvent) Is Nothing) Then
                RaiseEvent articulosRowDeleting(Me, New articulosRowChangeEvent(CType(e.Row,articulosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovearticulosRow(ByVal row As articulosRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As saeosteomaterial2012DataSet = New saeosteomaterial2012DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "articulosDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class con_invDataTable
        Inherits Global.System.Data.TypedTableBase(Of con_invRow)
        
        Private columncodart As Global.System.Data.DataColumn
        
        Private columnperiodo As Global.System.Data.DataColumn
        
        Private columncostuni As Global.System.Data.DataColumn
        
        Private columncostprom As Global.System.Data.DataColumn
        
        Private columncostmoe As Global.System.Data.DataColumn
        
        Private columnotro As Global.System.Data.DataColumn
        
        Private columnmargen As Global.System.Data.DataColumn
        
        Private columnbase As Global.System.Data.DataColumn
        
        Private columnprecio1 As Global.System.Data.DataColumn
        
        Private columnprecio2 As Global.System.Data.DataColumn
        
        Private columnprecio3 As Global.System.Data.DataColumn
        
        Private columnprecio4 As Global.System.Data.DataColumn
        
        Private columnprecio5 As Global.System.Data.DataColumn
        
        Private columnprecio6 As Global.System.Data.DataColumn
        
        Private columncue_inv As Global.System.Data.DataColumn
        
        Private columncue_cos As Global.System.Data.DataColumn
        
        Private columncue_ing As Global.System.Data.DataColumn
        
        Private columncue_iva_v As Global.System.Data.DataColumn
        
        Private columncue_iva_c As Global.System.Data.DataColumn
        
        Private columncue_dev As Global.System.Data.DataColumn
        
        Private columnsaldoi As Global.System.Data.DataColumn
        
        Private columnvent As Global.System.Data.DataColumn
        
        Private columnvsal As Global.System.Data.DataColumn
        
        Private columnvaju As Global.System.Data.DataColumn
        
        Private columncant1 As Global.System.Data.DataColumn
        
        Private columncant2 As Global.System.Data.DataColumn
        
        Private columncant3 As Global.System.Data.DataColumn
        
        Private columncant4 As Global.System.Data.DataColumn
        
        Private columncant5 As Global.System.Data.DataColumn
        
        Private columncant6 As Global.System.Data.DataColumn
        
        Private columncant7 As Global.System.Data.DataColumn
        
        Private columncant8 As Global.System.Data.DataColumn
        
        Private columncant9 As Global.System.Data.DataColumn
        
        Private columncant10 As Global.System.Data.DataColumn
        
        Private columncant11 As Global.System.Data.DataColumn
        
        Private columncant12 As Global.System.Data.DataColumn
        
        Private columncant13 As Global.System.Data.DataColumn
        
        Private columncant14 As Global.System.Data.DataColumn
        
        Private columncant15 As Global.System.Data.DataColumn
        
        Private columncant16 As Global.System.Data.DataColumn
        
        Private columncant17 As Global.System.Data.DataColumn
        
        Private columncant18 As Global.System.Data.DataColumn
        
        Private columncant19 As Global.System.Data.DataColumn
        
        Private columncant20 As Global.System.Data.DataColumn
        
        Private columncant21 As Global.System.Data.DataColumn
        
        Private columncant22 As Global.System.Data.DataColumn
        
        Private columncant23 As Global.System.Data.DataColumn
        
        Private columncant24 As Global.System.Data.DataColumn
        
        Private columncant25 As Global.System.Data.DataColumn
        
        Private columncant26 As Global.System.Data.DataColumn
        
        Private columncant27 As Global.System.Data.DataColumn
        
        Private columncant28 As Global.System.Data.DataColumn
        
        Private columncant29 As Global.System.Data.DataColumn
        
        Private columncant30 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "con_inv"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property periodoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnperiodo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property costuniColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncostuni
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property costpromColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncostprom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property costmoeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncostmoe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property otroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnotro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property margenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmargen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property baseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbase
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property precio1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnprecio1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property precio2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnprecio2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property precio3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnprecio3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property precio4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnprecio4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property precio5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnprecio5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property precio6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnprecio6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cue_invColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncue_inv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cue_cosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncue_cos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cue_ingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncue_ing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cue_iva_vColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncue_iva_v
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cue_iva_cColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncue_iva_c
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cue_devColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncue_dev
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property saldoiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsaldoi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ventColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvent
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property vsalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvsal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property vajuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvaju
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cant1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncant1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cant2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncant2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cant3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncant3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cant4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncant4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cant5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncant5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cant6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncant6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cant7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncant7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cant8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncant8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cant9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncant9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cant10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncant10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cant11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncant11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cant12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncant12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cant13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncant13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cant14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncant14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cant15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncant15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cant16Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncant16
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cant17Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncant17
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cant18Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncant18
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cant19Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncant19
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cant20Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncant20
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cant21Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncant21
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cant22Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncant22
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cant23Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncant23
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cant24Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncant24
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cant25Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncant25
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cant26Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncant26
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cant27Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncant27
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cant28Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncant28
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cant29Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncant29
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cant30Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncant30
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As con_invRow
            Get
                Return CType(Me.Rows(index),con_invRow)
            End Get
        End Property
        
        Public Event con_invRowChanging As con_invRowChangeEventHandler
        
        Public Event con_invRowChanged As con_invRowChangeEventHandler
        
        Public Event con_invRowDeleting As con_invRowChangeEventHandler
        
        Public Event con_invRowDeleted As con_invRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addcon_invRow(ByVal row As con_invRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addcon_invRow( _
                    ByVal parentarticulosRowBycon_inv_ibfk_1 As articulosRow,  _
                    ByVal periodo As String,  _
                    ByVal costuni As Double,  _
                    ByVal costprom As Double,  _
                    ByVal costmoe As Double,  _
                    ByVal otro As Double,  _
                    ByVal margen As Decimal,  _
                    ByVal base As Double,  _
                    ByVal precio1 As Double,  _
                    ByVal precio2 As Double,  _
                    ByVal precio3 As Double,  _
                    ByVal precio4 As Double,  _
                    ByVal precio5 As Double,  _
                    ByVal precio6 As Double,  _
                    ByVal cue_inv As String,  _
                    ByVal cue_cos As String,  _
                    ByVal cue_ing As String,  _
                    ByVal cue_iva_v As String,  _
                    ByVal cue_iva_c As String,  _
                    ByVal cue_dev As String,  _
                    ByVal saldoi As Double,  _
                    ByVal vent As Double,  _
                    ByVal vsal As Double,  _
                    ByVal vaju As Double,  _
                    ByVal cant1 As Double,  _
                    ByVal cant2 As Double,  _
                    ByVal cant3 As Double,  _
                    ByVal cant4 As Double,  _
                    ByVal cant5 As Double,  _
                    ByVal cant6 As Double,  _
                    ByVal cant7 As Double,  _
                    ByVal cant8 As Double,  _
                    ByVal cant9 As Double,  _
                    ByVal cant10 As Double,  _
                    ByVal cant11 As Double,  _
                    ByVal cant12 As Double,  _
                    ByVal cant13 As Double,  _
                    ByVal cant14 As Double,  _
                    ByVal cant15 As Double,  _
                    ByVal cant16 As Double,  _
                    ByVal cant17 As Double,  _
                    ByVal cant18 As Double,  _
                    ByVal cant19 As Double,  _
                    ByVal cant20 As Double,  _
                    ByVal cant21 As Double,  _
                    ByVal cant22 As Double,  _
                    ByVal cant23 As Double,  _
                    ByVal cant24 As Double,  _
                    ByVal cant25 As Double,  _
                    ByVal cant26 As Double,  _
                    ByVal cant27 As Double,  _
                    ByVal cant28 As Double,  _
                    ByVal cant29 As Double,  _
                    ByVal cant30 As Double) As con_invRow
            Dim rowcon_invRow As con_invRow = CType(Me.NewRow,con_invRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, periodo, costuni, costprom, costmoe, otro, margen, base, precio1, precio2, precio3, precio4, precio5, precio6, cue_inv, cue_cos, cue_ing, cue_iva_v, cue_iva_c, cue_dev, saldoi, vent, vsal, vaju, cant1, cant2, cant3, cant4, cant5, cant6, cant7, cant8, cant9, cant10, cant11, cant12, cant13, cant14, cant15, cant16, cant17, cant18, cant19, cant20, cant21, cant22, cant23, cant24, cant25, cant26, cant27, cant28, cant29, cant30}
            If (Not (parentarticulosRowBycon_inv_ibfk_1) Is Nothing) Then
                columnValuesArray(0) = parentarticulosRowBycon_inv_ibfk_1(0)
            End If
            rowcon_invRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowcon_invRow)
            Return rowcon_invRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As con_invDataTable = CType(MyBase.Clone,con_invDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New con_invDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncodart = MyBase.Columns("codart")
            Me.columnperiodo = MyBase.Columns("periodo")
            Me.columncostuni = MyBase.Columns("costuni")
            Me.columncostprom = MyBase.Columns("costprom")
            Me.columncostmoe = MyBase.Columns("costmoe")
            Me.columnotro = MyBase.Columns("otro")
            Me.columnmargen = MyBase.Columns("margen")
            Me.columnbase = MyBase.Columns("base")
            Me.columnprecio1 = MyBase.Columns("precio1")
            Me.columnprecio2 = MyBase.Columns("precio2")
            Me.columnprecio3 = MyBase.Columns("precio3")
            Me.columnprecio4 = MyBase.Columns("precio4")
            Me.columnprecio5 = MyBase.Columns("precio5")
            Me.columnprecio6 = MyBase.Columns("precio6")
            Me.columncue_inv = MyBase.Columns("cue_inv")
            Me.columncue_cos = MyBase.Columns("cue_cos")
            Me.columncue_ing = MyBase.Columns("cue_ing")
            Me.columncue_iva_v = MyBase.Columns("cue_iva_v")
            Me.columncue_iva_c = MyBase.Columns("cue_iva_c")
            Me.columncue_dev = MyBase.Columns("cue_dev")
            Me.columnsaldoi = MyBase.Columns("saldoi")
            Me.columnvent = MyBase.Columns("vent")
            Me.columnvsal = MyBase.Columns("vsal")
            Me.columnvaju = MyBase.Columns("vaju")
            Me.columncant1 = MyBase.Columns("cant1")
            Me.columncant2 = MyBase.Columns("cant2")
            Me.columncant3 = MyBase.Columns("cant3")
            Me.columncant4 = MyBase.Columns("cant4")
            Me.columncant5 = MyBase.Columns("cant5")
            Me.columncant6 = MyBase.Columns("cant6")
            Me.columncant7 = MyBase.Columns("cant7")
            Me.columncant8 = MyBase.Columns("cant8")
            Me.columncant9 = MyBase.Columns("cant9")
            Me.columncant10 = MyBase.Columns("cant10")
            Me.columncant11 = MyBase.Columns("cant11")
            Me.columncant12 = MyBase.Columns("cant12")
            Me.columncant13 = MyBase.Columns("cant13")
            Me.columncant14 = MyBase.Columns("cant14")
            Me.columncant15 = MyBase.Columns("cant15")
            Me.columncant16 = MyBase.Columns("cant16")
            Me.columncant17 = MyBase.Columns("cant17")
            Me.columncant18 = MyBase.Columns("cant18")
            Me.columncant19 = MyBase.Columns("cant19")
            Me.columncant20 = MyBase.Columns("cant20")
            Me.columncant21 = MyBase.Columns("cant21")
            Me.columncant22 = MyBase.Columns("cant22")
            Me.columncant23 = MyBase.Columns("cant23")
            Me.columncant24 = MyBase.Columns("cant24")
            Me.columncant25 = MyBase.Columns("cant25")
            Me.columncant26 = MyBase.Columns("cant26")
            Me.columncant27 = MyBase.Columns("cant27")
            Me.columncant28 = MyBase.Columns("cant28")
            Me.columncant29 = MyBase.Columns("cant29")
            Me.columncant30 = MyBase.Columns("cant30")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncodart = New Global.System.Data.DataColumn("codart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodart)
            Me.columnperiodo = New Global.System.Data.DataColumn("periodo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnperiodo)
            Me.columncostuni = New Global.System.Data.DataColumn("costuni", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncostuni)
            Me.columncostprom = New Global.System.Data.DataColumn("costprom", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncostprom)
            Me.columncostmoe = New Global.System.Data.DataColumn("costmoe", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncostmoe)
            Me.columnotro = New Global.System.Data.DataColumn("otro", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnotro)
            Me.columnmargen = New Global.System.Data.DataColumn("margen", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmargen)
            Me.columnbase = New Global.System.Data.DataColumn("base", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbase)
            Me.columnprecio1 = New Global.System.Data.DataColumn("precio1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprecio1)
            Me.columnprecio2 = New Global.System.Data.DataColumn("precio2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprecio2)
            Me.columnprecio3 = New Global.System.Data.DataColumn("precio3", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprecio3)
            Me.columnprecio4 = New Global.System.Data.DataColumn("precio4", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprecio4)
            Me.columnprecio5 = New Global.System.Data.DataColumn("precio5", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprecio5)
            Me.columnprecio6 = New Global.System.Data.DataColumn("precio6", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprecio6)
            Me.columncue_inv = New Global.System.Data.DataColumn("cue_inv", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncue_inv)
            Me.columncue_cos = New Global.System.Data.DataColumn("cue_cos", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncue_cos)
            Me.columncue_ing = New Global.System.Data.DataColumn("cue_ing", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncue_ing)
            Me.columncue_iva_v = New Global.System.Data.DataColumn("cue_iva_v", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncue_iva_v)
            Me.columncue_iva_c = New Global.System.Data.DataColumn("cue_iva_c", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncue_iva_c)
            Me.columncue_dev = New Global.System.Data.DataColumn("cue_dev", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncue_dev)
            Me.columnsaldoi = New Global.System.Data.DataColumn("saldoi", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsaldoi)
            Me.columnvent = New Global.System.Data.DataColumn("vent", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvent)
            Me.columnvsal = New Global.System.Data.DataColumn("vsal", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvsal)
            Me.columnvaju = New Global.System.Data.DataColumn("vaju", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvaju)
            Me.columncant1 = New Global.System.Data.DataColumn("cant1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant1)
            Me.columncant2 = New Global.System.Data.DataColumn("cant2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant2)
            Me.columncant3 = New Global.System.Data.DataColumn("cant3", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant3)
            Me.columncant4 = New Global.System.Data.DataColumn("cant4", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant4)
            Me.columncant5 = New Global.System.Data.DataColumn("cant5", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant5)
            Me.columncant6 = New Global.System.Data.DataColumn("cant6", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant6)
            Me.columncant7 = New Global.System.Data.DataColumn("cant7", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant7)
            Me.columncant8 = New Global.System.Data.DataColumn("cant8", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant8)
            Me.columncant9 = New Global.System.Data.DataColumn("cant9", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant9)
            Me.columncant10 = New Global.System.Data.DataColumn("cant10", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant10)
            Me.columncant11 = New Global.System.Data.DataColumn("cant11", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant11)
            Me.columncant12 = New Global.System.Data.DataColumn("cant12", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant12)
            Me.columncant13 = New Global.System.Data.DataColumn("cant13", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant13)
            Me.columncant14 = New Global.System.Data.DataColumn("cant14", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant14)
            Me.columncant15 = New Global.System.Data.DataColumn("cant15", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant15)
            Me.columncant16 = New Global.System.Data.DataColumn("cant16", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant16)
            Me.columncant17 = New Global.System.Data.DataColumn("cant17", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant17)
            Me.columncant18 = New Global.System.Data.DataColumn("cant18", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant18)
            Me.columncant19 = New Global.System.Data.DataColumn("cant19", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant19)
            Me.columncant20 = New Global.System.Data.DataColumn("cant20", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant20)
            Me.columncant21 = New Global.System.Data.DataColumn("cant21", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant21)
            Me.columncant22 = New Global.System.Data.DataColumn("cant22", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant22)
            Me.columncant23 = New Global.System.Data.DataColumn("cant23", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant23)
            Me.columncant24 = New Global.System.Data.DataColumn("cant24", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant24)
            Me.columncant25 = New Global.System.Data.DataColumn("cant25", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant25)
            Me.columncant26 = New Global.System.Data.DataColumn("cant26", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant26)
            Me.columncant27 = New Global.System.Data.DataColumn("cant27", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant27)
            Me.columncant28 = New Global.System.Data.DataColumn("cant28", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant28)
            Me.columncant29 = New Global.System.Data.DataColumn("cant29", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant29)
            Me.columncant30 = New Global.System.Data.DataColumn("cant30", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant30)
            Me.columncodart.AllowDBNull = false
            Me.columncodart.MaxLength = 18
            Me.columnperiodo.AllowDBNull = false
            Me.columnperiodo.MaxLength = 2
            Me.columncostuni.AllowDBNull = false
            Me.columncostprom.AllowDBNull = false
            Me.columncostmoe.AllowDBNull = false
            Me.columnotro.AllowDBNull = false
            Me.columnmargen.AllowDBNull = false
            Me.columnbase.AllowDBNull = false
            Me.columnprecio1.AllowDBNull = false
            Me.columnprecio2.AllowDBNull = false
            Me.columnprecio3.AllowDBNull = false
            Me.columnprecio4.AllowDBNull = false
            Me.columnprecio5.AllowDBNull = false
            Me.columnprecio6.AllowDBNull = false
            Me.columncue_inv.AllowDBNull = false
            Me.columncue_inv.MaxLength = 18
            Me.columncue_cos.AllowDBNull = false
            Me.columncue_cos.MaxLength = 18
            Me.columncue_ing.AllowDBNull = false
            Me.columncue_ing.MaxLength = 18
            Me.columncue_iva_v.AllowDBNull = false
            Me.columncue_iva_v.MaxLength = 18
            Me.columncue_iva_c.AllowDBNull = false
            Me.columncue_iva_c.MaxLength = 18
            Me.columncue_dev.AllowDBNull = false
            Me.columncue_dev.MaxLength = 18
            Me.columnsaldoi.AllowDBNull = false
            Me.columnvent.AllowDBNull = false
            Me.columnvsal.AllowDBNull = false
            Me.columnvaju.AllowDBNull = false
            Me.columncant1.AllowDBNull = false
            Me.columncant2.AllowDBNull = false
            Me.columncant3.AllowDBNull = false
            Me.columncant4.AllowDBNull = false
            Me.columncant5.AllowDBNull = false
            Me.columncant6.AllowDBNull = false
            Me.columncant7.AllowDBNull = false
            Me.columncant8.AllowDBNull = false
            Me.columncant9.AllowDBNull = false
            Me.columncant10.AllowDBNull = false
            Me.columncant11.AllowDBNull = false
            Me.columncant12.AllowDBNull = false
            Me.columncant13.AllowDBNull = false
            Me.columncant14.AllowDBNull = false
            Me.columncant15.AllowDBNull = false
            Me.columncant16.AllowDBNull = false
            Me.columncant17.AllowDBNull = false
            Me.columncant18.AllowDBNull = false
            Me.columncant19.AllowDBNull = false
            Me.columncant20.AllowDBNull = false
            Me.columncant21.AllowDBNull = false
            Me.columncant22.AllowDBNull = false
            Me.columncant23.AllowDBNull = false
            Me.columncant24.AllowDBNull = false
            Me.columncant25.AllowDBNull = false
            Me.columncant26.AllowDBNull = false
            Me.columncant27.AllowDBNull = false
            Me.columncant28.AllowDBNull = false
            Me.columncant29.AllowDBNull = false
            Me.columncant30.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newcon_invRow() As con_invRow
            Return CType(Me.NewRow,con_invRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New con_invRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(con_invRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.con_invRowChangedEvent) Is Nothing) Then
                RaiseEvent con_invRowChanged(Me, New con_invRowChangeEvent(CType(e.Row,con_invRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.con_invRowChangingEvent) Is Nothing) Then
                RaiseEvent con_invRowChanging(Me, New con_invRowChangeEvent(CType(e.Row,con_invRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.con_invRowDeletedEvent) Is Nothing) Then
                RaiseEvent con_invRowDeleted(Me, New con_invRowChangeEvent(CType(e.Row,con_invRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.con_invRowDeletingEvent) Is Nothing) Then
                RaiseEvent con_invRowDeleting(Me, New con_invRowChangeEvent(CType(e.Row,con_invRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removecon_invRow(ByVal row As con_invRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As saeosteomaterial2012DataSet = New saeosteomaterial2012DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "con_invDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class movimientos01DataTable
        Inherits Global.System.Data.TypedTableBase(Of movimientos01Row)
        
        Private columndoc As Global.System.Data.DataColumn
        
        Private columntipodoc As Global.System.Data.DataColumn
        
        Private columnnum As Global.System.Data.DataColumn
        
        Private columnper As Global.System.Data.DataColumn
        
        Private columndia As Global.System.Data.DataColumn
        
        Private columnhora As Global.System.Data.DataColumn
        
        Private columnnitc As Global.System.Data.DataColumn
        
        Private columntipo_mov As Global.System.Data.DataColumn
        
        Private columntipo As Global.System.Data.DataColumn
        
        Private columndesc_mov As Global.System.Data.DataColumn
        
        Private columncc As Global.System.Data.DataColumn
        
        Private columnconcepto As Global.System.Data.DataColumn
        
        Private columno_compra As Global.System.Data.DataColumn
        
        Private columnn_pedido As Global.System.Data.DataColumn
        
        Private columnobserv As Global.System.Data.DataColumn
        
        Private columntotal As Global.System.Data.DataColumn
        
        Private columnestado As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "movimientos01"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property docColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tipodocColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipodoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property numColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property perColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnper
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property diaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property horaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhora
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nitcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnitc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tipo_movColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipo_mov
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tipoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property desc_movColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndesc_mov
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ccColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property conceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnconcepto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property o_compraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columno_compra
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property n_pedidoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnn_pedido
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property observColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnobserv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property totalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property estadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnestado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As movimientos01Row
            Get
                Return CType(Me.Rows(index),movimientos01Row)
            End Get
        End Property
        
        Public Event movimientos01RowChanging As movimientos01RowChangeEventHandler
        
        Public Event movimientos01RowChanged As movimientos01RowChangeEventHandler
        
        Public Event movimientos01RowDeleting As movimientos01RowChangeEventHandler
        
        Public Event movimientos01RowDeleted As movimientos01RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addmovimientos01Row(ByVal row As movimientos01Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addmovimientos01Row( _
                    ByVal doc As String,  _
                    ByVal tipodoc As String,  _
                    ByVal num As Long,  _
                    ByVal per As String,  _
                    ByVal dia As String,  _
                    ByVal hora As System.TimeSpan,  _
                    ByVal nitc As String,  _
                    ByVal tipo_mov As String,  _
                    ByVal tipo As String,  _
                    ByVal desc_mov As String,  _
                    ByVal cc As String,  _
                    ByVal concepto As String,  _
                    ByVal o_compra As String,  _
                    ByVal n_pedido As String,  _
                    ByVal observ As String,  _
                    ByVal total As Double,  _
                    ByVal estado As String) As movimientos01Row
            Dim rowmovimientos01Row As movimientos01Row = CType(Me.NewRow,movimientos01Row)
            Dim columnValuesArray() As Object = New Object() {doc, tipodoc, num, per, dia, hora, nitc, tipo_mov, tipo, desc_mov, cc, concepto, o_compra, n_pedido, observ, total, estado}
            rowmovimientos01Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowmovimientos01Row)
            Return rowmovimientos01Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBydoc(ByVal doc As String) As movimientos01Row
            Return CType(Me.Rows.Find(New Object() {doc}),movimientos01Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As movimientos01DataTable = CType(MyBase.Clone,movimientos01DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New movimientos01DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columndoc = MyBase.Columns("doc")
            Me.columntipodoc = MyBase.Columns("tipodoc")
            Me.columnnum = MyBase.Columns("num")
            Me.columnper = MyBase.Columns("per")
            Me.columndia = MyBase.Columns("dia")
            Me.columnhora = MyBase.Columns("hora")
            Me.columnnitc = MyBase.Columns("nitc")
            Me.columntipo_mov = MyBase.Columns("tipo_mov")
            Me.columntipo = MyBase.Columns("tipo")
            Me.columndesc_mov = MyBase.Columns("desc_mov")
            Me.columncc = MyBase.Columns("cc")
            Me.columnconcepto = MyBase.Columns("concepto")
            Me.columno_compra = MyBase.Columns("o_compra")
            Me.columnn_pedido = MyBase.Columns("n_pedido")
            Me.columnobserv = MyBase.Columns("observ")
            Me.columntotal = MyBase.Columns("total")
            Me.columnestado = MyBase.Columns("estado")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columndoc = New Global.System.Data.DataColumn("doc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndoc)
            Me.columntipodoc = New Global.System.Data.DataColumn("tipodoc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipodoc)
            Me.columnnum = New Global.System.Data.DataColumn("num", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnum)
            Me.columnper = New Global.System.Data.DataColumn("per", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnper)
            Me.columndia = New Global.System.Data.DataColumn("dia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndia)
            Me.columnhora = New Global.System.Data.DataColumn("hora", GetType(Global.System.TimeSpan), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhora)
            Me.columnnitc = New Global.System.Data.DataColumn("nitc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnitc)
            Me.columntipo_mov = New Global.System.Data.DataColumn("tipo_mov", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipo_mov)
            Me.columntipo = New Global.System.Data.DataColumn("tipo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipo)
            Me.columndesc_mov = New Global.System.Data.DataColumn("desc_mov", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesc_mov)
            Me.columncc = New Global.System.Data.DataColumn("cc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncc)
            Me.columnconcepto = New Global.System.Data.DataColumn("concepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconcepto)
            Me.columno_compra = New Global.System.Data.DataColumn("o_compra", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columno_compra)
            Me.columnn_pedido = New Global.System.Data.DataColumn("n_pedido", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnn_pedido)
            Me.columnobserv = New Global.System.Data.DataColumn("observ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobserv)
            Me.columntotal = New Global.System.Data.DataColumn("total", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotal)
            Me.columnestado = New Global.System.Data.DataColumn("estado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnestado)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columndoc}, true))
            Me.columndoc.AllowDBNull = false
            Me.columndoc.Unique = true
            Me.columndoc.MaxLength = 15
            Me.columntipodoc.AllowDBNull = false
            Me.columntipodoc.MaxLength = 4
            Me.columnnum.AllowDBNull = false
            Me.columnper.AllowDBNull = false
            Me.columnper.MaxLength = 7
            Me.columndia.AllowDBNull = false
            Me.columndia.MaxLength = 2
            Me.columnhora.AllowDBNull = false
            Me.columnnitc.AllowDBNull = false
            Me.columnnitc.MaxLength = 15
            Me.columntipo_mov.AllowDBNull = false
            Me.columntipo_mov.MaxLength = 3
            Me.columntipo.AllowDBNull = false
            Me.columntipo.MaxLength = 50
            Me.columndesc_mov.AllowDBNull = false
            Me.columndesc_mov.MaxLength = 100
            Me.columncc.AllowDBNull = false
            Me.columncc.MaxLength = 15
            Me.columnconcepto.AllowDBNull = false
            Me.columnconcepto.MaxLength = 21845
            Me.columno_compra.AllowDBNull = false
            Me.columno_compra.MaxLength = 15
            Me.columnn_pedido.AllowDBNull = false
            Me.columnn_pedido.MaxLength = 15
            Me.columnobserv.AllowDBNull = false
            Me.columnobserv.MaxLength = 21845
            Me.columntotal.AllowDBNull = false
            Me.columnestado.AllowDBNull = false
            Me.columnestado.MaxLength = 2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newmovimientos01Row() As movimientos01Row
            Return CType(Me.NewRow,movimientos01Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New movimientos01Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(movimientos01Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.movimientos01RowChangedEvent) Is Nothing) Then
                RaiseEvent movimientos01RowChanged(Me, New movimientos01RowChangeEvent(CType(e.Row,movimientos01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.movimientos01RowChangingEvent) Is Nothing) Then
                RaiseEvent movimientos01RowChanging(Me, New movimientos01RowChangeEvent(CType(e.Row,movimientos01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.movimientos01RowDeletedEvent) Is Nothing) Then
                RaiseEvent movimientos01RowDeleted(Me, New movimientos01RowChangeEvent(CType(e.Row,movimientos01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.movimientos01RowDeletingEvent) Is Nothing) Then
                RaiseEvent movimientos01RowDeleting(Me, New movimientos01RowChangeEvent(CType(e.Row,movimientos01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removemovimientos01Row(ByVal row As movimientos01Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As saeosteomaterial2012DataSet = New saeosteomaterial2012DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "movimientos01DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class deta_mov01DataTable
        Inherits Global.System.Data.TypedTableBase(Of deta_mov01Row)
        
        Private columndoc As Global.System.Data.DataColumn
        
        Private columnitem As Global.System.Data.DataColumn
        
        Private columncodart As Global.System.Data.DataColumn
        
        Private columnnomart As Global.System.Data.DataColumn
        
        Private columnbod_ori As Global.System.Data.DataColumn
        
        Private columnbod_des As Global.System.Data.DataColumn
        
        Private columncantidad As Global.System.Data.DataColumn
        
        Private columnvalor As Global.System.Data.DataColumn
        
        Private columncta_inv As Global.System.Data.DataColumn
        
        Private columncta_cos As Global.System.Data.DataColumn
        
        Private columncta_ing As Global.System.Data.DataColumn
        
        Private columncta_iva As Global.System.Data.DataColumn
        
        Private columncosto As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "deta_mov01"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property docColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property itemColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnitem
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nomartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnomart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property bod_oriColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbod_ori
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property bod_desColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbod_des
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cantidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncantidad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property valorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvalor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cta_invColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncta_inv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cta_cosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncta_cos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cta_ingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncta_ing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cta_ivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncta_iva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property costoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncosto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As deta_mov01Row
            Get
                Return CType(Me.Rows(index),deta_mov01Row)
            End Get
        End Property
        
        Public Event deta_mov01RowChanging As deta_mov01RowChangeEventHandler
        
        Public Event deta_mov01RowChanged As deta_mov01RowChangeEventHandler
        
        Public Event deta_mov01RowDeleting As deta_mov01RowChangeEventHandler
        
        Public Event deta_mov01RowDeleted As deta_mov01RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Adddeta_mov01Row(ByVal row As deta_mov01Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Adddeta_mov01Row(ByVal doc As String, ByVal item As Integer, ByVal codart As String, ByVal nomart As String, ByVal bod_ori As Integer, ByVal bod_des As Integer, ByVal cantidad As Double, ByVal valor As Double, ByVal cta_inv As String, ByVal cta_cos As String, ByVal cta_ing As String, ByVal cta_iva As String, ByVal costo As Double) As deta_mov01Row
            Dim rowdeta_mov01Row As deta_mov01Row = CType(Me.NewRow,deta_mov01Row)
            Dim columnValuesArray() As Object = New Object() {doc, item, codart, nomart, bod_ori, bod_des, cantidad, valor, cta_inv, cta_cos, cta_ing, cta_iva, costo}
            rowdeta_mov01Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowdeta_mov01Row)
            Return rowdeta_mov01Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As deta_mov01DataTable = CType(MyBase.Clone,deta_mov01DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New deta_mov01DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columndoc = MyBase.Columns("doc")
            Me.columnitem = MyBase.Columns("item")
            Me.columncodart = MyBase.Columns("codart")
            Me.columnnomart = MyBase.Columns("nomart")
            Me.columnbod_ori = MyBase.Columns("bod_ori")
            Me.columnbod_des = MyBase.Columns("bod_des")
            Me.columncantidad = MyBase.Columns("cantidad")
            Me.columnvalor = MyBase.Columns("valor")
            Me.columncta_inv = MyBase.Columns("cta_inv")
            Me.columncta_cos = MyBase.Columns("cta_cos")
            Me.columncta_ing = MyBase.Columns("cta_ing")
            Me.columncta_iva = MyBase.Columns("cta_iva")
            Me.columncosto = MyBase.Columns("costo")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columndoc = New Global.System.Data.DataColumn("doc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndoc)
            Me.columnitem = New Global.System.Data.DataColumn("item", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnitem)
            Me.columncodart = New Global.System.Data.DataColumn("codart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodart)
            Me.columnnomart = New Global.System.Data.DataColumn("nomart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnomart)
            Me.columnbod_ori = New Global.System.Data.DataColumn("bod_ori", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbod_ori)
            Me.columnbod_des = New Global.System.Data.DataColumn("bod_des", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbod_des)
            Me.columncantidad = New Global.System.Data.DataColumn("cantidad", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncantidad)
            Me.columnvalor = New Global.System.Data.DataColumn("valor", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvalor)
            Me.columncta_inv = New Global.System.Data.DataColumn("cta_inv", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncta_inv)
            Me.columncta_cos = New Global.System.Data.DataColumn("cta_cos", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncta_cos)
            Me.columncta_ing = New Global.System.Data.DataColumn("cta_ing", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncta_ing)
            Me.columncta_iva = New Global.System.Data.DataColumn("cta_iva", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncta_iva)
            Me.columncosto = New Global.System.Data.DataColumn("costo", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncosto)
            Me.columndoc.AllowDBNull = false
            Me.columndoc.MaxLength = 15
            Me.columnitem.AllowDBNull = false
            Me.columncodart.AllowDBNull = false
            Me.columncodart.MaxLength = 18
            Me.columnnomart.AllowDBNull = false
            Me.columnnomart.MaxLength = 21845
            Me.columnbod_ori.AllowDBNull = false
            Me.columnbod_des.AllowDBNull = false
            Me.columncantidad.AllowDBNull = false
            Me.columnvalor.AllowDBNull = false
            Me.columncta_inv.AllowDBNull = false
            Me.columncta_inv.MaxLength = 15
            Me.columncta_cos.AllowDBNull = false
            Me.columncta_cos.MaxLength = 15
            Me.columncta_ing.AllowDBNull = false
            Me.columncta_ing.MaxLength = 15
            Me.columncta_iva.AllowDBNull = false
            Me.columncta_iva.MaxLength = 15
            Me.columncosto.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newdeta_mov01Row() As deta_mov01Row
            Return CType(Me.NewRow,deta_mov01Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New deta_mov01Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(deta_mov01Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.deta_mov01RowChangedEvent) Is Nothing) Then
                RaiseEvent deta_mov01RowChanged(Me, New deta_mov01RowChangeEvent(CType(e.Row,deta_mov01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.deta_mov01RowChangingEvent) Is Nothing) Then
                RaiseEvent deta_mov01RowChanging(Me, New deta_mov01RowChangeEvent(CType(e.Row,deta_mov01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.deta_mov01RowDeletedEvent) Is Nothing) Then
                RaiseEvent deta_mov01RowDeleted(Me, New deta_mov01RowChangeEvent(CType(e.Row,deta_mov01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.deta_mov01RowDeletingEvent) Is Nothing) Then
                RaiseEvent deta_mov01RowDeleting(Me, New deta_mov01RowChangeEvent(CType(e.Row,deta_mov01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removedeta_mov01Row(ByVal row As deta_mov01Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As saeosteomaterial2012DataSet = New saeosteomaterial2012DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "deta_mov01DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tercerosDataTable
        Inherits Global.System.Data.TypedTableBase(Of tercerosRow)
        
        Private columnnit As Global.System.Data.DataColumn
        
        Private columndv As Global.System.Data.DataColumn
        
        Private columnnombre As Global.System.Data.DataColumn
        
        Private columnapellidos As Global.System.Data.DataColumn
        
        Private columntipo As Global.System.Data.DataColumn
        
        Private columnpersona As Global.System.Data.DataColumn
        
        Private columndir As Global.System.Data.DataColumn
        
        Private columnpais As Global.System.Data.DataColumn
        
        Private columndept As Global.System.Data.DataColumn
        
        Private columnmun As Global.System.Data.DataColumn
        
        Private columntelefono As Global.System.Data.DataColumn
        
        Private columncelular As Global.System.Data.DataColumn
        
        Private columnfax As Global.System.Data.DataColumn
        
        Private columncorreo As Global.System.Data.DataColumn
        
        Private columnweb As Global.System.Data.DataColumn
        
        Private columndia As Global.System.Data.DataColumn
        
        Private columnmes As Global.System.Data.DataColumn
        
        Private columncontacto As Global.System.Data.DataColumn
        
        Private columntelconta As Global.System.Data.DataColumn
        
        Private columncupo As Global.System.Data.DataColumn
        
        Private columnvmto As Global.System.Data.DataColumn
        
        Private columniva As Global.System.Data.DataColumn
        
        Private columnretef As Global.System.Data.DataColumn
        
        Private columnreteiva As Global.System.Data.DataColumn
        
        Private columnreteica As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "terceros"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dvColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nombreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnombre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property apellidosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnapellidos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tipoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property personaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpersona
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dirColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndir
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property paisColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpais
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property deptColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndept
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property munColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmun
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property telefonoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntelefono
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property celularColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncelular
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property faxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property correoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncorreo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property webColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnweb
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property diaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property contactoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncontacto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property telcontaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntelconta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cupoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncupo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property vmtoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvmto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columniva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property retefColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnretef
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property reteivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnreteiva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property reteicaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnreteica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tercerosRow
            Get
                Return CType(Me.Rows(index),tercerosRow)
            End Get
        End Property
        
        Public Event tercerosRowChanging As tercerosRowChangeEventHandler
        
        Public Event tercerosRowChanged As tercerosRowChangeEventHandler
        
        Public Event tercerosRowDeleting As tercerosRowChangeEventHandler
        
        Public Event tercerosRowDeleted As tercerosRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddtercerosRow(ByVal row As tercerosRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddtercerosRow( _
                    ByVal nit As String,  _
                    ByVal dv As String,  _
                    ByVal nombre As String,  _
                    ByVal apellidos As String,  _
                    ByVal tipo As String,  _
                    ByVal persona As String,  _
                    ByVal dir As String,  _
                    ByVal pais As String,  _
                    ByVal dept As String,  _
                    ByVal mun As String,  _
                    ByVal telefono As String,  _
                    ByVal celular As String,  _
                    ByVal fax As String,  _
                    ByVal correo As String,  _
                    ByVal web As String,  _
                    ByVal dia As String,  _
                    ByVal mes As String,  _
                    ByVal contacto As String,  _
                    ByVal telconta As String,  _
                    ByVal cupo As Double,  _
                    ByVal vmto As Long,  _
                    ByVal iva As String,  _
                    ByVal retef As String,  _
                    ByVal reteiva As String,  _
                    ByVal reteica As String) As tercerosRow
            Dim rowtercerosRow As tercerosRow = CType(Me.NewRow,tercerosRow)
            Dim columnValuesArray() As Object = New Object() {nit, dv, nombre, apellidos, tipo, persona, dir, pais, dept, mun, telefono, celular, fax, correo, web, dia, mes, contacto, telconta, cupo, vmto, iva, retef, reteiva, reteica}
            rowtercerosRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtercerosRow)
            Return rowtercerosRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBynit(ByVal nit As String) As tercerosRow
            Return CType(Me.Rows.Find(New Object() {nit}),tercerosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tercerosDataTable = CType(MyBase.Clone,tercerosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tercerosDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnnit = MyBase.Columns("nit")
            Me.columndv = MyBase.Columns("dv")
            Me.columnnombre = MyBase.Columns("nombre")
            Me.columnapellidos = MyBase.Columns("apellidos")
            Me.columntipo = MyBase.Columns("tipo")
            Me.columnpersona = MyBase.Columns("persona")
            Me.columndir = MyBase.Columns("dir")
            Me.columnpais = MyBase.Columns("pais")
            Me.columndept = MyBase.Columns("dept")
            Me.columnmun = MyBase.Columns("mun")
            Me.columntelefono = MyBase.Columns("telefono")
            Me.columncelular = MyBase.Columns("celular")
            Me.columnfax = MyBase.Columns("fax")
            Me.columncorreo = MyBase.Columns("correo")
            Me.columnweb = MyBase.Columns("web")
            Me.columndia = MyBase.Columns("dia")
            Me.columnmes = MyBase.Columns("mes")
            Me.columncontacto = MyBase.Columns("contacto")
            Me.columntelconta = MyBase.Columns("telconta")
            Me.columncupo = MyBase.Columns("cupo")
            Me.columnvmto = MyBase.Columns("vmto")
            Me.columniva = MyBase.Columns("iva")
            Me.columnretef = MyBase.Columns("retef")
            Me.columnreteiva = MyBase.Columns("reteiva")
            Me.columnreteica = MyBase.Columns("reteica")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnnit = New Global.System.Data.DataColumn("nit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnit)
            Me.columndv = New Global.System.Data.DataColumn("dv", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndv)
            Me.columnnombre = New Global.System.Data.DataColumn("nombre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnombre)
            Me.columnapellidos = New Global.System.Data.DataColumn("apellidos", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnapellidos)
            Me.columntipo = New Global.System.Data.DataColumn("tipo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipo)
            Me.columnpersona = New Global.System.Data.DataColumn("persona", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpersona)
            Me.columndir = New Global.System.Data.DataColumn("dir", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndir)
            Me.columnpais = New Global.System.Data.DataColumn("pais", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpais)
            Me.columndept = New Global.System.Data.DataColumn("dept", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndept)
            Me.columnmun = New Global.System.Data.DataColumn("mun", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmun)
            Me.columntelefono = New Global.System.Data.DataColumn("telefono", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntelefono)
            Me.columncelular = New Global.System.Data.DataColumn("celular", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncelular)
            Me.columnfax = New Global.System.Data.DataColumn("fax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfax)
            Me.columncorreo = New Global.System.Data.DataColumn("correo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncorreo)
            Me.columnweb = New Global.System.Data.DataColumn("web", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnweb)
            Me.columndia = New Global.System.Data.DataColumn("dia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndia)
            Me.columnmes = New Global.System.Data.DataColumn("mes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmes)
            Me.columncontacto = New Global.System.Data.DataColumn("contacto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncontacto)
            Me.columntelconta = New Global.System.Data.DataColumn("telconta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntelconta)
            Me.columncupo = New Global.System.Data.DataColumn("cupo", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncupo)
            Me.columnvmto = New Global.System.Data.DataColumn("vmto", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvmto)
            Me.columniva = New Global.System.Data.DataColumn("iva", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columniva)
            Me.columnretef = New Global.System.Data.DataColumn("retef", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnretef)
            Me.columnreteiva = New Global.System.Data.DataColumn("reteiva", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreteiva)
            Me.columnreteica = New Global.System.Data.DataColumn("reteica", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreteica)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnnit}, true))
            Me.columnnit.AllowDBNull = false
            Me.columnnit.Unique = true
            Me.columnnit.MaxLength = 20
            Me.columndv.AllowDBNull = false
            Me.columndv.MaxLength = 2
            Me.columnnombre.AllowDBNull = false
            Me.columnnombre.MaxLength = 100
            Me.columnapellidos.MaxLength = 50
            Me.columntipo.AllowDBNull = false
            Me.columntipo.MaxLength = 20
            Me.columnpersona.AllowDBNull = false
            Me.columnpersona.MaxLength = 20
            Me.columndir.AllowDBNull = false
            Me.columndir.MaxLength = 100
            Me.columnpais.AllowDBNull = false
            Me.columnpais.MaxLength = 10
            Me.columndept.AllowDBNull = false
            Me.columndept.MaxLength = 10
            Me.columnmun.AllowDBNull = false
            Me.columnmun.MaxLength = 10
            Me.columntelefono.MaxLength = 20
            Me.columncelular.MaxLength = 20
            Me.columnfax.MaxLength = 20
            Me.columncorreo.MaxLength = 150
            Me.columnweb.MaxLength = 150
            Me.columndia.AllowDBNull = false
            Me.columndia.MaxLength = 2
            Me.columnmes.AllowDBNull = false
            Me.columnmes.MaxLength = 15
            Me.columncontacto.AllowDBNull = false
            Me.columncontacto.MaxLength = 100
            Me.columntelconta.AllowDBNull = false
            Me.columntelconta.MaxLength = 15
            Me.columncupo.AllowDBNull = false
            Me.columnvmto.AllowDBNull = false
            Me.columniva.AllowDBNull = false
            Me.columniva.MaxLength = 2
            Me.columnretef.AllowDBNull = false
            Me.columnretef.MaxLength = 2
            Me.columnreteiva.AllowDBNull = false
            Me.columnreteiva.MaxLength = 2
            Me.columnreteica.AllowDBNull = false
            Me.columnreteica.MaxLength = 2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewtercerosRow() As tercerosRow
            Return CType(Me.NewRow,tercerosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tercerosRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tercerosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tercerosRowChangedEvent) Is Nothing) Then
                RaiseEvent tercerosRowChanged(Me, New tercerosRowChangeEvent(CType(e.Row,tercerosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tercerosRowChangingEvent) Is Nothing) Then
                RaiseEvent tercerosRowChanging(Me, New tercerosRowChangeEvent(CType(e.Row,tercerosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tercerosRowDeletedEvent) Is Nothing) Then
                RaiseEvent tercerosRowDeleted(Me, New tercerosRowChangeEvent(CType(e.Row,tercerosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tercerosRowDeletingEvent) Is Nothing) Then
                RaiseEvent tercerosRowDeleting(Me, New tercerosRowChangeEvent(CType(e.Row,tercerosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovetercerosRow(ByVal row As tercerosRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As saeosteomaterial2012DataSet = New saeosteomaterial2012DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tercerosDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class parinvenDataTable
        Inherits Global.System.Data.TypedTableBase(Of parinvenRow)
        
        Private columnlongitud As Global.System.Data.DataColumn
        
        Private columnnivel1 As Global.System.Data.DataColumn
        
        Private columndesc1 As Global.System.Data.DataColumn
        
        Private columnnivel2 As Global.System.Data.DataColumn
        
        Private columndesc2 As Global.System.Data.DataColumn
        
        Private columnnivel3 As Global.System.Data.DataColumn
        
        Private columndesc3 As Global.System.Data.DataColumn
        
        Private columnnivel4 As Global.System.Data.DataColumn
        
        Private columndesc4 As Global.System.Data.DataColumn
        
        Private columnnivel5 As Global.System.Data.DataColumn
        
        Private columndesc5 As Global.System.Data.DataColumn
        
        Private columnnivel6 As Global.System.Data.DataColumn
        
        Private columndesc6 As Global.System.Data.DataColumn
        
        Private columnformula As Global.System.Data.DataColumn
        
        Private columnporcen As Global.System.Data.DataColumn
        
        Private columntraslados As Global.System.Data.DataColumn
        
        Private columnajustes As Global.System.Data.DataColumn
        
        Private columnentradas As Global.System.Data.DataColumn
        
        Private columnsalidas As Global.System.Data.DataColumn
        
        Private columncodbar As Global.System.Data.DataColumn
        
        Private columncontable As Global.System.Data.DataColumn
        
        Private columncuenta1 As Global.System.Data.DataColumn
        
        Private columncuenta2 As Global.System.Data.DataColumn
        
        Private columncuenta3 As Global.System.Data.DataColumn
        
        Private columncuenta4 As Global.System.Data.DataColumn
        
        Private columncuenta5 As Global.System.Data.DataColumn
        
        Private columncuenta6 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "parinven"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property longitudColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlongitud
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nivel1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnnivel1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property desc1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndesc1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nivel2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnnivel2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property desc2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndesc2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nivel3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnnivel3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property desc3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndesc3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nivel4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnnivel4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property desc4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndesc4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nivel5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnnivel5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property desc5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndesc5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nivel6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnnivel6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property desc6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndesc6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property formulaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnformula
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property porcenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnporcen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property trasladosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntraslados
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ajustesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnajustes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property entradasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnentradas
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property salidasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsalidas
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codbarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodbar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property contableColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncontable
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cuenta1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncuenta1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cuenta2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncuenta2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cuenta3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncuenta3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cuenta4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncuenta4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cuenta5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncuenta5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cuenta6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncuenta6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As parinvenRow
            Get
                Return CType(Me.Rows(index),parinvenRow)
            End Get
        End Property
        
        Public Event parinvenRowChanging As parinvenRowChangeEventHandler
        
        Public Event parinvenRowChanged As parinvenRowChangeEventHandler
        
        Public Event parinvenRowDeleting As parinvenRowChangeEventHandler
        
        Public Event parinvenRowDeleted As parinvenRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddparinvenRow(ByVal row As parinvenRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddparinvenRow( _
                    ByVal longitud As Integer,  _
                    ByVal nivel1 As Integer,  _
                    ByVal desc1 As String,  _
                    ByVal nivel2 As Integer,  _
                    ByVal desc2 As String,  _
                    ByVal nivel3 As Integer,  _
                    ByVal desc3 As String,  _
                    ByVal nivel4 As Integer,  _
                    ByVal desc4 As String,  _
                    ByVal nivel5 As Integer,  _
                    ByVal desc5 As String,  _
                    ByVal nivel6 As Integer,  _
                    ByVal desc6 As String,  _
                    ByVal formula As String,  _
                    ByVal porcen As Integer,  _
                    ByVal traslados As String,  _
                    ByVal ajustes As String,  _
                    ByVal entradas As String,  _
                    ByVal salidas As String,  _
                    ByVal codbar As String,  _
                    ByVal contable As String,  _
                    ByVal cuenta1 As String,  _
                    ByVal cuenta2 As String,  _
                    ByVal cuenta3 As String,  _
                    ByVal cuenta4 As String,  _
                    ByVal cuenta5 As String,  _
                    ByVal cuenta6 As String) As parinvenRow
            Dim rowparinvenRow As parinvenRow = CType(Me.NewRow,parinvenRow)
            Dim columnValuesArray() As Object = New Object() {longitud, nivel1, desc1, nivel2, desc2, nivel3, desc3, nivel4, desc4, nivel5, desc5, nivel6, desc6, formula, porcen, traslados, ajustes, entradas, salidas, codbar, contable, cuenta1, cuenta2, cuenta3, cuenta4, cuenta5, cuenta6}
            rowparinvenRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowparinvenRow)
            Return rowparinvenRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As parinvenDataTable = CType(MyBase.Clone,parinvenDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New parinvenDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnlongitud = MyBase.Columns("longitud")
            Me.columnnivel1 = MyBase.Columns("nivel1")
            Me.columndesc1 = MyBase.Columns("desc1")
            Me.columnnivel2 = MyBase.Columns("nivel2")
            Me.columndesc2 = MyBase.Columns("desc2")
            Me.columnnivel3 = MyBase.Columns("nivel3")
            Me.columndesc3 = MyBase.Columns("desc3")
            Me.columnnivel4 = MyBase.Columns("nivel4")
            Me.columndesc4 = MyBase.Columns("desc4")
            Me.columnnivel5 = MyBase.Columns("nivel5")
            Me.columndesc5 = MyBase.Columns("desc5")
            Me.columnnivel6 = MyBase.Columns("nivel6")
            Me.columndesc6 = MyBase.Columns("desc6")
            Me.columnformula = MyBase.Columns("formula")
            Me.columnporcen = MyBase.Columns("porcen")
            Me.columntraslados = MyBase.Columns("traslados")
            Me.columnajustes = MyBase.Columns("ajustes")
            Me.columnentradas = MyBase.Columns("entradas")
            Me.columnsalidas = MyBase.Columns("salidas")
            Me.columncodbar = MyBase.Columns("codbar")
            Me.columncontable = MyBase.Columns("contable")
            Me.columncuenta1 = MyBase.Columns("cuenta1")
            Me.columncuenta2 = MyBase.Columns("cuenta2")
            Me.columncuenta3 = MyBase.Columns("cuenta3")
            Me.columncuenta4 = MyBase.Columns("cuenta4")
            Me.columncuenta5 = MyBase.Columns("cuenta5")
            Me.columncuenta6 = MyBase.Columns("cuenta6")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnlongitud = New Global.System.Data.DataColumn("longitud", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlongitud)
            Me.columnnivel1 = New Global.System.Data.DataColumn("nivel1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnivel1)
            Me.columndesc1 = New Global.System.Data.DataColumn("desc1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesc1)
            Me.columnnivel2 = New Global.System.Data.DataColumn("nivel2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnivel2)
            Me.columndesc2 = New Global.System.Data.DataColumn("desc2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesc2)
            Me.columnnivel3 = New Global.System.Data.DataColumn("nivel3", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnivel3)
            Me.columndesc3 = New Global.System.Data.DataColumn("desc3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesc3)
            Me.columnnivel4 = New Global.System.Data.DataColumn("nivel4", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnivel4)
            Me.columndesc4 = New Global.System.Data.DataColumn("desc4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesc4)
            Me.columnnivel5 = New Global.System.Data.DataColumn("nivel5", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnivel5)
            Me.columndesc5 = New Global.System.Data.DataColumn("desc5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesc5)
            Me.columnnivel6 = New Global.System.Data.DataColumn("nivel6", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnivel6)
            Me.columndesc6 = New Global.System.Data.DataColumn("desc6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesc6)
            Me.columnformula = New Global.System.Data.DataColumn("formula", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnformula)
            Me.columnporcen = New Global.System.Data.DataColumn("porcen", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnporcen)
            Me.columntraslados = New Global.System.Data.DataColumn("traslados", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntraslados)
            Me.columnajustes = New Global.System.Data.DataColumn("ajustes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnajustes)
            Me.columnentradas = New Global.System.Data.DataColumn("entradas", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnentradas)
            Me.columnsalidas = New Global.System.Data.DataColumn("salidas", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsalidas)
            Me.columncodbar = New Global.System.Data.DataColumn("codbar", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodbar)
            Me.columncontable = New Global.System.Data.DataColumn("contable", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncontable)
            Me.columncuenta1 = New Global.System.Data.DataColumn("cuenta1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncuenta1)
            Me.columncuenta2 = New Global.System.Data.DataColumn("cuenta2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncuenta2)
            Me.columncuenta3 = New Global.System.Data.DataColumn("cuenta3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncuenta3)
            Me.columncuenta4 = New Global.System.Data.DataColumn("cuenta4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncuenta4)
            Me.columncuenta5 = New Global.System.Data.DataColumn("cuenta5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncuenta5)
            Me.columncuenta6 = New Global.System.Data.DataColumn("cuenta6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncuenta6)
            Me.columnlongitud.AllowDBNull = false
            Me.columnnivel1.AllowDBNull = false
            Me.columndesc1.AllowDBNull = false
            Me.columndesc1.MaxLength = 20
            Me.columnnivel2.AllowDBNull = false
            Me.columndesc2.AllowDBNull = false
            Me.columndesc2.MaxLength = 20
            Me.columnnivel3.AllowDBNull = false
            Me.columndesc3.AllowDBNull = false
            Me.columndesc3.MaxLength = 20
            Me.columnnivel4.AllowDBNull = false
            Me.columndesc4.AllowDBNull = false
            Me.columndesc4.MaxLength = 20
            Me.columnnivel5.AllowDBNull = false
            Me.columndesc5.AllowDBNull = false
            Me.columndesc5.MaxLength = 20
            Me.columnnivel6.AllowDBNull = false
            Me.columndesc6.AllowDBNull = false
            Me.columndesc6.MaxLength = 20
            Me.columnformula.AllowDBNull = false
            Me.columnformula.MaxLength = 30
            Me.columnporcen.AllowDBNull = false
            Me.columntraslados.AllowDBNull = false
            Me.columntraslados.MaxLength = 4
            Me.columnajustes.AllowDBNull = false
            Me.columnajustes.MaxLength = 4
            Me.columnentradas.AllowDBNull = false
            Me.columnentradas.MaxLength = 4
            Me.columnsalidas.AllowDBNull = false
            Me.columnsalidas.MaxLength = 4
            Me.columncodbar.AllowDBNull = false
            Me.columncodbar.MaxLength = 2
            Me.columncontable.AllowDBNull = false
            Me.columncontable.MaxLength = 2
            Me.columncuenta1.AllowDBNull = false
            Me.columncuenta1.MaxLength = 15
            Me.columncuenta2.AllowDBNull = false
            Me.columncuenta2.MaxLength = 15
            Me.columncuenta3.AllowDBNull = false
            Me.columncuenta3.MaxLength = 15
            Me.columncuenta4.AllowDBNull = false
            Me.columncuenta4.MaxLength = 15
            Me.columncuenta5.AllowDBNull = false
            Me.columncuenta5.MaxLength = 15
            Me.columncuenta6.AllowDBNull = false
            Me.columncuenta6.MaxLength = 15
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewparinvenRow() As parinvenRow
            Return CType(Me.NewRow,parinvenRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New parinvenRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(parinvenRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.parinvenRowChangedEvent) Is Nothing) Then
                RaiseEvent parinvenRowChanged(Me, New parinvenRowChangeEvent(CType(e.Row,parinvenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.parinvenRowChangingEvent) Is Nothing) Then
                RaiseEvent parinvenRowChanging(Me, New parinvenRowChangeEvent(CType(e.Row,parinvenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.parinvenRowDeletedEvent) Is Nothing) Then
                RaiseEvent parinvenRowDeleted(Me, New parinvenRowChangeEvent(CType(e.Row,parinvenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.parinvenRowDeletingEvent) Is Nothing) Then
                RaiseEvent parinvenRowDeleting(Me, New parinvenRowChangeEvent(CType(e.Row,parinvenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveparinvenRow(ByVal row As parinvenRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As saeosteomaterial2012DataSet = New saeosteomaterial2012DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "parinvenDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class detafac01DataTable
        Inherits Global.System.Data.TypedTableBase(Of detafac01Row)
        
        Private columndoc As Global.System.Data.DataColumn
        
        Private columnitem As Global.System.Data.DataColumn
        
        Private columntipo_it As Global.System.Data.DataColumn
        
        Private columncodart As Global.System.Data.DataColumn
        
        Private columnnomart As Global.System.Data.DataColumn
        
        Private columnnumbod As Global.System.Data.DataColumn
        
        Private columncantidad As Global.System.Data.DataColumn
        
        Private columnvalor As Global.System.Data.DataColumn
        
        Private columnvtotal As Global.System.Data.DataColumn
        
        Private columniva_d As Global.System.Data.DataColumn
        
        Private columncta_inv As Global.System.Data.DataColumn
        
        Private columncta_cos As Global.System.Data.DataColumn
        
        Private columncta_ing As Global.System.Data.DataColumn
        
        Private columncta_iva As Global.System.Data.DataColumn
        
        Private columncosto As Global.System.Data.DataColumn
        
        Private columnconcep As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "detafac01"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property docColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property itemColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnitem
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tipo_itColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipo_it
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nomartColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnomart
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property numbodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumbod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cantidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncantidad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property valorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvalor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property vtotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvtotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property iva_dColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columniva_d
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cta_invColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncta_inv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cta_cosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncta_cos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cta_ingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncta_ing
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cta_ivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncta_iva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property costoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncosto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property concepColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnconcep
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As detafac01Row
            Get
                Return CType(Me.Rows(index),detafac01Row)
            End Get
        End Property
        
        Public Event detafac01RowChanging As detafac01RowChangeEventHandler
        
        Public Event detafac01RowChanged As detafac01RowChangeEventHandler
        
        Public Event detafac01RowDeleting As detafac01RowChangeEventHandler
        
        Public Event detafac01RowDeleted As detafac01RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Adddetafac01Row(ByVal row As detafac01Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Adddetafac01Row( _
                    ByVal doc As String,  _
                    ByVal item As Integer,  _
                    ByVal tipo_it As String,  _
                    ByVal codart As String,  _
                    ByVal nomart As String,  _
                    ByVal numbod As Integer,  _
                    ByVal cantidad As Double,  _
                    ByVal valor As Double,  _
                    ByVal vtotal As Double,  _
                    ByVal iva_d As Decimal,  _
                    ByVal cta_inv As String,  _
                    ByVal cta_cos As String,  _
                    ByVal cta_ing As String,  _
                    ByVal cta_iva As String,  _
                    ByVal costo As Double,  _
                    ByVal concep As String) As detafac01Row
            Dim rowdetafac01Row As detafac01Row = CType(Me.NewRow,detafac01Row)
            Dim columnValuesArray() As Object = New Object() {doc, item, tipo_it, codart, nomart, numbod, cantidad, valor, vtotal, iva_d, cta_inv, cta_cos, cta_ing, cta_iva, costo, concep}
            rowdetafac01Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowdetafac01Row)
            Return rowdetafac01Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As detafac01DataTable = CType(MyBase.Clone,detafac01DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New detafac01DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columndoc = MyBase.Columns("doc")
            Me.columnitem = MyBase.Columns("item")
            Me.columntipo_it = MyBase.Columns("tipo_it")
            Me.columncodart = MyBase.Columns("codart")
            Me.columnnomart = MyBase.Columns("nomart")
            Me.columnnumbod = MyBase.Columns("numbod")
            Me.columncantidad = MyBase.Columns("cantidad")
            Me.columnvalor = MyBase.Columns("valor")
            Me.columnvtotal = MyBase.Columns("vtotal")
            Me.columniva_d = MyBase.Columns("iva_d")
            Me.columncta_inv = MyBase.Columns("cta_inv")
            Me.columncta_cos = MyBase.Columns("cta_cos")
            Me.columncta_ing = MyBase.Columns("cta_ing")
            Me.columncta_iva = MyBase.Columns("cta_iva")
            Me.columncosto = MyBase.Columns("costo")
            Me.columnconcep = MyBase.Columns("concep")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columndoc = New Global.System.Data.DataColumn("doc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndoc)
            Me.columnitem = New Global.System.Data.DataColumn("item", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnitem)
            Me.columntipo_it = New Global.System.Data.DataColumn("tipo_it", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipo_it)
            Me.columncodart = New Global.System.Data.DataColumn("codart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodart)
            Me.columnnomart = New Global.System.Data.DataColumn("nomart", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnomart)
            Me.columnnumbod = New Global.System.Data.DataColumn("numbod", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumbod)
            Me.columncantidad = New Global.System.Data.DataColumn("cantidad", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncantidad)
            Me.columnvalor = New Global.System.Data.DataColumn("valor", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvalor)
            Me.columnvtotal = New Global.System.Data.DataColumn("vtotal", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvtotal)
            Me.columniva_d = New Global.System.Data.DataColumn("iva_d", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columniva_d)
            Me.columncta_inv = New Global.System.Data.DataColumn("cta_inv", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncta_inv)
            Me.columncta_cos = New Global.System.Data.DataColumn("cta_cos", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncta_cos)
            Me.columncta_ing = New Global.System.Data.DataColumn("cta_ing", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncta_ing)
            Me.columncta_iva = New Global.System.Data.DataColumn("cta_iva", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncta_iva)
            Me.columncosto = New Global.System.Data.DataColumn("costo", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncosto)
            Me.columnconcep = New Global.System.Data.DataColumn("concep", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconcep)
            Me.columndoc.AllowDBNull = false
            Me.columndoc.MaxLength = 15
            Me.columnitem.AllowDBNull = false
            Me.columntipo_it.AllowDBNull = false
            Me.columntipo_it.MaxLength = 3
            Me.columncodart.AllowDBNull = false
            Me.columncodart.MaxLength = 18
            Me.columnnomart.AllowDBNull = false
            Me.columnnomart.MaxLength = 21845
            Me.columnnumbod.AllowDBNull = false
            Me.columncantidad.AllowDBNull = false
            Me.columnvalor.AllowDBNull = false
            Me.columnvtotal.AllowDBNull = false
            Me.columniva_d.AllowDBNull = false
            Me.columncta_inv.AllowDBNull = false
            Me.columncta_inv.MaxLength = 15
            Me.columncta_cos.AllowDBNull = false
            Me.columncta_cos.MaxLength = 15
            Me.columncta_ing.AllowDBNull = false
            Me.columncta_ing.MaxLength = 15
            Me.columncta_iva.AllowDBNull = false
            Me.columncta_iva.MaxLength = 15
            Me.columncosto.AllowDBNull = false
            Me.columnconcep.AllowDBNull = false
            Me.columnconcep.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newdetafac01Row() As detafac01Row
            Return CType(Me.NewRow,detafac01Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New detafac01Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(detafac01Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.detafac01RowChangedEvent) Is Nothing) Then
                RaiseEvent detafac01RowChanged(Me, New detafac01RowChangeEvent(CType(e.Row,detafac01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.detafac01RowChangingEvent) Is Nothing) Then
                RaiseEvent detafac01RowChanging(Me, New detafac01RowChangeEvent(CType(e.Row,detafac01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.detafac01RowDeletedEvent) Is Nothing) Then
                RaiseEvent detafac01RowDeleted(Me, New detafac01RowChangeEvent(CType(e.Row,detafac01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.detafac01RowDeletingEvent) Is Nothing) Then
                RaiseEvent detafac01RowDeleting(Me, New detafac01RowChangeEvent(CType(e.Row,detafac01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removedetafac01Row(ByVal row As detafac01Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As saeosteomaterial2012DataSet = New saeosteomaterial2012DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "detafac01DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class facturas01DataTable
        Inherits Global.System.Data.TypedTableBase(Of facturas01Row)
        
        Private columndoc As Global.System.Data.DataColumn
        
        Private columnnum As Global.System.Data.DataColumn
        
        Private columntipodoc As Global.System.Data.DataColumn
        
        Private columndoc_de As Global.System.Data.DataColumn
        
        Private columnnitc As Global.System.Data.DataColumn
        
        Private columnnitv As Global.System.Data.DataColumn
        
        Private columnusuario As Global.System.Data.DataColumn
        
        Private columnfecha As Global.System.Data.DataColumn
        
        Private columnhora As Global.System.Data.DataColumn
        
        Private columndescrip As Global.System.Data.DataColumn
        
        Private columndoc_afec As Global.System.Data.DataColumn
        
        Private columnafecta As Global.System.Data.DataColumn
        
        Private columnsubtotal As Global.System.Data.DataColumn
        
        Private columnpor_desc As Global.System.Data.DataColumn
        
        Private columndescuento As Global.System.Data.DataColumn
        
        Private columncta_desc As Global.System.Data.DataColumn
        
        Private columnpor_ret_f As Global.System.Data.DataColumn
        
        Private columnret_f As Global.System.Data.DataColumn
        
        Private columncta_ret_f As Global.System.Data.DataColumn
        
        Private columnpor_iva As Global.System.Data.DataColumn
        
        Private columniva As Global.System.Data.DataColumn
        
        Private columncta_iva As Global.System.Data.DataColumn
        
        Private columnpor_ret_iva As Global.System.Data.DataColumn
        
        Private columnret_iva As Global.System.Data.DataColumn
        
        Private columncta_ret_iva As Global.System.Data.DataColumn
        
        Private columnpor_ret_ica As Global.System.Data.DataColumn
        
        Private columnret_ica As Global.System.Data.DataColumn
        
        Private columncta_ret_ica As Global.System.Data.DataColumn
        
        Private columntotal As Global.System.Data.DataColumn
        
        Private columncta_total As Global.System.Data.DataColumn
        
        Private columnestado As Global.System.Data.DataColumn
        
        Private columnobserv As Global.System.Data.DataColumn
        
        Private columnvmto As Global.System.Data.DataColumn
        
        Private columndir_ent As Global.System.Data.DataColumn
        
        Private columnciu_ent As Global.System.Data.DataColumn
        
        Private columno_compra As Global.System.Data.DataColumn
        
        Private columnfecha_o As Global.System.Data.DataColumn
        
        Private columncc As Global.System.Data.DataColumn
        
        Private columno_con As Global.System.Data.DataColumn
        
        Private columnt1 As Global.System.Data.DataColumn
        
        Private columnd1 As Global.System.Data.DataColumn
        
        Private columnv1 As Global.System.Data.DataColumn
        
        Private columncta1 As Global.System.Data.DataColumn
        
        Private columnt2 As Global.System.Data.DataColumn
        
        Private columnd2 As Global.System.Data.DataColumn
        
        Private columnv2 As Global.System.Data.DataColumn
        
        Private columncta2 As Global.System.Data.DataColumn
        
        Private columnt3 As Global.System.Data.DataColumn
        
        Private columnd3 As Global.System.Data.DataColumn
        
        Private columnv3 As Global.System.Data.DataColumn
        
        Private columncta3 As Global.System.Data.DataColumn
        
        Private columnentregar As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "facturas01"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property docColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property numColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tipodocColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipodoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property doc_deColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndoc_de
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nitcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnitc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nitvColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnitv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property usuarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnusuario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property horaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhora
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property descripColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndescrip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property doc_afecColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndoc_afec
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property afectaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnafecta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property subtotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsubtotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property por_descColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpor_desc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property descuentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndescuento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cta_descColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncta_desc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property por_ret_fColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpor_ret_f
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ret_fColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnret_f
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cta_ret_fColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncta_ret_f
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property por_ivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpor_iva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columniva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cta_ivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncta_iva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property por_ret_ivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpor_ret_iva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ret_ivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnret_iva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cta_ret_ivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncta_ret_iva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property por_ret_icaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpor_ret_ica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ret_icaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnret_ica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cta_ret_icaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncta_ret_ica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property totalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cta_totalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncta_total
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property estadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnestado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property observColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnobserv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property vmtoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvmto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dir_entColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndir_ent
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ciu_entColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnciu_ent
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property o_compraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columno_compra
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fecha_oColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha_o
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ccColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property o_conColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columno_con
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property d1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnd1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property v1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnv1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cta1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncta1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property d2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnd2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property v2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnv2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cta2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncta2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property t3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnt3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property d3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnd3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property v3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnv3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cta3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncta3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property entregarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnentregar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As facturas01Row
            Get
                Return CType(Me.Rows(index),facturas01Row)
            End Get
        End Property
        
        Public Event facturas01RowChanging As facturas01RowChangeEventHandler
        
        Public Event facturas01RowChanged As facturas01RowChangeEventHandler
        
        Public Event facturas01RowDeleting As facturas01RowChangeEventHandler
        
        Public Event facturas01RowDeleted As facturas01RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addfacturas01Row(ByVal row As facturas01Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addfacturas01Row( _
                    ByVal doc As String,  _
                    ByVal num As Long,  _
                    ByVal tipodoc As String,  _
                    ByVal doc_de As String,  _
                    ByVal nitc As String,  _
                    ByVal nitv As String,  _
                    ByVal usuario As String,  _
                    ByVal fecha As Date,  _
                    ByVal hora As System.TimeSpan,  _
                    ByVal descrip As String,  _
                    ByVal doc_afec As String,  _
                    ByVal afecta As String,  _
                    ByVal subtotal As Double,  _
                    ByVal por_desc As Decimal,  _
                    ByVal descuento As Double,  _
                    ByVal cta_desc As String,  _
                    ByVal por_ret_f As Decimal,  _
                    ByVal ret_f As Double,  _
                    ByVal cta_ret_f As String,  _
                    ByVal por_iva As Decimal,  _
                    ByVal iva As Double,  _
                    ByVal cta_iva As String,  _
                    ByVal por_ret_iva As Decimal,  _
                    ByVal ret_iva As Double,  _
                    ByVal cta_ret_iva As String,  _
                    ByVal por_ret_ica As Decimal,  _
                    ByVal ret_ica As Double,  _
                    ByVal cta_ret_ica As String,  _
                    ByVal total As Double,  _
                    ByVal cta_total As String,  _
                    ByVal estado As String,  _
                    ByVal observ As String,  _
                    ByVal vmto As Integer,  _
                    ByVal dir_ent As String,  _
                    ByVal ciu_ent As String,  _
                    ByVal o_compra As String,  _
                    ByVal fecha_o As String,  _
                    ByVal cc As String,  _
                    ByVal o_con As String,  _
                    ByVal t1 As String,  _
                    ByVal d1 As String,  _
                    ByVal v1 As Double,  _
                    ByVal cta1 As String,  _
                    ByVal t2 As String,  _
                    ByVal d2 As String,  _
                    ByVal v2 As Double,  _
                    ByVal cta2 As String,  _
                    ByVal t3 As String,  _
                    ByVal d3 As String,  _
                    ByVal v3 As Double,  _
                    ByVal cta3 As String,  _
                    ByVal entregar As String) As facturas01Row
            Dim rowfacturas01Row As facturas01Row = CType(Me.NewRow,facturas01Row)
            Dim columnValuesArray() As Object = New Object() {doc, num, tipodoc, doc_de, nitc, nitv, usuario, fecha, hora, descrip, doc_afec, afecta, subtotal, por_desc, descuento, cta_desc, por_ret_f, ret_f, cta_ret_f, por_iva, iva, cta_iva, por_ret_iva, ret_iva, cta_ret_iva, por_ret_ica, ret_ica, cta_ret_ica, total, cta_total, estado, observ, vmto, dir_ent, ciu_ent, o_compra, fecha_o, cc, o_con, t1, d1, v1, cta1, t2, d2, v2, cta2, t3, d3, v3, cta3, entregar}
            rowfacturas01Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowfacturas01Row)
            Return rowfacturas01Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBydoc(ByVal doc As String) As facturas01Row
            Return CType(Me.Rows.Find(New Object() {doc}),facturas01Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As facturas01DataTable = CType(MyBase.Clone,facturas01DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New facturas01DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columndoc = MyBase.Columns("doc")
            Me.columnnum = MyBase.Columns("num")
            Me.columntipodoc = MyBase.Columns("tipodoc")
            Me.columndoc_de = MyBase.Columns("doc_de")
            Me.columnnitc = MyBase.Columns("nitc")
            Me.columnnitv = MyBase.Columns("nitv")
            Me.columnusuario = MyBase.Columns("usuario")
            Me.columnfecha = MyBase.Columns("fecha")
            Me.columnhora = MyBase.Columns("hora")
            Me.columndescrip = MyBase.Columns("descrip")
            Me.columndoc_afec = MyBase.Columns("doc_afec")
            Me.columnafecta = MyBase.Columns("afecta")
            Me.columnsubtotal = MyBase.Columns("subtotal")
            Me.columnpor_desc = MyBase.Columns("por_desc")
            Me.columndescuento = MyBase.Columns("descuento")
            Me.columncta_desc = MyBase.Columns("cta_desc")
            Me.columnpor_ret_f = MyBase.Columns("por_ret_f")
            Me.columnret_f = MyBase.Columns("ret_f")
            Me.columncta_ret_f = MyBase.Columns("cta_ret_f")
            Me.columnpor_iva = MyBase.Columns("por_iva")
            Me.columniva = MyBase.Columns("iva")
            Me.columncta_iva = MyBase.Columns("cta_iva")
            Me.columnpor_ret_iva = MyBase.Columns("por_ret_iva")
            Me.columnret_iva = MyBase.Columns("ret_iva")
            Me.columncta_ret_iva = MyBase.Columns("cta_ret_iva")
            Me.columnpor_ret_ica = MyBase.Columns("por_ret_ica")
            Me.columnret_ica = MyBase.Columns("ret_ica")
            Me.columncta_ret_ica = MyBase.Columns("cta_ret_ica")
            Me.columntotal = MyBase.Columns("total")
            Me.columncta_total = MyBase.Columns("cta_total")
            Me.columnestado = MyBase.Columns("estado")
            Me.columnobserv = MyBase.Columns("observ")
            Me.columnvmto = MyBase.Columns("vmto")
            Me.columndir_ent = MyBase.Columns("dir_ent")
            Me.columnciu_ent = MyBase.Columns("ciu_ent")
            Me.columno_compra = MyBase.Columns("o_compra")
            Me.columnfecha_o = MyBase.Columns("fecha_o")
            Me.columncc = MyBase.Columns("cc")
            Me.columno_con = MyBase.Columns("o_con")
            Me.columnt1 = MyBase.Columns("t1")
            Me.columnd1 = MyBase.Columns("d1")
            Me.columnv1 = MyBase.Columns("v1")
            Me.columncta1 = MyBase.Columns("cta1")
            Me.columnt2 = MyBase.Columns("t2")
            Me.columnd2 = MyBase.Columns("d2")
            Me.columnv2 = MyBase.Columns("v2")
            Me.columncta2 = MyBase.Columns("cta2")
            Me.columnt3 = MyBase.Columns("t3")
            Me.columnd3 = MyBase.Columns("d3")
            Me.columnv3 = MyBase.Columns("v3")
            Me.columncta3 = MyBase.Columns("cta3")
            Me.columnentregar = MyBase.Columns("entregar")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columndoc = New Global.System.Data.DataColumn("doc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndoc)
            Me.columnnum = New Global.System.Data.DataColumn("num", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnum)
            Me.columntipodoc = New Global.System.Data.DataColumn("tipodoc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipodoc)
            Me.columndoc_de = New Global.System.Data.DataColumn("doc_de", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndoc_de)
            Me.columnnitc = New Global.System.Data.DataColumn("nitc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnitc)
            Me.columnnitv = New Global.System.Data.DataColumn("nitv", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnitv)
            Me.columnusuario = New Global.System.Data.DataColumn("usuario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnusuario)
            Me.columnfecha = New Global.System.Data.DataColumn("fecha", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha)
            Me.columnhora = New Global.System.Data.DataColumn("hora", GetType(Global.System.TimeSpan), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhora)
            Me.columndescrip = New Global.System.Data.DataColumn("descrip", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescrip)
            Me.columndoc_afec = New Global.System.Data.DataColumn("doc_afec", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndoc_afec)
            Me.columnafecta = New Global.System.Data.DataColumn("afecta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnafecta)
            Me.columnsubtotal = New Global.System.Data.DataColumn("subtotal", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsubtotal)
            Me.columnpor_desc = New Global.System.Data.DataColumn("por_desc", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpor_desc)
            Me.columndescuento = New Global.System.Data.DataColumn("descuento", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescuento)
            Me.columncta_desc = New Global.System.Data.DataColumn("cta_desc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncta_desc)
            Me.columnpor_ret_f = New Global.System.Data.DataColumn("por_ret_f", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpor_ret_f)
            Me.columnret_f = New Global.System.Data.DataColumn("ret_f", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnret_f)
            Me.columncta_ret_f = New Global.System.Data.DataColumn("cta_ret_f", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncta_ret_f)
            Me.columnpor_iva = New Global.System.Data.DataColumn("por_iva", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpor_iva)
            Me.columniva = New Global.System.Data.DataColumn("iva", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columniva)
            Me.columncta_iva = New Global.System.Data.DataColumn("cta_iva", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncta_iva)
            Me.columnpor_ret_iva = New Global.System.Data.DataColumn("por_ret_iva", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpor_ret_iva)
            Me.columnret_iva = New Global.System.Data.DataColumn("ret_iva", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnret_iva)
            Me.columncta_ret_iva = New Global.System.Data.DataColumn("cta_ret_iva", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncta_ret_iva)
            Me.columnpor_ret_ica = New Global.System.Data.DataColumn("por_ret_ica", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpor_ret_ica)
            Me.columnret_ica = New Global.System.Data.DataColumn("ret_ica", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnret_ica)
            Me.columncta_ret_ica = New Global.System.Data.DataColumn("cta_ret_ica", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncta_ret_ica)
            Me.columntotal = New Global.System.Data.DataColumn("total", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotal)
            Me.columncta_total = New Global.System.Data.DataColumn("cta_total", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncta_total)
            Me.columnestado = New Global.System.Data.DataColumn("estado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnestado)
            Me.columnobserv = New Global.System.Data.DataColumn("observ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobserv)
            Me.columnvmto = New Global.System.Data.DataColumn("vmto", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvmto)
            Me.columndir_ent = New Global.System.Data.DataColumn("dir_ent", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndir_ent)
            Me.columnciu_ent = New Global.System.Data.DataColumn("ciu_ent", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnciu_ent)
            Me.columno_compra = New Global.System.Data.DataColumn("o_compra", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columno_compra)
            Me.columnfecha_o = New Global.System.Data.DataColumn("fecha_o", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha_o)
            Me.columncc = New Global.System.Data.DataColumn("cc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncc)
            Me.columno_con = New Global.System.Data.DataColumn("o_con", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columno_con)
            Me.columnt1 = New Global.System.Data.DataColumn("t1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt1)
            Me.columnd1 = New Global.System.Data.DataColumn("d1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnd1)
            Me.columnv1 = New Global.System.Data.DataColumn("v1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnv1)
            Me.columncta1 = New Global.System.Data.DataColumn("cta1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncta1)
            Me.columnt2 = New Global.System.Data.DataColumn("t2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt2)
            Me.columnd2 = New Global.System.Data.DataColumn("d2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnd2)
            Me.columnv2 = New Global.System.Data.DataColumn("v2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnv2)
            Me.columncta2 = New Global.System.Data.DataColumn("cta2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncta2)
            Me.columnt3 = New Global.System.Data.DataColumn("t3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnt3)
            Me.columnd3 = New Global.System.Data.DataColumn("d3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnd3)
            Me.columnv3 = New Global.System.Data.DataColumn("v3", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnv3)
            Me.columncta3 = New Global.System.Data.DataColumn("cta3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncta3)
            Me.columnentregar = New Global.System.Data.DataColumn("entregar", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnentregar)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columndoc}, true))
            Me.columndoc.AllowDBNull = false
            Me.columndoc.Unique = true
            Me.columndoc.MaxLength = 15
            Me.columnnum.AllowDBNull = false
            Me.columntipodoc.AllowDBNull = false
            Me.columntipodoc.MaxLength = 4
            Me.columndoc_de.AllowDBNull = false
            Me.columndoc_de.MaxLength = 3
            Me.columnnitc.AllowDBNull = false
            Me.columnnitc.MaxLength = 15
            Me.columnnitv.AllowDBNull = false
            Me.columnnitv.MaxLength = 15
            Me.columnusuario.AllowDBNull = false
            Me.columnusuario.MaxLength = 15
            Me.columnfecha.AllowDBNull = false
            Me.columnhora.AllowDBNull = false
            Me.columndescrip.AllowDBNull = false
            Me.columndescrip.MaxLength = 21845
            Me.columndoc_afec.AllowDBNull = false
            Me.columndoc_afec.MaxLength = 15
            Me.columnafecta.AllowDBNull = false
            Me.columnafecta.MaxLength = 2
            Me.columnsubtotal.AllowDBNull = false
            Me.columnpor_desc.AllowDBNull = false
            Me.columndescuento.AllowDBNull = false
            Me.columncta_desc.AllowDBNull = false
            Me.columncta_desc.MaxLength = 15
            Me.columnpor_ret_f.AllowDBNull = false
            Me.columnret_f.AllowDBNull = false
            Me.columncta_ret_f.AllowDBNull = false
            Me.columncta_ret_f.MaxLength = 15
            Me.columnpor_iva.AllowDBNull = false
            Me.columniva.AllowDBNull = false
            Me.columncta_iva.AllowDBNull = false
            Me.columncta_iva.MaxLength = 15
            Me.columnpor_ret_iva.AllowDBNull = false
            Me.columnret_iva.AllowDBNull = false
            Me.columncta_ret_iva.AllowDBNull = false
            Me.columncta_ret_iva.MaxLength = 15
            Me.columnpor_ret_ica.AllowDBNull = false
            Me.columnret_ica.AllowDBNull = false
            Me.columncta_ret_ica.AllowDBNull = false
            Me.columncta_ret_ica.MaxLength = 15
            Me.columntotal.AllowDBNull = false
            Me.columncta_total.AllowDBNull = false
            Me.columncta_total.MaxLength = 15
            Me.columnestado.AllowDBNull = false
            Me.columnestado.MaxLength = 2
            Me.columnobserv.AllowDBNull = false
            Me.columnobserv.MaxLength = 21845
            Me.columnvmto.AllowDBNull = false
            Me.columndir_ent.AllowDBNull = false
            Me.columndir_ent.MaxLength = 50
            Me.columnciu_ent.AllowDBNull = false
            Me.columnciu_ent.MaxLength = 30
            Me.columno_compra.AllowDBNull = false
            Me.columno_compra.MaxLength = 15
            Me.columnfecha_o.AllowDBNull = false
            Me.columnfecha_o.MaxLength = 15
            Me.columncc.AllowDBNull = false
            Me.columncc.MaxLength = 15
            Me.columno_con.AllowDBNull = false
            Me.columno_con.MaxLength = 2
            Me.columnt1.AllowDBNull = false
            Me.columnt1.MaxLength = 3
            Me.columnd1.AllowDBNull = false
            Me.columnd1.MaxLength = 100
            Me.columnv1.AllowDBNull = false
            Me.columncta1.AllowDBNull = false
            Me.columncta1.MaxLength = 15
            Me.columnt2.AllowDBNull = false
            Me.columnt2.MaxLength = 3
            Me.columnd2.AllowDBNull = false
            Me.columnd2.MaxLength = 100
            Me.columnv2.AllowDBNull = false
            Me.columncta2.AllowDBNull = false
            Me.columncta2.MaxLength = 15
            Me.columnt3.AllowDBNull = false
            Me.columnt3.MaxLength = 3
            Me.columnd3.AllowDBNull = false
            Me.columnd3.MaxLength = 100
            Me.columnv3.AllowDBNull = false
            Me.columncta3.AllowDBNull = false
            Me.columncta3.MaxLength = 15
            Me.columnentregar.AllowDBNull = false
            Me.columnentregar.MaxLength = 21845
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newfacturas01Row() As facturas01Row
            Return CType(Me.NewRow,facturas01Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New facturas01Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(facturas01Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.facturas01RowChangedEvent) Is Nothing) Then
                RaiseEvent facturas01RowChanged(Me, New facturas01RowChangeEvent(CType(e.Row,facturas01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.facturas01RowChangingEvent) Is Nothing) Then
                RaiseEvent facturas01RowChanging(Me, New facturas01RowChangeEvent(CType(e.Row,facturas01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.facturas01RowDeletedEvent) Is Nothing) Then
                RaiseEvent facturas01RowDeleted(Me, New facturas01RowChangeEvent(CType(e.Row,facturas01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.facturas01RowDeletingEvent) Is Nothing) Then
                RaiseEvent facturas01RowDeleting(Me, New facturas01RowChangeEvent(CType(e.Row,facturas01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removefacturas01Row(ByVal row As facturas01Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As saeosteomaterial2012DataSet = New saeosteomaterial2012DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "facturas01DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class facpagos01DataTable
        Inherits Global.System.Data.TypedTableBase(Of facpagos01Row)
        
        Private columndoc As Global.System.Data.DataColumn
        
        Private columntipo As Global.System.Data.DataColumn
        
        Private columndescrip As Global.System.Data.DataColumn
        
        Private columntt As Global.System.Data.DataColumn
        
        Private columnbanco As Global.System.Data.DataColumn
        
        Private columnnumero As Global.System.Data.DataColumn
        
        Private columnvalor As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "facpagos01"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property docColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tipoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property descripColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndescrip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ttColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property bancoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbanco
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property numeroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumero
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property valorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvalor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As facpagos01Row
            Get
                Return CType(Me.Rows(index),facpagos01Row)
            End Get
        End Property
        
        Public Event facpagos01RowChanging As facpagos01RowChangeEventHandler
        
        Public Event facpagos01RowChanged As facpagos01RowChangeEventHandler
        
        Public Event facpagos01RowDeleting As facpagos01RowChangeEventHandler
        
        Public Event facpagos01RowDeleted As facpagos01RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addfacpagos01Row(ByVal row As facpagos01Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addfacpagos01Row(ByVal doc As String, ByVal tipo As String, ByVal descrip As String, ByVal tt As String, ByVal banco As String, ByVal numero As String, ByVal valor As Double) As facpagos01Row
            Dim rowfacpagos01Row As facpagos01Row = CType(Me.NewRow,facpagos01Row)
            Dim columnValuesArray() As Object = New Object() {doc, tipo, descrip, tt, banco, numero, valor}
            rowfacpagos01Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowfacpagos01Row)
            Return rowfacpagos01Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As facpagos01DataTable = CType(MyBase.Clone,facpagos01DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New facpagos01DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columndoc = MyBase.Columns("doc")
            Me.columntipo = MyBase.Columns("tipo")
            Me.columndescrip = MyBase.Columns("descrip")
            Me.columntt = MyBase.Columns("tt")
            Me.columnbanco = MyBase.Columns("banco")
            Me.columnnumero = MyBase.Columns("numero")
            Me.columnvalor = MyBase.Columns("valor")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columndoc = New Global.System.Data.DataColumn("doc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndoc)
            Me.columntipo = New Global.System.Data.DataColumn("tipo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipo)
            Me.columndescrip = New Global.System.Data.DataColumn("descrip", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescrip)
            Me.columntt = New Global.System.Data.DataColumn("tt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntt)
            Me.columnbanco = New Global.System.Data.DataColumn("banco", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbanco)
            Me.columnnumero = New Global.System.Data.DataColumn("numero", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumero)
            Me.columnvalor = New Global.System.Data.DataColumn("valor", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvalor)
            Me.columndoc.AllowDBNull = false
            Me.columndoc.MaxLength = 15
            Me.columntipo.AllowDBNull = false
            Me.columntipo.MaxLength = 15
            Me.columndescrip.AllowDBNull = false
            Me.columndescrip.MaxLength = 60
            Me.columntt.AllowDBNull = false
            Me.columntt.MaxLength = 2
            Me.columnbanco.AllowDBNull = false
            Me.columnbanco.MaxLength = 30
            Me.columnnumero.AllowDBNull = false
            Me.columnnumero.MaxLength = 30
            Me.columnvalor.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newfacpagos01Row() As facpagos01Row
            Return CType(Me.NewRow,facpagos01Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New facpagos01Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(facpagos01Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.facpagos01RowChangedEvent) Is Nothing) Then
                RaiseEvent facpagos01RowChanged(Me, New facpagos01RowChangeEvent(CType(e.Row,facpagos01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.facpagos01RowChangingEvent) Is Nothing) Then
                RaiseEvent facpagos01RowChanging(Me, New facpagos01RowChangeEvent(CType(e.Row,facpagos01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.facpagos01RowDeletedEvent) Is Nothing) Then
                RaiseEvent facpagos01RowDeleted(Me, New facpagos01RowChangeEvent(CType(e.Row,facpagos01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.facpagos01RowDeletingEvent) Is Nothing) Then
                RaiseEvent facpagos01RowDeleting(Me, New facpagos01RowChangeEvent(CType(e.Row,facpagos01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removefacpagos01Row(ByVal row As facpagos01Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As saeosteomaterial2012DataSet = New saeosteomaterial2012DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "facpagos01DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class cobdpenDataTable
        Inherits Global.System.Data.TypedTableBase(Of cobdpenRow)
        
        Private columndoc As Global.System.Data.DataColumn
        
        Private columntipo As Global.System.Data.DataColumn
        
        Private columnnum As Global.System.Data.DataColumn
        
        Private columndescrip As Global.System.Data.DataColumn
        
        Private columntipafec As Global.System.Data.DataColumn
        
        Private columnclasaju As Global.System.Data.DataColumn
        
        Private columnnitc As Global.System.Data.DataColumn
        
        Private columnnomnit As Global.System.Data.DataColumn
        
        Private columnnitcod As Global.System.Data.DataColumn
        
        Private columnnitv As Global.System.Data.DataColumn
        
        Private columnfecha As Global.System.Data.DataColumn
        
        Private columnvmto As Global.System.Data.DataColumn
        
        Private columnconcepto As Global.System.Data.DataColumn
        
        Private columnsubtotal As Global.System.Data.DataColumn
        
        Private columndescto As Global.System.Data.DataColumn
        
        Private columnret As Global.System.Data.DataColumn
        
        Private columniva As Global.System.Data.DataColumn
        
        Private columnv_viva As Global.System.Data.DataColumn
        
        Private columntotal As Global.System.Data.DataColumn
        
        Private columnctasubtotal As Global.System.Data.DataColumn
        
        Private columnctaret As Global.System.Data.DataColumn
        
        Private columnctaiva As Global.System.Data.DataColumn
        
        Private columnctatotal As Global.System.Data.DataColumn
        
        Private columnccosto As Global.System.Data.DataColumn
        
        Private columnotroimp As Global.System.Data.DataColumn
        
        Private columnretiva As Global.System.Data.DataColumn
        
        Private columnctaretiva As Global.System.Data.DataColumn
        
        Private columnretica As Global.System.Data.DataColumn
        
        Private columnctaretica As Global.System.Data.DataColumn
        
        Private columnpagado As Global.System.Data.DataColumn
        
        Private columnrcpos As Global.System.Data.DataColumn
        
        Private columnfechpos As Global.System.Data.DataColumn
        
        Private columnvpos As Global.System.Data.DataColumn
        
        Private columntasa As Global.System.Data.DataColumn
        
        Private columnmoneda As Global.System.Data.DataColumn
        
        Private columnmonloex As Global.System.Data.DataColumn
        
        Private columnestado As Global.System.Data.DataColumn
        
        Private columnsalmov As Global.System.Data.DataColumn
        
        Private columnpagare As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "cobdpen"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property docColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tipoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property numColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property descripColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndescrip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tipafecColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipafec
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property clasajuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclasaju
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nitcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnitc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nomnitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnomnit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nitcodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnitcod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nitvColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnitv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property vmtoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvmto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property conceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnconcepto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property subtotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsubtotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property desctoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndescto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property retColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnret
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columniva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property v_vivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnv_viva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property totalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ctasubtotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctasubtotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ctaretColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctaret
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ctaivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctaiva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ctatotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctatotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ccostoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnccosto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property otroimpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnotroimp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property retivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnretiva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ctaretivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctaretiva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property reticaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnretica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ctareticaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctaretica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pagadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpagado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property rcposColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrcpos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechposColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfechpos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property vposColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvpos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tasaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntasa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property monedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property monloexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmonloex
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property estadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnestado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property salmovColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsalmov
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pagareColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpagare
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As cobdpenRow
            Get
                Return CType(Me.Rows(index),cobdpenRow)
            End Get
        End Property
        
        Public Event cobdpenRowChanging As cobdpenRowChangeEventHandler
        
        Public Event cobdpenRowChanged As cobdpenRowChangeEventHandler
        
        Public Event cobdpenRowDeleting As cobdpenRowChangeEventHandler
        
        Public Event cobdpenRowDeleted As cobdpenRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddcobdpenRow(ByVal row As cobdpenRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddcobdpenRow( _
                    ByVal doc As String,  _
                    ByVal tipo As String,  _
                    ByVal num As Long,  _
                    ByVal descrip As String,  _
                    ByVal tipafec As String,  _
                    ByVal clasaju As String,  _
                    ByVal nitc As String,  _
                    ByVal nomnit As String,  _
                    ByVal nitcod As String,  _
                    ByVal nitv As String,  _
                    ByVal fecha As Date,  _
                    ByVal vmto As Integer,  _
                    ByVal concepto As String,  _
                    ByVal subtotal As Double,  _
                    ByVal descto As Double,  _
                    ByVal ret As Double,  _
                    ByVal iva As Decimal,  _
                    ByVal v_viva As Double,  _
                    ByVal total As Double,  _
                    ByVal ctasubtotal As String,  _
                    ByVal ctaret As String,  _
                    ByVal ctaiva As String,  _
                    ByVal ctatotal As String,  _
                    ByVal ccosto As String,  _
                    ByVal otroimp As String,  _
                    ByVal retiva As Double,  _
                    ByVal ctaretiva As String,  _
                    ByVal retica As Double,  _
                    ByVal ctaretica As String,  _
                    ByVal pagado As Double,  _
                    ByVal rcpos As String,  _
                    ByVal fechpos As String,  _
                    ByVal vpos As Double,  _
                    ByVal tasa As Double,  _
                    ByVal moneda As String,  _
                    ByVal monloex As String,  _
                    ByVal estado As String,  _
                    ByVal salmov As String,  _
                    ByVal pagare As String) As cobdpenRow
            Dim rowcobdpenRow As cobdpenRow = CType(Me.NewRow,cobdpenRow)
            Dim columnValuesArray() As Object = New Object() {doc, tipo, num, descrip, tipafec, clasaju, nitc, nomnit, nitcod, nitv, fecha, vmto, concepto, subtotal, descto, ret, iva, v_viva, total, ctasubtotal, ctaret, ctaiva, ctatotal, ccosto, otroimp, retiva, ctaretiva, retica, ctaretica, pagado, rcpos, fechpos, vpos, tasa, moneda, monloex, estado, salmov, pagare}
            rowcobdpenRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowcobdpenRow)
            Return rowcobdpenRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBydoc(ByVal doc As String) As cobdpenRow
            Return CType(Me.Rows.Find(New Object() {doc}),cobdpenRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As cobdpenDataTable = CType(MyBase.Clone,cobdpenDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New cobdpenDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columndoc = MyBase.Columns("doc")
            Me.columntipo = MyBase.Columns("tipo")
            Me.columnnum = MyBase.Columns("num")
            Me.columndescrip = MyBase.Columns("descrip")
            Me.columntipafec = MyBase.Columns("tipafec")
            Me.columnclasaju = MyBase.Columns("clasaju")
            Me.columnnitc = MyBase.Columns("nitc")
            Me.columnnomnit = MyBase.Columns("nomnit")
            Me.columnnitcod = MyBase.Columns("nitcod")
            Me.columnnitv = MyBase.Columns("nitv")
            Me.columnfecha = MyBase.Columns("fecha")
            Me.columnvmto = MyBase.Columns("vmto")
            Me.columnconcepto = MyBase.Columns("concepto")
            Me.columnsubtotal = MyBase.Columns("subtotal")
            Me.columndescto = MyBase.Columns("descto")
            Me.columnret = MyBase.Columns("ret")
            Me.columniva = MyBase.Columns("iva")
            Me.columnv_viva = MyBase.Columns("v_viva")
            Me.columntotal = MyBase.Columns("total")
            Me.columnctasubtotal = MyBase.Columns("ctasubtotal")
            Me.columnctaret = MyBase.Columns("ctaret")
            Me.columnctaiva = MyBase.Columns("ctaiva")
            Me.columnctatotal = MyBase.Columns("ctatotal")
            Me.columnccosto = MyBase.Columns("ccosto")
            Me.columnotroimp = MyBase.Columns("otroimp")
            Me.columnretiva = MyBase.Columns("retiva")
            Me.columnctaretiva = MyBase.Columns("ctaretiva")
            Me.columnretica = MyBase.Columns("retica")
            Me.columnctaretica = MyBase.Columns("ctaretica")
            Me.columnpagado = MyBase.Columns("pagado")
            Me.columnrcpos = MyBase.Columns("rcpos")
            Me.columnfechpos = MyBase.Columns("fechpos")
            Me.columnvpos = MyBase.Columns("vpos")
            Me.columntasa = MyBase.Columns("tasa")
            Me.columnmoneda = MyBase.Columns("moneda")
            Me.columnmonloex = MyBase.Columns("monloex")
            Me.columnestado = MyBase.Columns("estado")
            Me.columnsalmov = MyBase.Columns("salmov")
            Me.columnpagare = MyBase.Columns("pagare")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columndoc = New Global.System.Data.DataColumn("doc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndoc)
            Me.columntipo = New Global.System.Data.DataColumn("tipo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipo)
            Me.columnnum = New Global.System.Data.DataColumn("num", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnum)
            Me.columndescrip = New Global.System.Data.DataColumn("descrip", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescrip)
            Me.columntipafec = New Global.System.Data.DataColumn("tipafec", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipafec)
            Me.columnclasaju = New Global.System.Data.DataColumn("clasaju", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclasaju)
            Me.columnnitc = New Global.System.Data.DataColumn("nitc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnitc)
            Me.columnnomnit = New Global.System.Data.DataColumn("nomnit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnomnit)
            Me.columnnitcod = New Global.System.Data.DataColumn("nitcod", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnitcod)
            Me.columnnitv = New Global.System.Data.DataColumn("nitv", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnitv)
            Me.columnfecha = New Global.System.Data.DataColumn("fecha", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha)
            Me.columnvmto = New Global.System.Data.DataColumn("vmto", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvmto)
            Me.columnconcepto = New Global.System.Data.DataColumn("concepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconcepto)
            Me.columnsubtotal = New Global.System.Data.DataColumn("subtotal", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsubtotal)
            Me.columndescto = New Global.System.Data.DataColumn("descto", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescto)
            Me.columnret = New Global.System.Data.DataColumn("ret", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnret)
            Me.columniva = New Global.System.Data.DataColumn("iva", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columniva)
            Me.columnv_viva = New Global.System.Data.DataColumn("v_viva", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnv_viva)
            Me.columntotal = New Global.System.Data.DataColumn("total", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotal)
            Me.columnctasubtotal = New Global.System.Data.DataColumn("ctasubtotal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctasubtotal)
            Me.columnctaret = New Global.System.Data.DataColumn("ctaret", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctaret)
            Me.columnctaiva = New Global.System.Data.DataColumn("ctaiva", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctaiva)
            Me.columnctatotal = New Global.System.Data.DataColumn("ctatotal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctatotal)
            Me.columnccosto = New Global.System.Data.DataColumn("ccosto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnccosto)
            Me.columnotroimp = New Global.System.Data.DataColumn("otroimp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnotroimp)
            Me.columnretiva = New Global.System.Data.DataColumn("retiva", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnretiva)
            Me.columnctaretiva = New Global.System.Data.DataColumn("ctaretiva", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctaretiva)
            Me.columnretica = New Global.System.Data.DataColumn("retica", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnretica)
            Me.columnctaretica = New Global.System.Data.DataColumn("ctaretica", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctaretica)
            Me.columnpagado = New Global.System.Data.DataColumn("pagado", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpagado)
            Me.columnrcpos = New Global.System.Data.DataColumn("rcpos", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrcpos)
            Me.columnfechpos = New Global.System.Data.DataColumn("fechpos", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfechpos)
            Me.columnvpos = New Global.System.Data.DataColumn("vpos", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvpos)
            Me.columntasa = New Global.System.Data.DataColumn("tasa", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntasa)
            Me.columnmoneda = New Global.System.Data.DataColumn("moneda", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmoneda)
            Me.columnmonloex = New Global.System.Data.DataColumn("monloex", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmonloex)
            Me.columnestado = New Global.System.Data.DataColumn("estado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnestado)
            Me.columnsalmov = New Global.System.Data.DataColumn("salmov", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsalmov)
            Me.columnpagare = New Global.System.Data.DataColumn("pagare", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpagare)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columndoc}, true))
            Me.columndoc.AllowDBNull = false
            Me.columndoc.Unique = true
            Me.columndoc.MaxLength = 15
            Me.columntipo.AllowDBNull = false
            Me.columntipo.MaxLength = 4
            Me.columnnum.AllowDBNull = false
            Me.columndescrip.AllowDBNull = false
            Me.columndescrip.MaxLength = 40
            Me.columntipafec.AllowDBNull = false
            Me.columntipafec.MaxLength = 4
            Me.columnclasaju.AllowDBNull = false
            Me.columnclasaju.MaxLength = 1
            Me.columnnitc.AllowDBNull = false
            Me.columnnitc.MaxLength = 15
            Me.columnnomnit.AllowDBNull = false
            Me.columnnomnit.MaxLength = 100
            Me.columnnitcod.AllowDBNull = false
            Me.columnnitcod.MaxLength = 15
            Me.columnnitv.AllowDBNull = false
            Me.columnnitv.MaxLength = 15
            Me.columnfecha.AllowDBNull = false
            Me.columnvmto.AllowDBNull = false
            Me.columnconcepto.AllowDBNull = false
            Me.columnconcepto.MaxLength = 100
            Me.columnsubtotal.AllowDBNull = false
            Me.columndescto.AllowDBNull = false
            Me.columnret.AllowDBNull = false
            Me.columniva.AllowDBNull = false
            Me.columnv_viva.AllowDBNull = false
            Me.columntotal.AllowDBNull = false
            Me.columnctasubtotal.AllowDBNull = false
            Me.columnctasubtotal.MaxLength = 15
            Me.columnctaret.AllowDBNull = false
            Me.columnctaret.MaxLength = 15
            Me.columnctaiva.AllowDBNull = false
            Me.columnctaiva.MaxLength = 15
            Me.columnctatotal.AllowDBNull = false
            Me.columnctatotal.MaxLength = 15
            Me.columnccosto.AllowDBNull = false
            Me.columnccosto.MaxLength = 15
            Me.columnotroimp.AllowDBNull = false
            Me.columnotroimp.MaxLength = 1
            Me.columnretiva.AllowDBNull = false
            Me.columnctaretiva.AllowDBNull = false
            Me.columnctaretiva.MaxLength = 15
            Me.columnretica.AllowDBNull = false
            Me.columnctaretica.AllowDBNull = false
            Me.columnctaretica.MaxLength = 15
            Me.columnpagado.AllowDBNull = false
            Me.columnrcpos.AllowDBNull = false
            Me.columnrcpos.MaxLength = 10
            Me.columnfechpos.AllowDBNull = false
            Me.columnfechpos.MaxLength = 15
            Me.columnvpos.AllowDBNull = false
            Me.columntasa.AllowDBNull = false
            Me.columnmoneda.AllowDBNull = false
            Me.columnmoneda.MaxLength = 2
            Me.columnmonloex.AllowDBNull = false
            Me.columnmonloex.MaxLength = 1
            Me.columnestado.AllowDBNull = false
            Me.columnestado.MaxLength = 2
            Me.columnsalmov.AllowDBNull = false
            Me.columnsalmov.MaxLength = 1
            Me.columnpagare.AllowDBNull = false
            Me.columnpagare.MaxLength = 15
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewcobdpenRow() As cobdpenRow
            Return CType(Me.NewRow,cobdpenRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New cobdpenRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(cobdpenRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.cobdpenRowChangedEvent) Is Nothing) Then
                RaiseEvent cobdpenRowChanged(Me, New cobdpenRowChangeEvent(CType(e.Row,cobdpenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.cobdpenRowChangingEvent) Is Nothing) Then
                RaiseEvent cobdpenRowChanging(Me, New cobdpenRowChangeEvent(CType(e.Row,cobdpenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.cobdpenRowDeletedEvent) Is Nothing) Then
                RaiseEvent cobdpenRowDeleted(Me, New cobdpenRowChangeEvent(CType(e.Row,cobdpenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.cobdpenRowDeletingEvent) Is Nothing) Then
                RaiseEvent cobdpenRowDeleting(Me, New cobdpenRowChangeEvent(CType(e.Row,cobdpenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovecobdpenRow(ByVal row As cobdpenRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As saeosteomaterial2012DataSet = New saeosteomaterial2012DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "cobdpenDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ctas_x_pagarDataTable
        Inherits Global.System.Data.TypedTableBase(Of ctas_x_pagarRow)
        
        Private columndoc As Global.System.Data.DataColumn
        
        Private columntipo As Global.System.Data.DataColumn
        
        Private columnnum As Global.System.Data.DataColumn
        
        Private columndoc_ext As Global.System.Data.DataColumn
        
        Private columndescrip As Global.System.Data.DataColumn
        
        Private columntipafec As Global.System.Data.DataColumn
        
        Private columnclasaju As Global.System.Data.DataColumn
        
        Private columnnitc As Global.System.Data.DataColumn
        
        Private columnnomnit As Global.System.Data.DataColumn
        
        Private columnnitcod As Global.System.Data.DataColumn
        
        Private columnfecha As Global.System.Data.DataColumn
        
        Private columnvmto As Global.System.Data.DataColumn
        
        Private columnconcepto As Global.System.Data.DataColumn
        
        Private columnsubtotal As Global.System.Data.DataColumn
        
        Private columndescto As Global.System.Data.DataColumn
        
        Private columnret As Global.System.Data.DataColumn
        
        Private columniva As Global.System.Data.DataColumn
        
        Private columnv_viva As Global.System.Data.DataColumn
        
        Private columntotal As Global.System.Data.DataColumn
        
        Private columnctasubtotal As Global.System.Data.DataColumn
        
        Private columnctaret As Global.System.Data.DataColumn
        
        Private columnctaiva As Global.System.Data.DataColumn
        
        Private columnctatotal As Global.System.Data.DataColumn
        
        Private columnccosto As Global.System.Data.DataColumn
        
        Private columnotroimp As Global.System.Data.DataColumn
        
        Private columnretiva As Global.System.Data.DataColumn
        
        Private columnctaretiva As Global.System.Data.DataColumn
        
        Private columnretica As Global.System.Data.DataColumn
        
        Private columnctaretica As Global.System.Data.DataColumn
        
        Private columnpagado As Global.System.Data.DataColumn
        
        Private columnrcpos As Global.System.Data.DataColumn
        
        Private columnfechpos As Global.System.Data.DataColumn
        
        Private columnvpos As Global.System.Data.DataColumn
        
        Private columntasa As Global.System.Data.DataColumn
        
        Private columnmoneda As Global.System.Data.DataColumn
        
        Private columnmonloex As Global.System.Data.DataColumn
        
        Private columnestado As Global.System.Data.DataColumn
        
        Private columnsalmov As Global.System.Data.DataColumn
        
        Private columnpagare As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ctas_x_pagar"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property docColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tipoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property numColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property doc_extColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndoc_ext
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property descripColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndescrip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tipafecColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipafec
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property clasajuColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclasaju
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nitcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnitc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nomnitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnomnit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nitcodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnitcod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property vmtoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvmto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property conceptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnconcepto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property subtotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsubtotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property desctoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndescto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property retColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnret
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columniva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property v_vivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnv_viva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property totalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ctasubtotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctasubtotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ctaretColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctaret
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ctaivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctaiva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ctatotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctatotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ccostoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnccosto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property otroimpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnotroimp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property retivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnretiva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ctaretivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctaretiva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property reticaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnretica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ctareticaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctaretica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pagadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpagado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property rcposColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrcpos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechposColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfechpos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property vposColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvpos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tasaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntasa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property monedaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmoneda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property monloexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmonloex
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property estadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnestado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property salmovColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsalmov
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pagareColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpagare
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ctas_x_pagarRow
            Get
                Return CType(Me.Rows(index),ctas_x_pagarRow)
            End Get
        End Property
        
        Public Event ctas_x_pagarRowChanging As ctas_x_pagarRowChangeEventHandler
        
        Public Event ctas_x_pagarRowChanged As ctas_x_pagarRowChangeEventHandler
        
        Public Event ctas_x_pagarRowDeleting As ctas_x_pagarRowChangeEventHandler
        
        Public Event ctas_x_pagarRowDeleted As ctas_x_pagarRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addctas_x_pagarRow(ByVal row As ctas_x_pagarRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addctas_x_pagarRow( _
                    ByVal doc As String,  _
                    ByVal tipo As String,  _
                    ByVal num As Long,  _
                    ByVal doc_ext As String,  _
                    ByVal descrip As String,  _
                    ByVal tipafec As String,  _
                    ByVal clasaju As String,  _
                    ByVal nitc As String,  _
                    ByVal nomnit As String,  _
                    ByVal nitcod As String,  _
                    ByVal fecha As Date,  _
                    ByVal vmto As Integer,  _
                    ByVal concepto As String,  _
                    ByVal subtotal As Double,  _
                    ByVal descto As Double,  _
                    ByVal ret As Double,  _
                    ByVal iva As Decimal,  _
                    ByVal v_viva As Double,  _
                    ByVal total As Double,  _
                    ByVal ctasubtotal As String,  _
                    ByVal ctaret As String,  _
                    ByVal ctaiva As String,  _
                    ByVal ctatotal As String,  _
                    ByVal ccosto As String,  _
                    ByVal otroimp As String,  _
                    ByVal retiva As Double,  _
                    ByVal ctaretiva As String,  _
                    ByVal retica As Double,  _
                    ByVal ctaretica As String,  _
                    ByVal pagado As Double,  _
                    ByVal rcpos As String,  _
                    ByVal fechpos As String,  _
                    ByVal vpos As Double,  _
                    ByVal tasa As Double,  _
                    ByVal moneda As String,  _
                    ByVal monloex As String,  _
                    ByVal estado As String,  _
                    ByVal salmov As String,  _
                    ByVal pagare As String) As ctas_x_pagarRow
            Dim rowctas_x_pagarRow As ctas_x_pagarRow = CType(Me.NewRow,ctas_x_pagarRow)
            Dim columnValuesArray() As Object = New Object() {doc, tipo, num, doc_ext, descrip, tipafec, clasaju, nitc, nomnit, nitcod, fecha, vmto, concepto, subtotal, descto, ret, iva, v_viva, total, ctasubtotal, ctaret, ctaiva, ctatotal, ccosto, otroimp, retiva, ctaretiva, retica, ctaretica, pagado, rcpos, fechpos, vpos, tasa, moneda, monloex, estado, salmov, pagare}
            rowctas_x_pagarRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowctas_x_pagarRow)
            Return rowctas_x_pagarRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBydoc(ByVal doc As String) As ctas_x_pagarRow
            Return CType(Me.Rows.Find(New Object() {doc}),ctas_x_pagarRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ctas_x_pagarDataTable = CType(MyBase.Clone,ctas_x_pagarDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ctas_x_pagarDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columndoc = MyBase.Columns("doc")
            Me.columntipo = MyBase.Columns("tipo")
            Me.columnnum = MyBase.Columns("num")
            Me.columndoc_ext = MyBase.Columns("doc_ext")
            Me.columndescrip = MyBase.Columns("descrip")
            Me.columntipafec = MyBase.Columns("tipafec")
            Me.columnclasaju = MyBase.Columns("clasaju")
            Me.columnnitc = MyBase.Columns("nitc")
            Me.columnnomnit = MyBase.Columns("nomnit")
            Me.columnnitcod = MyBase.Columns("nitcod")
            Me.columnfecha = MyBase.Columns("fecha")
            Me.columnvmto = MyBase.Columns("vmto")
            Me.columnconcepto = MyBase.Columns("concepto")
            Me.columnsubtotal = MyBase.Columns("subtotal")
            Me.columndescto = MyBase.Columns("descto")
            Me.columnret = MyBase.Columns("ret")
            Me.columniva = MyBase.Columns("iva")
            Me.columnv_viva = MyBase.Columns("v_viva")
            Me.columntotal = MyBase.Columns("total")
            Me.columnctasubtotal = MyBase.Columns("ctasubtotal")
            Me.columnctaret = MyBase.Columns("ctaret")
            Me.columnctaiva = MyBase.Columns("ctaiva")
            Me.columnctatotal = MyBase.Columns("ctatotal")
            Me.columnccosto = MyBase.Columns("ccosto")
            Me.columnotroimp = MyBase.Columns("otroimp")
            Me.columnretiva = MyBase.Columns("retiva")
            Me.columnctaretiva = MyBase.Columns("ctaretiva")
            Me.columnretica = MyBase.Columns("retica")
            Me.columnctaretica = MyBase.Columns("ctaretica")
            Me.columnpagado = MyBase.Columns("pagado")
            Me.columnrcpos = MyBase.Columns("rcpos")
            Me.columnfechpos = MyBase.Columns("fechpos")
            Me.columnvpos = MyBase.Columns("vpos")
            Me.columntasa = MyBase.Columns("tasa")
            Me.columnmoneda = MyBase.Columns("moneda")
            Me.columnmonloex = MyBase.Columns("monloex")
            Me.columnestado = MyBase.Columns("estado")
            Me.columnsalmov = MyBase.Columns("salmov")
            Me.columnpagare = MyBase.Columns("pagare")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columndoc = New Global.System.Data.DataColumn("doc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndoc)
            Me.columntipo = New Global.System.Data.DataColumn("tipo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipo)
            Me.columnnum = New Global.System.Data.DataColumn("num", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnum)
            Me.columndoc_ext = New Global.System.Data.DataColumn("doc_ext", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndoc_ext)
            Me.columndescrip = New Global.System.Data.DataColumn("descrip", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescrip)
            Me.columntipafec = New Global.System.Data.DataColumn("tipafec", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipafec)
            Me.columnclasaju = New Global.System.Data.DataColumn("clasaju", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclasaju)
            Me.columnnitc = New Global.System.Data.DataColumn("nitc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnitc)
            Me.columnnomnit = New Global.System.Data.DataColumn("nomnit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnomnit)
            Me.columnnitcod = New Global.System.Data.DataColumn("nitcod", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnitcod)
            Me.columnfecha = New Global.System.Data.DataColumn("fecha", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha)
            Me.columnvmto = New Global.System.Data.DataColumn("vmto", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvmto)
            Me.columnconcepto = New Global.System.Data.DataColumn("concepto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconcepto)
            Me.columnsubtotal = New Global.System.Data.DataColumn("subtotal", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsubtotal)
            Me.columndescto = New Global.System.Data.DataColumn("descto", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescto)
            Me.columnret = New Global.System.Data.DataColumn("ret", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnret)
            Me.columniva = New Global.System.Data.DataColumn("iva", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columniva)
            Me.columnv_viva = New Global.System.Data.DataColumn("v_viva", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnv_viva)
            Me.columntotal = New Global.System.Data.DataColumn("total", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotal)
            Me.columnctasubtotal = New Global.System.Data.DataColumn("ctasubtotal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctasubtotal)
            Me.columnctaret = New Global.System.Data.DataColumn("ctaret", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctaret)
            Me.columnctaiva = New Global.System.Data.DataColumn("ctaiva", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctaiva)
            Me.columnctatotal = New Global.System.Data.DataColumn("ctatotal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctatotal)
            Me.columnccosto = New Global.System.Data.DataColumn("ccosto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnccosto)
            Me.columnotroimp = New Global.System.Data.DataColumn("otroimp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnotroimp)
            Me.columnretiva = New Global.System.Data.DataColumn("retiva", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnretiva)
            Me.columnctaretiva = New Global.System.Data.DataColumn("ctaretiva", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctaretiva)
            Me.columnretica = New Global.System.Data.DataColumn("retica", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnretica)
            Me.columnctaretica = New Global.System.Data.DataColumn("ctaretica", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctaretica)
            Me.columnpagado = New Global.System.Data.DataColumn("pagado", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpagado)
            Me.columnrcpos = New Global.System.Data.DataColumn("rcpos", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrcpos)
            Me.columnfechpos = New Global.System.Data.DataColumn("fechpos", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfechpos)
            Me.columnvpos = New Global.System.Data.DataColumn("vpos", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvpos)
            Me.columntasa = New Global.System.Data.DataColumn("tasa", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntasa)
            Me.columnmoneda = New Global.System.Data.DataColumn("moneda", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmoneda)
            Me.columnmonloex = New Global.System.Data.DataColumn("monloex", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmonloex)
            Me.columnestado = New Global.System.Data.DataColumn("estado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnestado)
            Me.columnsalmov = New Global.System.Data.DataColumn("salmov", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsalmov)
            Me.columnpagare = New Global.System.Data.DataColumn("pagare", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpagare)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columndoc}, true))
            Me.columndoc.AllowDBNull = false
            Me.columndoc.Unique = true
            Me.columndoc.MaxLength = 15
            Me.columntipo.AllowDBNull = false
            Me.columntipo.MaxLength = 4
            Me.columnnum.AllowDBNull = false
            Me.columndoc_ext.AllowDBNull = false
            Me.columndoc_ext.MaxLength = 20
            Me.columndescrip.AllowDBNull = false
            Me.columndescrip.MaxLength = 40
            Me.columntipafec.AllowDBNull = false
            Me.columntipafec.MaxLength = 4
            Me.columnclasaju.AllowDBNull = false
            Me.columnclasaju.MaxLength = 1
            Me.columnnitc.AllowDBNull = false
            Me.columnnitc.MaxLength = 15
            Me.columnnomnit.AllowDBNull = false
            Me.columnnomnit.MaxLength = 100
            Me.columnnitcod.AllowDBNull = false
            Me.columnnitcod.MaxLength = 15
            Me.columnfecha.AllowDBNull = false
            Me.columnvmto.AllowDBNull = false
            Me.columnconcepto.AllowDBNull = false
            Me.columnconcepto.MaxLength = 100
            Me.columnsubtotal.AllowDBNull = false
            Me.columndescto.AllowDBNull = false
            Me.columnret.AllowDBNull = false
            Me.columniva.AllowDBNull = false
            Me.columnv_viva.AllowDBNull = false
            Me.columntotal.AllowDBNull = false
            Me.columnctasubtotal.AllowDBNull = false
            Me.columnctasubtotal.MaxLength = 15
            Me.columnctaret.AllowDBNull = false
            Me.columnctaret.MaxLength = 15
            Me.columnctaiva.AllowDBNull = false
            Me.columnctaiva.MaxLength = 15
            Me.columnctatotal.AllowDBNull = false
            Me.columnctatotal.MaxLength = 15
            Me.columnccosto.AllowDBNull = false
            Me.columnccosto.MaxLength = 15
            Me.columnotroimp.AllowDBNull = false
            Me.columnotroimp.MaxLength = 1
            Me.columnretiva.AllowDBNull = false
            Me.columnctaretiva.AllowDBNull = false
            Me.columnctaretiva.MaxLength = 15
            Me.columnretica.AllowDBNull = false
            Me.columnctaretica.AllowDBNull = false
            Me.columnctaretica.MaxLength = 15
            Me.columnpagado.AllowDBNull = false
            Me.columnrcpos.AllowDBNull = false
            Me.columnrcpos.MaxLength = 10
            Me.columnfechpos.AllowDBNull = false
            Me.columnfechpos.MaxLength = 10
            Me.columnvpos.AllowDBNull = false
            Me.columntasa.AllowDBNull = false
            Me.columnmoneda.AllowDBNull = false
            Me.columnmoneda.MaxLength = 2
            Me.columnmonloex.AllowDBNull = false
            Me.columnmonloex.MaxLength = 1
            Me.columnestado.AllowDBNull = false
            Me.columnestado.MaxLength = 2
            Me.columnsalmov.AllowDBNull = false
            Me.columnsalmov.MaxLength = 1
            Me.columnpagare.AllowDBNull = false
            Me.columnpagare.MaxLength = 15
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newctas_x_pagarRow() As ctas_x_pagarRow
            Return CType(Me.NewRow,ctas_x_pagarRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ctas_x_pagarRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ctas_x_pagarRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ctas_x_pagarRowChangedEvent) Is Nothing) Then
                RaiseEvent ctas_x_pagarRowChanged(Me, New ctas_x_pagarRowChangeEvent(CType(e.Row,ctas_x_pagarRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ctas_x_pagarRowChangingEvent) Is Nothing) Then
                RaiseEvent ctas_x_pagarRowChanging(Me, New ctas_x_pagarRowChangeEvent(CType(e.Row,ctas_x_pagarRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ctas_x_pagarRowDeletedEvent) Is Nothing) Then
                RaiseEvent ctas_x_pagarRowDeleted(Me, New ctas_x_pagarRowChangeEvent(CType(e.Row,ctas_x_pagarRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ctas_x_pagarRowDeletingEvent) Is Nothing) Then
                RaiseEvent ctas_x_pagarRowDeleting(Me, New ctas_x_pagarRowChangeEvent(CType(e.Row,ctas_x_pagarRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removectas_x_pagarRow(ByVal row As ctas_x_pagarRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As saeosteomaterial2012DataSet = New saeosteomaterial2012DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ctas_x_pagarDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class parafactsDataTable
        Inherits Global.System.Data.TypedTableBase(Of parafactsRow)
        
        Private columnfactura As Global.System.Data.DataColumn
        
        Private columndoc As Global.System.Data.DataColumn
        
        Private columntipodoc As Global.System.Data.DataColumn
        
        Private columnnumfact As Global.System.Data.DataColumn
        
        Private columnafecinv As Global.System.Data.DataColumn
        
        Private columnfecha As Global.System.Data.DataColumn
        
        Private columnnitcpre As Global.System.Data.DataColumn
        
        Private columnnitc As Global.System.Data.DataColumn
        
        Private columnnitvpre As Global.System.Data.DataColumn
        
        Private columnnitv As Global.System.Data.DataColumn
        
        Private columncodinv As Global.System.Data.DataColumn
        
        Private columncentrocost As Global.System.Data.DataColumn
        
        Private columnfacdifuniemp As Global.System.Data.DataColumn
        
        Private columnprecautcant As Global.System.Data.DataColumn
        
        Private columnbodpred As Global.System.Data.DataColumn
        
        Private columnidbod As Global.System.Data.DataColumn
        
        Private columnmargmin As Global.System.Data.DataColumn
        
        Private columnmargen As Global.System.Data.DataColumn
        
        Private columnconcomipre As Global.System.Data.DataColumn
        
        Private columnconcomi As Global.System.Data.DataColumn
        
        Private columnfpagopre As Global.System.Data.DataColumn
        
        Private columncualfp As Global.System.Data.DataColumn
        
        Private columnformatfac As Global.System.Data.DataColumn
        
        Private columnlogofac As Global.System.Data.DataColumn
        
        Private columnformatped As Global.System.Data.DataColumn
        
        Private columnlogoped As Global.System.Data.DataColumn
        
        Private columnformatcot As Global.System.Data.DataColumn
        
        Private columnlogocot As Global.System.Data.DataColumn
        
        Private columntipocompa As Global.System.Data.DataColumn
        
        Private columncomentario As Global.System.Data.DataColumn
        
        Private columnimp_dec As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "parafacts"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property facturaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfactura
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property docColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tipodocColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipodoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property numfactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumfact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property afecinvColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnafecinv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecha
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nitcpreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnitcpre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nitcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnitc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nitvpreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnitvpre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nitvColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnitv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codinvColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodinv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property centrocostColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncentrocost
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property facdifuniempColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfacdifuniemp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property precautcantColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprecautcant
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property bodpredColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbodpred
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property idbodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidbod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property margminColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmargmin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property margenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmargen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property concomipreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnconcomipre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property concomiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnconcomi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fpagopreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfpagopre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cualfpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncualfp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property formatfacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnformatfac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property logofacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlogofac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property formatpedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnformatped
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property logopedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlogoped
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property formatcotColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnformatcot
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property logocotColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlogocot
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tipocompaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipocompa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property comentarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomentario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property imp_decColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimp_dec
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As parafactsRow
            Get
                Return CType(Me.Rows(index),parafactsRow)
            End Get
        End Property
        
        Public Event parafactsRowChanging As parafactsRowChangeEventHandler
        
        Public Event parafactsRowChanged As parafactsRowChangeEventHandler
        
        Public Event parafactsRowDeleting As parafactsRowChangeEventHandler
        
        Public Event parafactsRowDeleted As parafactsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddparafactsRow(ByVal row As parafactsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddparafactsRow( _
                    ByVal factura As String,  _
                    ByVal doc As String,  _
                    ByVal tipodoc As String,  _
                    ByVal numfact As String,  _
                    ByVal afecinv As String,  _
                    ByVal fecha As String,  _
                    ByVal nitcpre As String,  _
                    ByVal nitc As String,  _
                    ByVal nitvpre As String,  _
                    ByVal nitv As String,  _
                    ByVal codinv As String,  _
                    ByVal centrocost As String,  _
                    ByVal facdifuniemp As String,  _
                    ByVal precautcant As String,  _
                    ByVal bodpred As String,  _
                    ByVal idbod As String,  _
                    ByVal margmin As String,  _
                    ByVal margen As String,  _
                    ByVal concomipre As String,  _
                    ByVal concomi As String,  _
                    ByVal fpagopre As String,  _
                    ByVal cualfp As String,  _
                    ByVal formatfac As String,  _
                    ByVal logofac() As Byte,  _
                    ByVal formatped As String,  _
                    ByVal logoped() As Byte,  _
                    ByVal formatcot As String,  _
                    ByVal logocot() As Byte,  _
                    ByVal tipocompa As String,  _
                    ByVal comentario As String,  _
                    ByVal imp_dec As String) As parafactsRow
            Dim rowparafactsRow As parafactsRow = CType(Me.NewRow,parafactsRow)
            Dim columnValuesArray() As Object = New Object() {factura, doc, tipodoc, numfact, afecinv, fecha, nitcpre, nitc, nitvpre, nitv, codinv, centrocost, facdifuniemp, precautcant, bodpred, idbod, margmin, margen, concomipre, concomi, fpagopre, cualfp, formatfac, logofac, formatped, logoped, formatcot, logocot, tipocompa, comentario, imp_dec}
            rowparafactsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowparafactsRow)
            Return rowparafactsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByfactura(ByVal factura As String) As parafactsRow
            Return CType(Me.Rows.Find(New Object() {factura}),parafactsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As parafactsDataTable = CType(MyBase.Clone,parafactsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New parafactsDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnfactura = MyBase.Columns("factura")
            Me.columndoc = MyBase.Columns("doc")
            Me.columntipodoc = MyBase.Columns("tipodoc")
            Me.columnnumfact = MyBase.Columns("numfact")
            Me.columnafecinv = MyBase.Columns("afecinv")
            Me.columnfecha = MyBase.Columns("fecha")
            Me.columnnitcpre = MyBase.Columns("nitcpre")
            Me.columnnitc = MyBase.Columns("nitc")
            Me.columnnitvpre = MyBase.Columns("nitvpre")
            Me.columnnitv = MyBase.Columns("nitv")
            Me.columncodinv = MyBase.Columns("codinv")
            Me.columncentrocost = MyBase.Columns("centrocost")
            Me.columnfacdifuniemp = MyBase.Columns("facdifuniemp")
            Me.columnprecautcant = MyBase.Columns("precautcant")
            Me.columnbodpred = MyBase.Columns("bodpred")
            Me.columnidbod = MyBase.Columns("idbod")
            Me.columnmargmin = MyBase.Columns("margmin")
            Me.columnmargen = MyBase.Columns("margen")
            Me.columnconcomipre = MyBase.Columns("concomipre")
            Me.columnconcomi = MyBase.Columns("concomi")
            Me.columnfpagopre = MyBase.Columns("fpagopre")
            Me.columncualfp = MyBase.Columns("cualfp")
            Me.columnformatfac = MyBase.Columns("formatfac")
            Me.columnlogofac = MyBase.Columns("logofac")
            Me.columnformatped = MyBase.Columns("formatped")
            Me.columnlogoped = MyBase.Columns("logoped")
            Me.columnformatcot = MyBase.Columns("formatcot")
            Me.columnlogocot = MyBase.Columns("logocot")
            Me.columntipocompa = MyBase.Columns("tipocompa")
            Me.columncomentario = MyBase.Columns("comentario")
            Me.columnimp_dec = MyBase.Columns("imp_dec")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnfactura = New Global.System.Data.DataColumn("factura", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfactura)
            Me.columndoc = New Global.System.Data.DataColumn("doc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndoc)
            Me.columntipodoc = New Global.System.Data.DataColumn("tipodoc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipodoc)
            Me.columnnumfact = New Global.System.Data.DataColumn("numfact", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumfact)
            Me.columnafecinv = New Global.System.Data.DataColumn("afecinv", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnafecinv)
            Me.columnfecha = New Global.System.Data.DataColumn("fecha", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecha)
            Me.columnnitcpre = New Global.System.Data.DataColumn("nitcpre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnitcpre)
            Me.columnnitc = New Global.System.Data.DataColumn("nitc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnitc)
            Me.columnnitvpre = New Global.System.Data.DataColumn("nitvpre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnitvpre)
            Me.columnnitv = New Global.System.Data.DataColumn("nitv", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnitv)
            Me.columncodinv = New Global.System.Data.DataColumn("codinv", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodinv)
            Me.columncentrocost = New Global.System.Data.DataColumn("centrocost", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncentrocost)
            Me.columnfacdifuniemp = New Global.System.Data.DataColumn("facdifuniemp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfacdifuniemp)
            Me.columnprecautcant = New Global.System.Data.DataColumn("precautcant", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprecautcant)
            Me.columnbodpred = New Global.System.Data.DataColumn("bodpred", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbodpred)
            Me.columnidbod = New Global.System.Data.DataColumn("idbod", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidbod)
            Me.columnmargmin = New Global.System.Data.DataColumn("margmin", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmargmin)
            Me.columnmargen = New Global.System.Data.DataColumn("margen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmargen)
            Me.columnconcomipre = New Global.System.Data.DataColumn("concomipre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconcomipre)
            Me.columnconcomi = New Global.System.Data.DataColumn("concomi", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconcomi)
            Me.columnfpagopre = New Global.System.Data.DataColumn("fpagopre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfpagopre)
            Me.columncualfp = New Global.System.Data.DataColumn("cualfp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncualfp)
            Me.columnformatfac = New Global.System.Data.DataColumn("formatfac", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnformatfac)
            Me.columnlogofac = New Global.System.Data.DataColumn("logofac", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlogofac)
            Me.columnformatped = New Global.System.Data.DataColumn("formatped", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnformatped)
            Me.columnlogoped = New Global.System.Data.DataColumn("logoped", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlogoped)
            Me.columnformatcot = New Global.System.Data.DataColumn("formatcot", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnformatcot)
            Me.columnlogocot = New Global.System.Data.DataColumn("logocot", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlogocot)
            Me.columntipocompa = New Global.System.Data.DataColumn("tipocompa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipocompa)
            Me.columncomentario = New Global.System.Data.DataColumn("comentario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomentario)
            Me.columnimp_dec = New Global.System.Data.DataColumn("imp_dec", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimp_dec)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnfactura}, true))
            Me.columnfactura.AllowDBNull = false
            Me.columnfactura.Unique = true
            Me.columnfactura.MaxLength = 10
            Me.columndoc.AllowDBNull = false
            Me.columndoc.MaxLength = 3
            Me.columntipodoc.AllowDBNull = false
            Me.columntipodoc.MaxLength = 4
            Me.columnnumfact.AllowDBNull = false
            Me.columnnumfact.MaxLength = 15
            Me.columnafecinv.AllowDBNull = false
            Me.columnafecinv.MaxLength = 3
            Me.columnfecha.AllowDBNull = false
            Me.columnfecha.MaxLength = 15
            Me.columnnitcpre.AllowDBNull = false
            Me.columnnitcpre.MaxLength = 3
            Me.columnnitc.AllowDBNull = false
            Me.columnnitc.MaxLength = 15
            Me.columnnitvpre.AllowDBNull = false
            Me.columnnitvpre.MaxLength = 3
            Me.columnnitv.AllowDBNull = false
            Me.columnnitv.MaxLength = 15
            Me.columncodinv.AllowDBNull = false
            Me.columncodinv.MaxLength = 3
            Me.columncentrocost.AllowDBNull = false
            Me.columncentrocost.MaxLength = 3
            Me.columnfacdifuniemp.AllowDBNull = false
            Me.columnfacdifuniemp.MaxLength = 3
            Me.columnprecautcant.AllowDBNull = false
            Me.columnprecautcant.MaxLength = 3
            Me.columnbodpred.AllowDBNull = false
            Me.columnbodpred.MaxLength = 3
            Me.columnidbod.AllowDBNull = false
            Me.columnidbod.MaxLength = 15
            Me.columnmargmin.AllowDBNull = false
            Me.columnmargmin.MaxLength = 3
            Me.columnmargen.AllowDBNull = false
            Me.columnmargen.MaxLength = 15
            Me.columnconcomipre.AllowDBNull = false
            Me.columnconcomipre.MaxLength = 3
            Me.columnconcomi.AllowDBNull = false
            Me.columnconcomi.MaxLength = 10
            Me.columnfpagopre.AllowDBNull = false
            Me.columnfpagopre.MaxLength = 3
            Me.columncualfp.AllowDBNull = false
            Me.columncualfp.MaxLength = 15
            Me.columnformatfac.AllowDBNull = false
            Me.columnformatfac.MaxLength = 10
            Me.columnformatped.AllowDBNull = false
            Me.columnformatped.MaxLength = 10
            Me.columnformatcot.AllowDBNull = false
            Me.columnformatcot.MaxLength = 10
            Me.columntipocompa.AllowDBNull = false
            Me.columntipocompa.MaxLength = 30
            Me.columncomentario.AllowDBNull = false
            Me.columncomentario.MaxLength = 21845
            Me.columnimp_dec.AllowDBNull = false
            Me.columnimp_dec.MaxLength = 3
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewparafactsRow() As parafactsRow
            Return CType(Me.NewRow,parafactsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New parafactsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(parafactsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.parafactsRowChangedEvent) Is Nothing) Then
                RaiseEvent parafactsRowChanged(Me, New parafactsRowChangeEvent(CType(e.Row,parafactsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.parafactsRowChangingEvent) Is Nothing) Then
                RaiseEvent parafactsRowChanging(Me, New parafactsRowChangeEvent(CType(e.Row,parafactsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.parafactsRowDeletedEvent) Is Nothing) Then
                RaiseEvent parafactsRowDeleted(Me, New parafactsRowChangeEvent(CType(e.Row,parafactsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.parafactsRowDeletingEvent) Is Nothing) Then
                RaiseEvent parafactsRowDeleting(Me, New parafactsRowChangeEvent(CType(e.Row,parafactsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveparafactsRow(ByVal row As parafactsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As saeosteomaterial2012DataSet = New saeosteomaterial2012DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "parafactsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class selpucDataTable
        Inherits Global.System.Data.TypedTableBase(Of selpucRow)
        
        Private columncodigo As Global.System.Data.DataColumn
        
        Private columndescripcion As Global.System.Data.DataColumn
        
        Private columnnaturaleza As Global.System.Data.DataColumn
        
        Private columnnivel As Global.System.Data.DataColumn
        
        Private columntipo As Global.System.Data.DataColumn
        
        Private columnsaldo As Global.System.Data.DataColumn
        
        Private columnsaldo00 As Global.System.Data.DataColumn
        
        Private columndebito00 As Global.System.Data.DataColumn
        
        Private columncredito00 As Global.System.Data.DataColumn
        
        Private columndebito01 As Global.System.Data.DataColumn
        
        Private columncredito01 As Global.System.Data.DataColumn
        
        Private columnsaldo01 As Global.System.Data.DataColumn
        
        Private columndebito02 As Global.System.Data.DataColumn
        
        Private columncredito02 As Global.System.Data.DataColumn
        
        Private columnsaldo02 As Global.System.Data.DataColumn
        
        Private columndebito03 As Global.System.Data.DataColumn
        
        Private columncredito03 As Global.System.Data.DataColumn
        
        Private columnsaldo03 As Global.System.Data.DataColumn
        
        Private columndebito04 As Global.System.Data.DataColumn
        
        Private columncredito04 As Global.System.Data.DataColumn
        
        Private columnsaldo04 As Global.System.Data.DataColumn
        
        Private columndebito05 As Global.System.Data.DataColumn
        
        Private columncredito05 As Global.System.Data.DataColumn
        
        Private columnsaldo05 As Global.System.Data.DataColumn
        
        Private columndebito06 As Global.System.Data.DataColumn
        
        Private columncredito06 As Global.System.Data.DataColumn
        
        Private columnsaldo06 As Global.System.Data.DataColumn
        
        Private columndebito07 As Global.System.Data.DataColumn
        
        Private columncredito07 As Global.System.Data.DataColumn
        
        Private columnsaldo07 As Global.System.Data.DataColumn
        
        Private columndebito08 As Global.System.Data.DataColumn
        
        Private columncredito08 As Global.System.Data.DataColumn
        
        Private columnsaldo08 As Global.System.Data.DataColumn
        
        Private columndebito09 As Global.System.Data.DataColumn
        
        Private columncredito09 As Global.System.Data.DataColumn
        
        Private columnsaldo09 As Global.System.Data.DataColumn
        
        Private columndebito10 As Global.System.Data.DataColumn
        
        Private columncredito10 As Global.System.Data.DataColumn
        
        Private columnsaldo10 As Global.System.Data.DataColumn
        
        Private columndebito11 As Global.System.Data.DataColumn
        
        Private columncredito11 As Global.System.Data.DataColumn
        
        Private columnsaldo11 As Global.System.Data.DataColumn
        
        Private columndebito12 As Global.System.Data.DataColumn
        
        Private columncredito12 As Global.System.Data.DataColumn
        
        Private columnsaldo12 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "selpuc"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codigoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodigo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property descripcionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndescripcion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property naturalezaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnaturaleza
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nivelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnivel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tipoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property saldoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsaldo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property saldo00Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsaldo00
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property debito00Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndebito00
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property credito00Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncredito00
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property debito01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndebito01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property credito01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncredito01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property saldo01Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsaldo01
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property debito02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndebito02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property credito02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncredito02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property saldo02Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsaldo02
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property debito03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndebito03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property credito03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncredito03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property saldo03Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsaldo03
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property debito04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndebito04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property credito04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncredito04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property saldo04Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsaldo04
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property debito05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndebito05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property credito05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncredito05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property saldo05Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsaldo05
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property debito06Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndebito06
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property credito06Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncredito06
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property saldo06Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsaldo06
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property debito07Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndebito07
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property credito07Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncredito07
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property saldo07Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsaldo07
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property debito08Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndebito08
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property credito08Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncredito08
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property saldo08Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsaldo08
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property debito09Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndebito09
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property credito09Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncredito09
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property saldo09Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsaldo09
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property debito10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndebito10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property credito10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncredito10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property saldo10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsaldo10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property debito11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndebito11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property credito11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncredito11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property saldo11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsaldo11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property debito12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndebito12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property credito12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncredito12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property saldo12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnsaldo12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As selpucRow
            Get
                Return CType(Me.Rows(index),selpucRow)
            End Get
        End Property
        
        Public Event selpucRowChanging As selpucRowChangeEventHandler
        
        Public Event selpucRowChanged As selpucRowChangeEventHandler
        
        Public Event selpucRowDeleting As selpucRowChangeEventHandler
        
        Public Event selpucRowDeleted As selpucRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddselpucRow(ByVal row As selpucRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddselpucRow( _
                    ByVal codigo As String,  _
                    ByVal descripcion As String,  _
                    ByVal naturaleza As String,  _
                    ByVal nivel As String,  _
                    ByVal tipo As String,  _
                    ByVal saldo As Double,  _
                    ByVal saldo00 As Double,  _
                    ByVal debito00 As Double,  _
                    ByVal credito00 As Double,  _
                    ByVal debito01 As Double,  _
                    ByVal credito01 As Double,  _
                    ByVal saldo01 As Double,  _
                    ByVal debito02 As Double,  _
                    ByVal credito02 As Double,  _
                    ByVal saldo02 As Double,  _
                    ByVal debito03 As Double,  _
                    ByVal credito03 As Double,  _
                    ByVal saldo03 As Double,  _
                    ByVal debito04 As Double,  _
                    ByVal credito04 As Double,  _
                    ByVal saldo04 As Double,  _
                    ByVal debito05 As Double,  _
                    ByVal credito05 As Double,  _
                    ByVal saldo05 As Double,  _
                    ByVal debito06 As Double,  _
                    ByVal credito06 As Double,  _
                    ByVal saldo06 As Double,  _
                    ByVal debito07 As Double,  _
                    ByVal credito07 As Double,  _
                    ByVal saldo07 As Double,  _
                    ByVal debito08 As Double,  _
                    ByVal credito08 As Double,  _
                    ByVal saldo08 As Double,  _
                    ByVal debito09 As Double,  _
                    ByVal credito09 As Double,  _
                    ByVal saldo09 As Double,  _
                    ByVal debito10 As Double,  _
                    ByVal credito10 As Double,  _
                    ByVal saldo10 As Double,  _
                    ByVal debito11 As Double,  _
                    ByVal credito11 As Double,  _
                    ByVal saldo11 As Double,  _
                    ByVal debito12 As Double,  _
                    ByVal credito12 As Double,  _
                    ByVal saldo12 As Double) As selpucRow
            Dim rowselpucRow As selpucRow = CType(Me.NewRow,selpucRow)
            Dim columnValuesArray() As Object = New Object() {codigo, descripcion, naturaleza, nivel, tipo, saldo, saldo00, debito00, credito00, debito01, credito01, saldo01, debito02, credito02, saldo02, debito03, credito03, saldo03, debito04, credito04, saldo04, debito05, credito05, saldo05, debito06, credito06, saldo06, debito07, credito07, saldo07, debito08, credito08, saldo08, debito09, credito09, saldo09, debito10, credito10, saldo10, debito11, credito11, saldo11, debito12, credito12, saldo12}
            rowselpucRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowselpucRow)
            Return rowselpucRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBycodigo(ByVal codigo As String) As selpucRow
            Return CType(Me.Rows.Find(New Object() {codigo}),selpucRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As selpucDataTable = CType(MyBase.Clone,selpucDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New selpucDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncodigo = MyBase.Columns("codigo")
            Me.columndescripcion = MyBase.Columns("descripcion")
            Me.columnnaturaleza = MyBase.Columns("naturaleza")
            Me.columnnivel = MyBase.Columns("nivel")
            Me.columntipo = MyBase.Columns("tipo")
            Me.columnsaldo = MyBase.Columns("saldo")
            Me.columnsaldo00 = MyBase.Columns("saldo00")
            Me.columndebito00 = MyBase.Columns("debito00")
            Me.columncredito00 = MyBase.Columns("credito00")
            Me.columndebito01 = MyBase.Columns("debito01")
            Me.columncredito01 = MyBase.Columns("credito01")
            Me.columnsaldo01 = MyBase.Columns("saldo01")
            Me.columndebito02 = MyBase.Columns("debito02")
            Me.columncredito02 = MyBase.Columns("credito02")
            Me.columnsaldo02 = MyBase.Columns("saldo02")
            Me.columndebito03 = MyBase.Columns("debito03")
            Me.columncredito03 = MyBase.Columns("credito03")
            Me.columnsaldo03 = MyBase.Columns("saldo03")
            Me.columndebito04 = MyBase.Columns("debito04")
            Me.columncredito04 = MyBase.Columns("credito04")
            Me.columnsaldo04 = MyBase.Columns("saldo04")
            Me.columndebito05 = MyBase.Columns("debito05")
            Me.columncredito05 = MyBase.Columns("credito05")
            Me.columnsaldo05 = MyBase.Columns("saldo05")
            Me.columndebito06 = MyBase.Columns("debito06")
            Me.columncredito06 = MyBase.Columns("credito06")
            Me.columnsaldo06 = MyBase.Columns("saldo06")
            Me.columndebito07 = MyBase.Columns("debito07")
            Me.columncredito07 = MyBase.Columns("credito07")
            Me.columnsaldo07 = MyBase.Columns("saldo07")
            Me.columndebito08 = MyBase.Columns("debito08")
            Me.columncredito08 = MyBase.Columns("credito08")
            Me.columnsaldo08 = MyBase.Columns("saldo08")
            Me.columndebito09 = MyBase.Columns("debito09")
            Me.columncredito09 = MyBase.Columns("credito09")
            Me.columnsaldo09 = MyBase.Columns("saldo09")
            Me.columndebito10 = MyBase.Columns("debito10")
            Me.columncredito10 = MyBase.Columns("credito10")
            Me.columnsaldo10 = MyBase.Columns("saldo10")
            Me.columndebito11 = MyBase.Columns("debito11")
            Me.columncredito11 = MyBase.Columns("credito11")
            Me.columnsaldo11 = MyBase.Columns("saldo11")
            Me.columndebito12 = MyBase.Columns("debito12")
            Me.columncredito12 = MyBase.Columns("credito12")
            Me.columnsaldo12 = MyBase.Columns("saldo12")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncodigo = New Global.System.Data.DataColumn("codigo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodigo)
            Me.columndescripcion = New Global.System.Data.DataColumn("descripcion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescripcion)
            Me.columnnaturaleza = New Global.System.Data.DataColumn("naturaleza", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnaturaleza)
            Me.columnnivel = New Global.System.Data.DataColumn("nivel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnivel)
            Me.columntipo = New Global.System.Data.DataColumn("tipo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipo)
            Me.columnsaldo = New Global.System.Data.DataColumn("saldo", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsaldo)
            Me.columnsaldo00 = New Global.System.Data.DataColumn("saldo00", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsaldo00)
            Me.columndebito00 = New Global.System.Data.DataColumn("debito00", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndebito00)
            Me.columncredito00 = New Global.System.Data.DataColumn("credito00", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncredito00)
            Me.columndebito01 = New Global.System.Data.DataColumn("debito01", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndebito01)
            Me.columncredito01 = New Global.System.Data.DataColumn("credito01", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncredito01)
            Me.columnsaldo01 = New Global.System.Data.DataColumn("saldo01", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsaldo01)
            Me.columndebito02 = New Global.System.Data.DataColumn("debito02", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndebito02)
            Me.columncredito02 = New Global.System.Data.DataColumn("credito02", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncredito02)
            Me.columnsaldo02 = New Global.System.Data.DataColumn("saldo02", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsaldo02)
            Me.columndebito03 = New Global.System.Data.DataColumn("debito03", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndebito03)
            Me.columncredito03 = New Global.System.Data.DataColumn("credito03", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncredito03)
            Me.columnsaldo03 = New Global.System.Data.DataColumn("saldo03", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsaldo03)
            Me.columndebito04 = New Global.System.Data.DataColumn("debito04", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndebito04)
            Me.columncredito04 = New Global.System.Data.DataColumn("credito04", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncredito04)
            Me.columnsaldo04 = New Global.System.Data.DataColumn("saldo04", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsaldo04)
            Me.columndebito05 = New Global.System.Data.DataColumn("debito05", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndebito05)
            Me.columncredito05 = New Global.System.Data.DataColumn("credito05", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncredito05)
            Me.columnsaldo05 = New Global.System.Data.DataColumn("saldo05", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsaldo05)
            Me.columndebito06 = New Global.System.Data.DataColumn("debito06", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndebito06)
            Me.columncredito06 = New Global.System.Data.DataColumn("credito06", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncredito06)
            Me.columnsaldo06 = New Global.System.Data.DataColumn("saldo06", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsaldo06)
            Me.columndebito07 = New Global.System.Data.DataColumn("debito07", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndebito07)
            Me.columncredito07 = New Global.System.Data.DataColumn("credito07", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncredito07)
            Me.columnsaldo07 = New Global.System.Data.DataColumn("saldo07", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsaldo07)
            Me.columndebito08 = New Global.System.Data.DataColumn("debito08", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndebito08)
            Me.columncredito08 = New Global.System.Data.DataColumn("credito08", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncredito08)
            Me.columnsaldo08 = New Global.System.Data.DataColumn("saldo08", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsaldo08)
            Me.columndebito09 = New Global.System.Data.DataColumn("debito09", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndebito09)
            Me.columncredito09 = New Global.System.Data.DataColumn("credito09", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncredito09)
            Me.columnsaldo09 = New Global.System.Data.DataColumn("saldo09", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsaldo09)
            Me.columndebito10 = New Global.System.Data.DataColumn("debito10", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndebito10)
            Me.columncredito10 = New Global.System.Data.DataColumn("credito10", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncredito10)
            Me.columnsaldo10 = New Global.System.Data.DataColumn("saldo10", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsaldo10)
            Me.columndebito11 = New Global.System.Data.DataColumn("debito11", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndebito11)
            Me.columncredito11 = New Global.System.Data.DataColumn("credito11", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncredito11)
            Me.columnsaldo11 = New Global.System.Data.DataColumn("saldo11", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsaldo11)
            Me.columndebito12 = New Global.System.Data.DataColumn("debito12", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndebito12)
            Me.columncredito12 = New Global.System.Data.DataColumn("credito12", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncredito12)
            Me.columnsaldo12 = New Global.System.Data.DataColumn("saldo12", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsaldo12)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columncodigo}, true))
            Me.columncodigo.AllowDBNull = false
            Me.columncodigo.Unique = true
            Me.columncodigo.MaxLength = 10
            Me.columndescripcion.AllowDBNull = false
            Me.columndescripcion.MaxLength = 100
            Me.columnnaturaleza.AllowDBNull = false
            Me.columnnaturaleza.MaxLength = 1
            Me.columnnivel.AllowDBNull = false
            Me.columnnivel.MaxLength = 12
            Me.columntipo.AllowDBNull = false
            Me.columntipo.MaxLength = 10
            Me.columnsaldo.AllowDBNull = false
            Me.columnsaldo00.AllowDBNull = false
            Me.columndebito00.AllowDBNull = false
            Me.columncredito00.AllowDBNull = false
            Me.columndebito01.AllowDBNull = false
            Me.columncredito01.AllowDBNull = false
            Me.columnsaldo01.AllowDBNull = false
            Me.columndebito02.AllowDBNull = false
            Me.columncredito02.AllowDBNull = false
            Me.columnsaldo02.AllowDBNull = false
            Me.columndebito03.AllowDBNull = false
            Me.columncredito03.AllowDBNull = false
            Me.columnsaldo03.AllowDBNull = false
            Me.columndebito04.AllowDBNull = false
            Me.columncredito04.AllowDBNull = false
            Me.columnsaldo04.AllowDBNull = false
            Me.columndebito05.AllowDBNull = false
            Me.columncredito05.AllowDBNull = false
            Me.columnsaldo05.AllowDBNull = false
            Me.columndebito06.AllowDBNull = false
            Me.columncredito06.AllowDBNull = false
            Me.columnsaldo06.AllowDBNull = false
            Me.columndebito07.AllowDBNull = false
            Me.columncredito07.AllowDBNull = false
            Me.columnsaldo07.AllowDBNull = false
            Me.columndebito08.AllowDBNull = false
            Me.columncredito08.AllowDBNull = false
            Me.columnsaldo08.AllowDBNull = false
            Me.columndebito09.AllowDBNull = false
            Me.columncredito09.AllowDBNull = false
            Me.columnsaldo09.AllowDBNull = false
            Me.columndebito10.AllowDBNull = false
            Me.columncredito10.AllowDBNull = false
            Me.columnsaldo10.AllowDBNull = false
            Me.columndebito11.AllowDBNull = false
            Me.columncredito11.AllowDBNull = false
            Me.columnsaldo11.AllowDBNull = false
            Me.columndebito12.AllowDBNull = false
            Me.columncredito12.AllowDBNull = false
            Me.columnsaldo12.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewselpucRow() As selpucRow
            Return CType(Me.NewRow,selpucRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New selpucRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(selpucRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.selpucRowChangedEvent) Is Nothing) Then
                RaiseEvent selpucRowChanged(Me, New selpucRowChangeEvent(CType(e.Row,selpucRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.selpucRowChangingEvent) Is Nothing) Then
                RaiseEvent selpucRowChanging(Me, New selpucRowChangeEvent(CType(e.Row,selpucRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.selpucRowDeletedEvent) Is Nothing) Then
                RaiseEvent selpucRowDeleted(Me, New selpucRowChangeEvent(CType(e.Row,selpucRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.selpucRowDeletingEvent) Is Nothing) Then
                RaiseEvent selpucRowDeleting(Me, New selpucRowChangeEvent(CType(e.Row,selpucRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveselpucRow(ByVal row As selpucRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As saeosteomaterial2012DataSet = New saeosteomaterial2012DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "selpucDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class documentos01DataTable
        Inherits Global.System.Data.TypedTableBase(Of documentos01Row)
        
        Private columnitem As Global.System.Data.DataColumn
        
        Private columndoc As Global.System.Data.DataColumn
        
        Private columntipodoc As Global.System.Data.DataColumn
        
        Private columnperiodo As Global.System.Data.DataColumn
        
        Private columndia As Global.System.Data.DataColumn
        
        Private columncentro As Global.System.Data.DataColumn
        
        Private columndescri As Global.System.Data.DataColumn
        
        Private columndebito As Global.System.Data.DataColumn
        
        Private columncredito As Global.System.Data.DataColumn
        
        Private columncodigo As Global.System.Data.DataColumn
        
        Private columnbase As Global.System.Data.DataColumn
        
        Private columndiasv As Global.System.Data.DataColumn
        
        Private columnfechaven As Global.System.Data.DataColumn
        
        Private columnnit As Global.System.Data.DataColumn
        
        Private columncheque As Global.System.Data.DataColumn
        
        Private columnmodulo As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "documentos01"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property itemColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnitem
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property docColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tipodocColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipodoc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property periodoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnperiodo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property diaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property centroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncentro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property descriColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndescri
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property debitoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndebito
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property creditoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncredito
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codigoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodigo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property baseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbase
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property diasvColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiasv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechavenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfechaven
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property chequeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncheque
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property moduloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmodulo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As documentos01Row
            Get
                Return CType(Me.Rows(index),documentos01Row)
            End Get
        End Property
        
        Public Event documentos01RowChanging As documentos01RowChangeEventHandler
        
        Public Event documentos01RowChanged As documentos01RowChangeEventHandler
        
        Public Event documentos01RowDeleting As documentos01RowChangeEventHandler
        
        Public Event documentos01RowDeleted As documentos01RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Adddocumentos01Row(ByVal row As documentos01Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Adddocumentos01Row( _
                    ByVal item As Integer,  _
                    ByVal doc As Long,  _
                    ByVal tipodoc As String,  _
                    ByVal periodo As String,  _
                    ByVal dia As String,  _
                    ByVal centro As String,  _
                    ByVal descri As String,  _
                    ByVal debito As Double,  _
                    ByVal credito As Double,  _
                    ByVal codigo As String,  _
                    ByVal base As Double,  _
                    ByVal diasv As Integer,  _
                    ByVal fechaven As String,  _
                    ByVal nit As String,  _
                    ByVal cheque As String,  _
                    ByVal modulo As String) As documentos01Row
            Dim rowdocumentos01Row As documentos01Row = CType(Me.NewRow,documentos01Row)
            Dim columnValuesArray() As Object = New Object() {item, doc, tipodoc, periodo, dia, centro, descri, debito, credito, codigo, base, diasv, fechaven, nit, cheque, modulo}
            rowdocumentos01Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowdocumentos01Row)
            Return rowdocumentos01Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As documentos01DataTable = CType(MyBase.Clone,documentos01DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New documentos01DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnitem = MyBase.Columns("item")
            Me.columndoc = MyBase.Columns("doc")
            Me.columntipodoc = MyBase.Columns("tipodoc")
            Me.columnperiodo = MyBase.Columns("periodo")
            Me.columndia = MyBase.Columns("dia")
            Me.columncentro = MyBase.Columns("centro")
            Me.columndescri = MyBase.Columns("descri")
            Me.columndebito = MyBase.Columns("debito")
            Me.columncredito = MyBase.Columns("credito")
            Me.columncodigo = MyBase.Columns("codigo")
            Me.columnbase = MyBase.Columns("base")
            Me.columndiasv = MyBase.Columns("diasv")
            Me.columnfechaven = MyBase.Columns("fechaven")
            Me.columnnit = MyBase.Columns("nit")
            Me.columncheque = MyBase.Columns("cheque")
            Me.columnmodulo = MyBase.Columns("modulo")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnitem = New Global.System.Data.DataColumn("item", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnitem)
            Me.columndoc = New Global.System.Data.DataColumn("doc", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndoc)
            Me.columntipodoc = New Global.System.Data.DataColumn("tipodoc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipodoc)
            Me.columnperiodo = New Global.System.Data.DataColumn("periodo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnperiodo)
            Me.columndia = New Global.System.Data.DataColumn("dia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndia)
            Me.columncentro = New Global.System.Data.DataColumn("centro", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncentro)
            Me.columndescri = New Global.System.Data.DataColumn("descri", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescri)
            Me.columndebito = New Global.System.Data.DataColumn("debito", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndebito)
            Me.columncredito = New Global.System.Data.DataColumn("credito", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncredito)
            Me.columncodigo = New Global.System.Data.DataColumn("codigo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodigo)
            Me.columnbase = New Global.System.Data.DataColumn("base", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbase)
            Me.columndiasv = New Global.System.Data.DataColumn("diasv", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiasv)
            Me.columnfechaven = New Global.System.Data.DataColumn("fechaven", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfechaven)
            Me.columnnit = New Global.System.Data.DataColumn("nit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnit)
            Me.columncheque = New Global.System.Data.DataColumn("cheque", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncheque)
            Me.columnmodulo = New Global.System.Data.DataColumn("modulo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmodulo)
            Me.columnitem.AllowDBNull = false
            Me.columndoc.AllowDBNull = false
            Me.columntipodoc.AllowDBNull = false
            Me.columntipodoc.MaxLength = 2
            Me.columnperiodo.AllowDBNull = false
            Me.columnperiodo.MaxLength = 10
            Me.columndia.AllowDBNull = false
            Me.columndia.MaxLength = 2
            Me.columncentro.AllowDBNull = false
            Me.columncentro.MaxLength = 15
            Me.columndescri.AllowDBNull = false
            Me.columndescri.MaxLength = 50
            Me.columndebito.AllowDBNull = false
            Me.columncredito.AllowDBNull = false
            Me.columncodigo.AllowDBNull = false
            Me.columncodigo.MaxLength = 10
            Me.columnbase.AllowDBNull = false
            Me.columndiasv.AllowDBNull = false
            Me.columnfechaven.AllowDBNull = false
            Me.columnfechaven.MaxLength = 10
            Me.columnnit.AllowDBNull = false
            Me.columnnit.MaxLength = 20
            Me.columncheque.AllowDBNull = false
            Me.columncheque.MaxLength = 20
            Me.columnmodulo.AllowDBNull = false
            Me.columnmodulo.MaxLength = 15
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newdocumentos01Row() As documentos01Row
            Return CType(Me.NewRow,documentos01Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New documentos01Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(documentos01Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.documentos01RowChangedEvent) Is Nothing) Then
                RaiseEvent documentos01RowChanged(Me, New documentos01RowChangeEvent(CType(e.Row,documentos01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.documentos01RowChangingEvent) Is Nothing) Then
                RaiseEvent documentos01RowChanging(Me, New documentos01RowChangeEvent(CType(e.Row,documentos01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.documentos01RowDeletedEvent) Is Nothing) Then
                RaiseEvent documentos01RowDeleted(Me, New documentos01RowChangeEvent(CType(e.Row,documentos01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.documentos01RowDeletingEvent) Is Nothing) Then
                RaiseEvent documentos01RowDeleting(Me, New documentos01RowChangeEvent(CType(e.Row,documentos01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removedocumentos01Row(ByVal row As documentos01Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As saeosteomaterial2012DataSet = New saeosteomaterial2012DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "documentos01DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class contrato_inmDataTable
        Inherits Global.System.Data.TypedTableBase(Of contrato_inmRow)
        
        Private columncod_contra As Global.System.Data.DataColumn
        
        Private columncod_inm As Global.System.Data.DataColumn
        
        Private columnnit_a As Global.System.Data.DataColumn
        
        Private columnnomb_arr As Global.System.Data.DataColumn
        
        Private columnnit_d As Global.System.Data.DataColumn
        
        Private columnfechaini As Global.System.Data.DataColumn
        
        Private columnfechafin As Global.System.Data.DataColumn
        
        Private columnvalor As Global.System.Data.DataColumn
        
        Private columncta_valor As Global.System.Data.DataColumn
        
        Private columnpor_iva As Global.System.Data.DataColumn
        
        Private columncta_iva As Global.System.Data.DataColumn
        
        Private columnrtf As Global.System.Data.DataColumn
        
        Private columncta_rtf As Global.System.Data.DataColumn
        
        Private columnpor_comi As Global.System.Data.DataColumn
        
        Private columncc As Global.System.Data.DataColumn
        
        Private columnmes_total As Global.System.Data.DataColumn
        
        Private columnmes_fact As Global.System.Data.DataColumn
        
        Private columnmes_act As Global.System.Data.DataColumn
        
        Private columnperiodo As Global.System.Data.DataColumn
        
        Private columnnitv As Global.System.Data.DataColumn
        
        Private columnvmto As Global.System.Data.DataColumn
        
        Private columndeposito As Global.System.Data.DataColumn
        
        Private columnfechaF As Global.System.Data.DataColumn
        
        Private columnnitc As Global.System.Data.DataColumn
        
        Private columncta_cli As Global.System.Data.DataColumn
        
        Private columncta_cms As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "contrato_inm"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cod_contraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncod_contra
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cod_inmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncod_inm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nit_aColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnit_a
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nomb_arrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnomb_arr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nit_dColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnit_d
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechainiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfechaini
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechafinColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfechafin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property valorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvalor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cta_valorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncta_valor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property por_ivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpor_iva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cta_ivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncta_iva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property rtfColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrtf
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cta_rtfColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncta_rtf
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property por_comiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpor_comi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ccColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mes_totalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmes_total
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mes_factColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmes_fact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property mes_actColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmes_act
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property periodoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnperiodo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nitvColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnitv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property vmtoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvmto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property depositoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndeposito
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fechaFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfechaF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nitcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnitc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cta_cliColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncta_cli
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cta_cmsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncta_cms
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As contrato_inmRow
            Get
                Return CType(Me.Rows(index),contrato_inmRow)
            End Get
        End Property
        
        Public Event contrato_inmRowChanging As contrato_inmRowChangeEventHandler
        
        Public Event contrato_inmRowChanged As contrato_inmRowChangeEventHandler
        
        Public Event contrato_inmRowDeleting As contrato_inmRowChangeEventHandler
        
        Public Event contrato_inmRowDeleted As contrato_inmRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addcontrato_inmRow(ByVal row As contrato_inmRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addcontrato_inmRow( _
                    ByVal cod_contra As String,  _
                    ByVal cod_inm As String,  _
                    ByVal nit_a As String,  _
                    ByVal nomb_arr As String,  _
                    ByVal nit_d As String,  _
                    ByVal fechaini As Date,  _
                    ByVal fechafin As Date,  _
                    ByVal valor As Double,  _
                    ByVal cta_valor As String,  _
                    ByVal por_iva As Decimal,  _
                    ByVal cta_iva As String,  _
                    ByVal rtf As Double,  _
                    ByVal cta_rtf As String,  _
                    ByVal por_comi As Decimal,  _
                    ByVal cc As String,  _
                    ByVal mes_total As Double,  _
                    ByVal mes_fact As Double,  _
                    ByVal mes_act As Double,  _
                    ByVal periodo As String,  _
                    ByVal nitv As String,  _
                    ByVal vmto As Integer,  _
                    ByVal deposito As Double,  _
                    ByVal fechaF As Date,  _
                    ByVal nitc As String,  _
                    ByVal cta_cli As String,  _
                    ByVal cta_cms As String) As contrato_inmRow
            Dim rowcontrato_inmRow As contrato_inmRow = CType(Me.NewRow,contrato_inmRow)
            Dim columnValuesArray() As Object = New Object() {cod_contra, cod_inm, nit_a, nomb_arr, nit_d, fechaini, fechafin, valor, cta_valor, por_iva, cta_iva, rtf, cta_rtf, por_comi, cc, mes_total, mes_fact, mes_act, periodo, nitv, vmto, deposito, fechaF, nitc, cta_cli, cta_cms}
            rowcontrato_inmRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowcontrato_inmRow)
            Return rowcontrato_inmRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBycod_contra(ByVal cod_contra As String) As contrato_inmRow
            Return CType(Me.Rows.Find(New Object() {cod_contra}),contrato_inmRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As contrato_inmDataTable = CType(MyBase.Clone,contrato_inmDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New contrato_inmDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncod_contra = MyBase.Columns("cod_contra")
            Me.columncod_inm = MyBase.Columns("cod_inm")
            Me.columnnit_a = MyBase.Columns("nit_a")
            Me.columnnomb_arr = MyBase.Columns("nomb_arr")
            Me.columnnit_d = MyBase.Columns("nit_d")
            Me.columnfechaini = MyBase.Columns("fechaini")
            Me.columnfechafin = MyBase.Columns("fechafin")
            Me.columnvalor = MyBase.Columns("valor")
            Me.columncta_valor = MyBase.Columns("cta_valor")
            Me.columnpor_iva = MyBase.Columns("por_iva")
            Me.columncta_iva = MyBase.Columns("cta_iva")
            Me.columnrtf = MyBase.Columns("rtf")
            Me.columncta_rtf = MyBase.Columns("cta_rtf")
            Me.columnpor_comi = MyBase.Columns("por_comi")
            Me.columncc = MyBase.Columns("cc")
            Me.columnmes_total = MyBase.Columns("mes_total")
            Me.columnmes_fact = MyBase.Columns("mes_fact")
            Me.columnmes_act = MyBase.Columns("mes_act")
            Me.columnperiodo = MyBase.Columns("periodo")
            Me.columnnitv = MyBase.Columns("nitv")
            Me.columnvmto = MyBase.Columns("vmto")
            Me.columndeposito = MyBase.Columns("deposito")
            Me.columnfechaF = MyBase.Columns("fechaF")
            Me.columnnitc = MyBase.Columns("nitc")
            Me.columncta_cli = MyBase.Columns("cta_cli")
            Me.columncta_cms = MyBase.Columns("cta_cms")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncod_contra = New Global.System.Data.DataColumn("cod_contra", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncod_contra)
            Me.columncod_inm = New Global.System.Data.DataColumn("cod_inm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncod_inm)
            Me.columnnit_a = New Global.System.Data.DataColumn("nit_a", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnit_a)
            Me.columnnomb_arr = New Global.System.Data.DataColumn("nomb_arr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnomb_arr)
            Me.columnnit_d = New Global.System.Data.DataColumn("nit_d", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnit_d)
            Me.columnfechaini = New Global.System.Data.DataColumn("fechaini", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfechaini)
            Me.columnfechafin = New Global.System.Data.DataColumn("fechafin", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfechafin)
            Me.columnvalor = New Global.System.Data.DataColumn("valor", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvalor)
            Me.columncta_valor = New Global.System.Data.DataColumn("cta_valor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncta_valor)
            Me.columnpor_iva = New Global.System.Data.DataColumn("por_iva", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpor_iva)
            Me.columncta_iva = New Global.System.Data.DataColumn("cta_iva", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncta_iva)
            Me.columnrtf = New Global.System.Data.DataColumn("rtf", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrtf)
            Me.columncta_rtf = New Global.System.Data.DataColumn("cta_rtf", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncta_rtf)
            Me.columnpor_comi = New Global.System.Data.DataColumn("por_comi", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpor_comi)
            Me.columncc = New Global.System.Data.DataColumn("cc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncc)
            Me.columnmes_total = New Global.System.Data.DataColumn("mes_total", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmes_total)
            Me.columnmes_fact = New Global.System.Data.DataColumn("mes_fact", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmes_fact)
            Me.columnmes_act = New Global.System.Data.DataColumn("mes_act", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmes_act)
            Me.columnperiodo = New Global.System.Data.DataColumn("periodo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnperiodo)
            Me.columnnitv = New Global.System.Data.DataColumn("nitv", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnitv)
            Me.columnvmto = New Global.System.Data.DataColumn("vmto", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvmto)
            Me.columndeposito = New Global.System.Data.DataColumn("deposito", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndeposito)
            Me.columnfechaF = New Global.System.Data.DataColumn("fechaF", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfechaF)
            Me.columnnitc = New Global.System.Data.DataColumn("nitc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnitc)
            Me.columncta_cli = New Global.System.Data.DataColumn("cta_cli", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncta_cli)
            Me.columncta_cms = New Global.System.Data.DataColumn("cta_cms", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncta_cms)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columncod_contra}, true))
            Me.columncod_contra.AllowDBNull = false
            Me.columncod_contra.Unique = true
            Me.columncod_contra.MaxLength = 30
            Me.columncod_inm.AllowDBNull = false
            Me.columncod_inm.MaxLength = 30
            Me.columnnit_a.AllowDBNull = false
            Me.columnnit_a.MaxLength = 15
            Me.columnnomb_arr.AllowDBNull = false
            Me.columnnomb_arr.MaxLength = 200
            Me.columnnit_d.AllowDBNull = false
            Me.columnnit_d.MaxLength = 15
            Me.columnfechaini.AllowDBNull = false
            Me.columnfechafin.AllowDBNull = false
            Me.columnvalor.AllowDBNull = false
            Me.columncta_valor.AllowDBNull = false
            Me.columncta_valor.MaxLength = 15
            Me.columnpor_iva.AllowDBNull = false
            Me.columncta_iva.AllowDBNull = false
            Me.columncta_iva.MaxLength = 15
            Me.columnrtf.AllowDBNull = false
            Me.columncta_rtf.AllowDBNull = false
            Me.columncta_rtf.MaxLength = 15
            Me.columnpor_comi.AllowDBNull = false
            Me.columncc.AllowDBNull = false
            Me.columncc.MaxLength = 15
            Me.columnmes_total.AllowDBNull = false
            Me.columnmes_fact.AllowDBNull = false
            Me.columnmes_act.AllowDBNull = false
            Me.columnperiodo.AllowDBNull = false
            Me.columnperiodo.MaxLength = 15
            Me.columnnitv.AllowDBNull = false
            Me.columnnitv.MaxLength = 15
            Me.columnvmto.AllowDBNull = false
            Me.columndeposito.AllowDBNull = false
            Me.columnfechaF.AllowDBNull = false
            Me.columnnitc.AllowDBNull = false
            Me.columnnitc.MaxLength = 15
            Me.columncta_cli.AllowDBNull = false
            Me.columncta_cli.MaxLength = 15
            Me.columncta_cms.AllowDBNull = false
            Me.columncta_cms.MaxLength = 15
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newcontrato_inmRow() As contrato_inmRow
            Return CType(Me.NewRow,contrato_inmRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New contrato_inmRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(contrato_inmRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.contrato_inmRowChangedEvent) Is Nothing) Then
                RaiseEvent contrato_inmRowChanged(Me, New contrato_inmRowChangeEvent(CType(e.Row,contrato_inmRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.contrato_inmRowChangingEvent) Is Nothing) Then
                RaiseEvent contrato_inmRowChanging(Me, New contrato_inmRowChangeEvent(CType(e.Row,contrato_inmRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.contrato_inmRowDeletedEvent) Is Nothing) Then
                RaiseEvent contrato_inmRowDeleted(Me, New contrato_inmRowChangeEvent(CType(e.Row,contrato_inmRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.contrato_inmRowDeletingEvent) Is Nothing) Then
                RaiseEvent contrato_inmRowDeleting(Me, New contrato_inmRowChangeEvent(CType(e.Row,contrato_inmRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removecontrato_inmRow(ByVal row As contrato_inmRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As saeosteomaterial2012DataSet = New saeosteomaterial2012DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "contrato_inmDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class parcontratoDataTable
        Inherits Global.System.Data.TypedTableBase(Of parcontratoRow)
        
        Private columncomentario As Global.System.Data.DataColumn
        
        Private columnctavent As Global.System.Data.DataColumn
        
        Private columnctaiva As Global.System.Data.DataColumn
        
        Private columnctartf As Global.System.Data.DataColumn
        
        Private columnparf As Global.System.Data.DataColumn
        
        Private columndocf As Global.System.Data.DataColumn
        
        Private columntipof1 As Global.System.Data.DataColumn
        
        Private columna_f1 As Global.System.Data.DataColumn
        
        Private columnhr1 As Global.System.Data.DataColumn
        
        Private columnreso1 As Global.System.Data.DataColumn
        
        Private columnfecexp1 As Global.System.Data.DataColumn
        
        Private columnfeclim1 As Global.System.Data.DataColumn
        
        Private columnini1 As Global.System.Data.DataColumn
        
        Private columnfin1 As Global.System.Data.DataColumn
        
        Private columnpre1 As Global.System.Data.DataColumn
        
        Private columnctacli As Global.System.Data.DataColumn
        
        Private columnctacms As Global.System.Data.DataColumn
        
        Private columnmora As Global.System.Data.DataColumn
        
        Private columnlogo As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "parcontrato"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property comentarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomentario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ctaventColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctavent
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ctaivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctaiva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ctartfColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctartf
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property parfColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnparf
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property docfColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndocf
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tipof1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntipof1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property a_f1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columna_f1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property hr1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnhr1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property reso1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnreso1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fecexp1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnfecexp1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property feclim1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnfeclim1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ini1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnini1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fin1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnfin1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pre1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnpre1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ctacliColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctacli
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ctacmsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnctacms
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property moraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmora
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property logoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlogo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As parcontratoRow
            Get
                Return CType(Me.Rows(index),parcontratoRow)
            End Get
        End Property
        
        Public Event parcontratoRowChanging As parcontratoRowChangeEventHandler
        
        Public Event parcontratoRowChanged As parcontratoRowChangeEventHandler
        
        Public Event parcontratoRowDeleting As parcontratoRowChangeEventHandler
        
        Public Event parcontratoRowDeleted As parcontratoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddparcontratoRow(ByVal row As parcontratoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddparcontratoRow( _
                    ByVal comentario As String,  _
                    ByVal ctavent As String,  _
                    ByVal ctaiva As String,  _
                    ByVal ctartf As String,  _
                    ByVal parf As String,  _
                    ByVal docf As String,  _
                    ByVal tipof1 As String,  _
                    ByVal a_f1 As Long,  _
                    ByVal hr1 As String,  _
                    ByVal reso1 As String,  _
                    ByVal fecexp1 As Date,  _
                    ByVal feclim1 As Date,  _
                    ByVal ini1 As Long,  _
                    ByVal fin1 As Long,  _
                    ByVal pre1 As String,  _
                    ByVal ctacli As String,  _
                    ByVal ctacms As String,  _
                    ByVal mora As Decimal,  _
                    ByVal logo() As Byte) As parcontratoRow
            Dim rowparcontratoRow As parcontratoRow = CType(Me.NewRow,parcontratoRow)
            Dim columnValuesArray() As Object = New Object() {comentario, ctavent, ctaiva, ctartf, parf, docf, tipof1, a_f1, hr1, reso1, fecexp1, feclim1, ini1, fin1, pre1, ctacli, ctacms, mora, logo}
            rowparcontratoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowparcontratoRow)
            Return rowparcontratoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As parcontratoDataTable = CType(MyBase.Clone,parcontratoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New parcontratoDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncomentario = MyBase.Columns("comentario")
            Me.columnctavent = MyBase.Columns("ctavent")
            Me.columnctaiva = MyBase.Columns("ctaiva")
            Me.columnctartf = MyBase.Columns("ctartf")
            Me.columnparf = MyBase.Columns("parf")
            Me.columndocf = MyBase.Columns("docf")
            Me.columntipof1 = MyBase.Columns("tipof1")
            Me.columna_f1 = MyBase.Columns("a_f1")
            Me.columnhr1 = MyBase.Columns("hr1")
            Me.columnreso1 = MyBase.Columns("reso1")
            Me.columnfecexp1 = MyBase.Columns("fecexp1")
            Me.columnfeclim1 = MyBase.Columns("feclim1")
            Me.columnini1 = MyBase.Columns("ini1")
            Me.columnfin1 = MyBase.Columns("fin1")
            Me.columnpre1 = MyBase.Columns("pre1")
            Me.columnctacli = MyBase.Columns("ctacli")
            Me.columnctacms = MyBase.Columns("ctacms")
            Me.columnmora = MyBase.Columns("mora")
            Me.columnlogo = MyBase.Columns("logo")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncomentario = New Global.System.Data.DataColumn("comentario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomentario)
            Me.columnctavent = New Global.System.Data.DataColumn("ctavent", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctavent)
            Me.columnctaiva = New Global.System.Data.DataColumn("ctaiva", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctaiva)
            Me.columnctartf = New Global.System.Data.DataColumn("ctartf", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctartf)
            Me.columnparf = New Global.System.Data.DataColumn("parf", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnparf)
            Me.columndocf = New Global.System.Data.DataColumn("docf", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndocf)
            Me.columntipof1 = New Global.System.Data.DataColumn("tipof1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipof1)
            Me.columna_f1 = New Global.System.Data.DataColumn("a_f1", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columna_f1)
            Me.columnhr1 = New Global.System.Data.DataColumn("hr1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhr1)
            Me.columnreso1 = New Global.System.Data.DataColumn("reso1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreso1)
            Me.columnfecexp1 = New Global.System.Data.DataColumn("fecexp1", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfecexp1)
            Me.columnfeclim1 = New Global.System.Data.DataColumn("feclim1", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfeclim1)
            Me.columnini1 = New Global.System.Data.DataColumn("ini1", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnini1)
            Me.columnfin1 = New Global.System.Data.DataColumn("fin1", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfin1)
            Me.columnpre1 = New Global.System.Data.DataColumn("pre1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpre1)
            Me.columnctacli = New Global.System.Data.DataColumn("ctacli", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctacli)
            Me.columnctacms = New Global.System.Data.DataColumn("ctacms", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnctacms)
            Me.columnmora = New Global.System.Data.DataColumn("mora", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmora)
            Me.columnlogo = New Global.System.Data.DataColumn("logo", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlogo)
            Me.columncomentario.AllowDBNull = false
            Me.columncomentario.MaxLength = 65535
            Me.columnctavent.AllowDBNull = false
            Me.columnctavent.MaxLength = 15
            Me.columnctaiva.AllowDBNull = false
            Me.columnctaiva.MaxLength = 15
            Me.columnctartf.AllowDBNull = false
            Me.columnctartf.MaxLength = 15
            Me.columnparf.AllowDBNull = false
            Me.columnparf.MaxLength = 2
            Me.columndocf.AllowDBNull = false
            Me.columndocf.MaxLength = 3
            Me.columntipof1.AllowDBNull = false
            Me.columntipof1.MaxLength = 4
            Me.columna_f1.AllowDBNull = false
            Me.columnhr1.AllowDBNull = false
            Me.columnhr1.MaxLength = 2
            Me.columnreso1.AllowDBNull = false
            Me.columnreso1.MaxLength = 30
            Me.columnfecexp1.AllowDBNull = false
            Me.columnfeclim1.AllowDBNull = false
            Me.columnini1.AllowDBNull = false
            Me.columnfin1.AllowDBNull = false
            Me.columnpre1.AllowDBNull = false
            Me.columnpre1.MaxLength = 10
            Me.columnctacli.AllowDBNull = false
            Me.columnctacli.MaxLength = 15
            Me.columnctacms.AllowDBNull = false
            Me.columnctacms.MaxLength = 15
            Me.columnmora.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewparcontratoRow() As parcontratoRow
            Return CType(Me.NewRow,parcontratoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New parcontratoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(parcontratoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.parcontratoRowChangedEvent) Is Nothing) Then
                RaiseEvent parcontratoRowChanged(Me, New parcontratoRowChangeEvent(CType(e.Row,parcontratoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.parcontratoRowChangingEvent) Is Nothing) Then
                RaiseEvent parcontratoRowChanging(Me, New parcontratoRowChangeEvent(CType(e.Row,parcontratoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.parcontratoRowDeletedEvent) Is Nothing) Then
                RaiseEvent parcontratoRowDeleted(Me, New parcontratoRowChangeEvent(CType(e.Row,parcontratoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.parcontratoRowDeletingEvent) Is Nothing) Then
                RaiseEvent parcontratoRowDeleting(Me, New parcontratoRowChangeEvent(CType(e.Row,parcontratoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveparcontratoRow(ByVal row As parcontratoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As saeosteomaterial2012DataSet = New saeosteomaterial2012DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "parcontratoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class inm_dpdenDataTable
        Inherits Global.System.Data.TypedTableBase(Of inm_dpdenRow)
        
        Private columncodigo_inm As Global.System.Data.DataColumn
        
        Private columndescrip As Global.System.Data.DataColumn
        
        Private columnespacio As Global.System.Data.DataColumn
        
        Private columnumedida As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "inm_dpden"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codigo_inmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodigo_inm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property descripColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndescrip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property espacioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnespacio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property umedidaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnumedida
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As inm_dpdenRow
            Get
                Return CType(Me.Rows(index),inm_dpdenRow)
            End Get
        End Property
        
        Public Event inm_dpdenRowChanging As inm_dpdenRowChangeEventHandler
        
        Public Event inm_dpdenRowChanged As inm_dpdenRowChangeEventHandler
        
        Public Event inm_dpdenRowDeleting As inm_dpdenRowChangeEventHandler
        
        Public Event inm_dpdenRowDeleted As inm_dpdenRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addinm_dpdenRow(ByVal row As inm_dpdenRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addinm_dpdenRow(ByVal codigo_inm As String, ByVal descrip As String, ByVal espacio As Decimal, ByVal umedida As String) As inm_dpdenRow
            Dim rowinm_dpdenRow As inm_dpdenRow = CType(Me.NewRow,inm_dpdenRow)
            Dim columnValuesArray() As Object = New Object() {codigo_inm, descrip, espacio, umedida}
            rowinm_dpdenRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowinm_dpdenRow)
            Return rowinm_dpdenRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As inm_dpdenDataTable = CType(MyBase.Clone,inm_dpdenDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New inm_dpdenDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncodigo_inm = MyBase.Columns("codigo_inm")
            Me.columndescrip = MyBase.Columns("descrip")
            Me.columnespacio = MyBase.Columns("espacio")
            Me.columnumedida = MyBase.Columns("umedida")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncodigo_inm = New Global.System.Data.DataColumn("codigo_inm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodigo_inm)
            Me.columndescrip = New Global.System.Data.DataColumn("descrip", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescrip)
            Me.columnespacio = New Global.System.Data.DataColumn("espacio", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnespacio)
            Me.columnumedida = New Global.System.Data.DataColumn("umedida", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnumedida)
            Me.columncodigo_inm.AllowDBNull = false
            Me.columncodigo_inm.MaxLength = 30
            Me.columndescrip.AllowDBNull = false
            Me.columndescrip.MaxLength = 100
            Me.columnespacio.AllowDBNull = false
            Me.columnumedida.AllowDBNull = false
            Me.columnumedida.MaxLength = 5
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newinm_dpdenRow() As inm_dpdenRow
            Return CType(Me.NewRow,inm_dpdenRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New inm_dpdenRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(inm_dpdenRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.inm_dpdenRowChangedEvent) Is Nothing) Then
                RaiseEvent inm_dpdenRowChanged(Me, New inm_dpdenRowChangeEvent(CType(e.Row,inm_dpdenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.inm_dpdenRowChangingEvent) Is Nothing) Then
                RaiseEvent inm_dpdenRowChanging(Me, New inm_dpdenRowChangeEvent(CType(e.Row,inm_dpdenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.inm_dpdenRowDeletedEvent) Is Nothing) Then
                RaiseEvent inm_dpdenRowDeleted(Me, New inm_dpdenRowChangeEvent(CType(e.Row,inm_dpdenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.inm_dpdenRowDeletingEvent) Is Nothing) Then
                RaiseEvent inm_dpdenRowDeleting(Me, New inm_dpdenRowChangeEvent(CType(e.Row,inm_dpdenRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeinm_dpdenRow(ByVal row As inm_dpdenRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As saeosteomaterial2012DataSet = New saeosteomaterial2012DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "inm_dpdenDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class inm_llavesDataTable
        Inherits Global.System.Data.TypedTableBase(Of inm_llavesRow)
        
        Private columncodigo_inm As Global.System.Data.DataColumn
        
        Private columnsitio As Global.System.Data.DataColumn
        
        Private columncant As Global.System.Data.DataColumn
        
        Private columnmarca As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "inm_llaves"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codigo_inmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodigo_inm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sitioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsitio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property cantColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncant
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property marcaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmarca
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As inm_llavesRow
            Get
                Return CType(Me.Rows(index),inm_llavesRow)
            End Get
        End Property
        
        Public Event inm_llavesRowChanging As inm_llavesRowChangeEventHandler
        
        Public Event inm_llavesRowChanged As inm_llavesRowChangeEventHandler
        
        Public Event inm_llavesRowDeleting As inm_llavesRowChangeEventHandler
        
        Public Event inm_llavesRowDeleted As inm_llavesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addinm_llavesRow(ByVal row As inm_llavesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addinm_llavesRow(ByVal codigo_inm As String, ByVal sitio As String, ByVal cant As Long, ByVal marca As String) As inm_llavesRow
            Dim rowinm_llavesRow As inm_llavesRow = CType(Me.NewRow,inm_llavesRow)
            Dim columnValuesArray() As Object = New Object() {codigo_inm, sitio, cant, marca}
            rowinm_llavesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowinm_llavesRow)
            Return rowinm_llavesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As inm_llavesDataTable = CType(MyBase.Clone,inm_llavesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New inm_llavesDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncodigo_inm = MyBase.Columns("codigo_inm")
            Me.columnsitio = MyBase.Columns("sitio")
            Me.columncant = MyBase.Columns("cant")
            Me.columnmarca = MyBase.Columns("marca")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncodigo_inm = New Global.System.Data.DataColumn("codigo_inm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodigo_inm)
            Me.columnsitio = New Global.System.Data.DataColumn("sitio", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsitio)
            Me.columncant = New Global.System.Data.DataColumn("cant", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncant)
            Me.columnmarca = New Global.System.Data.DataColumn("marca", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmarca)
            Me.columncodigo_inm.AllowDBNull = false
            Me.columncodigo_inm.MaxLength = 30
            Me.columnsitio.AllowDBNull = false
            Me.columnsitio.MaxLength = 100
            Me.columncant.AllowDBNull = false
            Me.columnmarca.AllowDBNull = false
            Me.columnmarca.MaxLength = 60
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newinm_llavesRow() As inm_llavesRow
            Return CType(Me.NewRow,inm_llavesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New inm_llavesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(inm_llavesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.inm_llavesRowChangedEvent) Is Nothing) Then
                RaiseEvent inm_llavesRowChanged(Me, New inm_llavesRowChangeEvent(CType(e.Row,inm_llavesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.inm_llavesRowChangingEvent) Is Nothing) Then
                RaiseEvent inm_llavesRowChanging(Me, New inm_llavesRowChangeEvent(CType(e.Row,inm_llavesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.inm_llavesRowDeletedEvent) Is Nothing) Then
                RaiseEvent inm_llavesRowDeleted(Me, New inm_llavesRowChangeEvent(CType(e.Row,inm_llavesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.inm_llavesRowDeletingEvent) Is Nothing) Then
                RaiseEvent inm_llavesRowDeleting(Me, New inm_llavesRowChangeEvent(CType(e.Row,inm_llavesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeinm_llavesRow(ByVal row As inm_llavesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As saeosteomaterial2012DataSet = New saeosteomaterial2012DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "inm_llavesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class inm_serviciosDataTable
        Inherits Global.System.Data.TypedTableBase(Of inm_serviciosRow)
        
        Private columncodigo_inm As Global.System.Data.DataColumn
        
        Private columndescrip As Global.System.Data.DataColumn
        
        Private columncodigo As Global.System.Data.DataColumn
        
        Private columnnumero As Global.System.Data.DataColumn
        
        Private columntitular As Global.System.Data.DataColumn
        
        Private columnobservacion As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "inm_servicios"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codigo_inmColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodigo_inm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property descripColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndescrip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codigoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodigo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property numeroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumero
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property titularColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntitular
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property observacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnobservacion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As inm_serviciosRow
            Get
                Return CType(Me.Rows(index),inm_serviciosRow)
            End Get
        End Property
        
        Public Event inm_serviciosRowChanging As inm_serviciosRowChangeEventHandler
        
        Public Event inm_serviciosRowChanged As inm_serviciosRowChangeEventHandler
        
        Public Event inm_serviciosRowDeleting As inm_serviciosRowChangeEventHandler
        
        Public Event inm_serviciosRowDeleted As inm_serviciosRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addinm_serviciosRow(ByVal row As inm_serviciosRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addinm_serviciosRow(ByVal codigo_inm As String, ByVal descrip As String, ByVal codigo As String, ByVal numero As String, ByVal titular As String, ByVal observacion As String) As inm_serviciosRow
            Dim rowinm_serviciosRow As inm_serviciosRow = CType(Me.NewRow,inm_serviciosRow)
            Dim columnValuesArray() As Object = New Object() {codigo_inm, descrip, codigo, numero, titular, observacion}
            rowinm_serviciosRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowinm_serviciosRow)
            Return rowinm_serviciosRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As inm_serviciosDataTable = CType(MyBase.Clone,inm_serviciosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New inm_serviciosDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncodigo_inm = MyBase.Columns("codigo_inm")
            Me.columndescrip = MyBase.Columns("descrip")
            Me.columncodigo = MyBase.Columns("codigo")
            Me.columnnumero = MyBase.Columns("numero")
            Me.columntitular = MyBase.Columns("titular")
            Me.columnobservacion = MyBase.Columns("observacion")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncodigo_inm = New Global.System.Data.DataColumn("codigo_inm", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodigo_inm)
            Me.columndescrip = New Global.System.Data.DataColumn("descrip", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescrip)
            Me.columncodigo = New Global.System.Data.DataColumn("codigo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodigo)
            Me.columnnumero = New Global.System.Data.DataColumn("numero", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumero)
            Me.columntitular = New Global.System.Data.DataColumn("titular", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntitular)
            Me.columnobservacion = New Global.System.Data.DataColumn("observacion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnobservacion)
            Me.columncodigo_inm.AllowDBNull = false
            Me.columncodigo_inm.MaxLength = 30
            Me.columndescrip.AllowDBNull = false
            Me.columndescrip.MaxLength = 60
            Me.columncodigo.AllowDBNull = false
            Me.columncodigo.MaxLength = 60
            Me.columnnumero.AllowDBNull = false
            Me.columnnumero.MaxLength = 60
            Me.columntitular.AllowDBNull = false
            Me.columntitular.MaxLength = 100
            Me.columnobservacion.AllowDBNull = false
            Me.columnobservacion.MaxLength = 65535
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newinm_serviciosRow() As inm_serviciosRow
            Return CType(Me.NewRow,inm_serviciosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New inm_serviciosRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(inm_serviciosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.inm_serviciosRowChangedEvent) Is Nothing) Then
                RaiseEvent inm_serviciosRowChanged(Me, New inm_serviciosRowChangeEvent(CType(e.Row,inm_serviciosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.inm_serviciosRowChangingEvent) Is Nothing) Then
                RaiseEvent inm_serviciosRowChanging(Me, New inm_serviciosRowChangeEvent(CType(e.Row,inm_serviciosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.inm_serviciosRowDeletedEvent) Is Nothing) Then
                RaiseEvent inm_serviciosRowDeleted(Me, New inm_serviciosRowChangeEvent(CType(e.Row,inm_serviciosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.inm_serviciosRowDeletingEvent) Is Nothing) Then
                RaiseEvent inm_serviciosRowDeleting(Me, New inm_serviciosRowChangeEvent(CType(e.Row,inm_serviciosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removeinm_serviciosRow(ByVal row As inm_serviciosRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As saeosteomaterial2012DataSet = New saeosteomaterial2012DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "inm_serviciosDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class inmueblesDataTable
        Inherits Global.System.Data.TypedTableBase(Of inmueblesRow)
        
        Private columncodigo As Global.System.Data.DataColumn
        
        Private columnnitp As Global.System.Data.DataColumn
        
        Private columnavaluo As Global.System.Data.DataColumn
        
        Private columnestado As Global.System.Data.DataColumn
        
        Private columndireccion As Global.System.Data.DataColumn
        
        Private columnciudad As Global.System.Data.DataColumn
        
        Private columnvcanon As Global.System.Data.DataColumn
        
        Private columndescrip As Global.System.Data.DataColumn
        
        Private columntipoim As Global.System.Data.DataColumn
        
        Private columnoperacion As Global.System.Data.DataColumn
        
        Private columndpto As Global.System.Data.DataColumn
        
        Private columnbarrio As Global.System.Data.DataColumn
        
        Private columnestrato As Global.System.Data.DataColumn
        
        Private columnconserv As Global.System.Data.DataColumn
        
        Private columntipoestado As Global.System.Data.DataColumn
        
        Private columndestino As Global.System.Data.DataColumn
        
        Private columnllaves As Global.System.Data.DataColumn
        
        Private columnprevivi As Global.System.Data.DataColumn
        
        Private columnprelocal As Global.System.Data.DataColumn
        
        Private columnncatast As Global.System.Data.DataColumn
        
        Private columnavcatast As Global.System.Data.DataColumn
        
        Private columnnotaria As Global.System.Data.DataColumn
        
        Private columnn_escritura As Global.System.Data.DataColumn
        
        Private columnf_escritura As Global.System.Data.DataColumn
        
        Private columnmatricula As Global.System.Data.DataColumn
        
        Private columninscripcion As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "inmuebles"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codigoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodigo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nitpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnitp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property avaluoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnavaluo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property estadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnestado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property direccionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndireccion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ciudadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnciudad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property vcanonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvcanon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property descripColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndescrip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tipoimColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipoim
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property operacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnoperacion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property dptoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndpto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property barrioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbarrio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property estratoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnestrato
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property conservColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnconserv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property tipoestadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipoestado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property destinoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndestino
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property llavesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnllaves
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property previviColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevivi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property prelocalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprelocal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ncatastColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnncatast
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property avcatastColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnavcatast
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property notariaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnotaria
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property n_escrituraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnn_escritura
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property f_escrituraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnf_escritura
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property matriculaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmatricula
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property inscripcionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columninscripcion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As inmueblesRow
            Get
                Return CType(Me.Rows(index),inmueblesRow)
            End Get
        End Property
        
        Public Event inmueblesRowChanging As inmueblesRowChangeEventHandler
        
        Public Event inmueblesRowChanged As inmueblesRowChangeEventHandler
        
        Public Event inmueblesRowDeleting As inmueblesRowChangeEventHandler
        
        Public Event inmueblesRowDeleted As inmueblesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddinmueblesRow(ByVal row As inmueblesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddinmueblesRow( _
                    ByVal codigo As String,  _
                    ByVal nitp As String,  _
                    ByVal avaluo As Double,  _
                    ByVal estado As String,  _
                    ByVal direccion As String,  _
                    ByVal ciudad As String,  _
                    ByVal vcanon As Double,  _
                    ByVal descrip As String,  _
                    ByVal tipoim As String,  _
                    ByVal operacion As String,  _
                    ByVal dpto As String,  _
                    ByVal barrio As String,  _
                    ByVal estrato As String,  _
                    ByVal conserv As String,  _
                    ByVal tipoestado As String,  _
                    ByVal destino As String,  _
                    ByVal llaves As Long,  _
                    ByVal previvi As Double,  _
                    ByVal prelocal As Double,  _
                    ByVal ncatast As String,  _
                    ByVal avcatast As Double,  _
                    ByVal notaria As String,  _
                    ByVal n_escritura As String,  _
                    ByVal f_escritura As String,  _
                    ByVal matricula As String,  _
                    ByVal inscripcion As String) As inmueblesRow
            Dim rowinmueblesRow As inmueblesRow = CType(Me.NewRow,inmueblesRow)
            Dim columnValuesArray() As Object = New Object() {codigo, nitp, avaluo, estado, direccion, ciudad, vcanon, descrip, tipoim, operacion, dpto, barrio, estrato, conserv, tipoestado, destino, llaves, previvi, prelocal, ncatast, avcatast, notaria, n_escritura, f_escritura, matricula, inscripcion}
            rowinmueblesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowinmueblesRow)
            Return rowinmueblesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBycodigo(ByVal codigo As String) As inmueblesRow
            Return CType(Me.Rows.Find(New Object() {codigo}),inmueblesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As inmueblesDataTable = CType(MyBase.Clone,inmueblesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New inmueblesDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncodigo = MyBase.Columns("codigo")
            Me.columnnitp = MyBase.Columns("nitp")
            Me.columnavaluo = MyBase.Columns("avaluo")
            Me.columnestado = MyBase.Columns("estado")
            Me.columndireccion = MyBase.Columns("direccion")
            Me.columnciudad = MyBase.Columns("ciudad")
            Me.columnvcanon = MyBase.Columns("vcanon")
            Me.columndescrip = MyBase.Columns("descrip")
            Me.columntipoim = MyBase.Columns("tipoim")
            Me.columnoperacion = MyBase.Columns("operacion")
            Me.columndpto = MyBase.Columns("dpto")
            Me.columnbarrio = MyBase.Columns("barrio")
            Me.columnestrato = MyBase.Columns("estrato")
            Me.columnconserv = MyBase.Columns("conserv")
            Me.columntipoestado = MyBase.Columns("tipoestado")
            Me.columndestino = MyBase.Columns("destino")
            Me.columnllaves = MyBase.Columns("llaves")
            Me.columnprevivi = MyBase.Columns("previvi")
            Me.columnprelocal = MyBase.Columns("prelocal")
            Me.columnncatast = MyBase.Columns("ncatast")
            Me.columnavcatast = MyBase.Columns("avcatast")
            Me.columnnotaria = MyBase.Columns("notaria")
            Me.columnn_escritura = MyBase.Columns("n_escritura")
            Me.columnf_escritura = MyBase.Columns("f_escritura")
            Me.columnmatricula = MyBase.Columns("matricula")
            Me.columninscripcion = MyBase.Columns("inscripcion")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncodigo = New Global.System.Data.DataColumn("codigo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodigo)
            Me.columnnitp = New Global.System.Data.DataColumn("nitp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnitp)
            Me.columnavaluo = New Global.System.Data.DataColumn("avaluo", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnavaluo)
            Me.columnestado = New Global.System.Data.DataColumn("estado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnestado)
            Me.columndireccion = New Global.System.Data.DataColumn("direccion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndireccion)
            Me.columnciudad = New Global.System.Data.DataColumn("ciudad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnciudad)
            Me.columnvcanon = New Global.System.Data.DataColumn("vcanon", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvcanon)
            Me.columndescrip = New Global.System.Data.DataColumn("descrip", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescrip)
            Me.columntipoim = New Global.System.Data.DataColumn("tipoim", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipoim)
            Me.columnoperacion = New Global.System.Data.DataColumn("operacion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnoperacion)
            Me.columndpto = New Global.System.Data.DataColumn("dpto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndpto)
            Me.columnbarrio = New Global.System.Data.DataColumn("barrio", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbarrio)
            Me.columnestrato = New Global.System.Data.DataColumn("estrato", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnestrato)
            Me.columnconserv = New Global.System.Data.DataColumn("conserv", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconserv)
            Me.columntipoestado = New Global.System.Data.DataColumn("tipoestado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipoestado)
            Me.columndestino = New Global.System.Data.DataColumn("destino", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndestino)
            Me.columnllaves = New Global.System.Data.DataColumn("llaves", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnllaves)
            Me.columnprevivi = New Global.System.Data.DataColumn("previvi", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevivi)
            Me.columnprelocal = New Global.System.Data.DataColumn("prelocal", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprelocal)
            Me.columnncatast = New Global.System.Data.DataColumn("ncatast", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnncatast)
            Me.columnavcatast = New Global.System.Data.DataColumn("avcatast", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnavcatast)
            Me.columnnotaria = New Global.System.Data.DataColumn("notaria", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnotaria)
            Me.columnn_escritura = New Global.System.Data.DataColumn("n_escritura", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnn_escritura)
            Me.columnf_escritura = New Global.System.Data.DataColumn("f_escritura", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnf_escritura)
            Me.columnmatricula = New Global.System.Data.DataColumn("matricula", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmatricula)
            Me.columninscripcion = New Global.System.Data.DataColumn("inscripcion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columninscripcion)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columncodigo}, true))
            Me.columncodigo.AllowDBNull = false
            Me.columncodigo.Unique = true
            Me.columncodigo.MaxLength = 30
            Me.columnnitp.AllowDBNull = false
            Me.columnnitp.MaxLength = 15
            Me.columnavaluo.AllowDBNull = false
            Me.columnestado.AllowDBNull = false
            Me.columnestado.MaxLength = 20
            Me.columndireccion.AllowDBNull = false
            Me.columndireccion.MaxLength = 30
            Me.columnciudad.AllowDBNull = false
            Me.columnciudad.MaxLength = 30
            Me.columnvcanon.AllowDBNull = false
            Me.columndescrip.AllowDBNull = false
            Me.columndescrip.MaxLength = 65535
            Me.columntipoim.AllowDBNull = false
            Me.columntipoim.MaxLength = 20
            Me.columnoperacion.AllowDBNull = false
            Me.columnoperacion.MaxLength = 10
            Me.columndpto.AllowDBNull = false
            Me.columndpto.MaxLength = 10
            Me.columnbarrio.AllowDBNull = false
            Me.columnbarrio.MaxLength = 100
            Me.columnestrato.AllowDBNull = false
            Me.columnestrato.MaxLength = 2
            Me.columnconserv.AllowDBNull = false
            Me.columnconserv.MaxLength = 20
            Me.columntipoestado.AllowDBNull = false
            Me.columntipoestado.MaxLength = 8
            Me.columndestino.AllowDBNull = false
            Me.columndestino.MaxLength = 10
            Me.columnllaves.AllowDBNull = false
            Me.columnprevivi.AllowDBNull = false
            Me.columnprelocal.AllowDBNull = false
            Me.columnncatast.AllowDBNull = false
            Me.columnncatast.MaxLength = 100
            Me.columnavcatast.AllowDBNull = false
            Me.columnnotaria.AllowDBNull = false
            Me.columnnotaria.MaxLength = 100
            Me.columnn_escritura.AllowDBNull = false
            Me.columnn_escritura.MaxLength = 60
            Me.columnf_escritura.AllowDBNull = false
            Me.columnf_escritura.MaxLength = 100
            Me.columnmatricula.AllowDBNull = false
            Me.columnmatricula.MaxLength = 100
            Me.columninscripcion.AllowDBNull = false
            Me.columninscripcion.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewinmueblesRow() As inmueblesRow
            Return CType(Me.NewRow,inmueblesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New inmueblesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(inmueblesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.inmueblesRowChangedEvent) Is Nothing) Then
                RaiseEvent inmueblesRowChanged(Me, New inmueblesRowChangeEvent(CType(e.Row,inmueblesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.inmueblesRowChangingEvent) Is Nothing) Then
                RaiseEvent inmueblesRowChanging(Me, New inmueblesRowChangeEvent(CType(e.Row,inmueblesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.inmueblesRowDeletedEvent) Is Nothing) Then
                RaiseEvent inmueblesRowDeleted(Me, New inmueblesRowChangeEvent(CType(e.Row,inmueblesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.inmueblesRowDeletingEvent) Is Nothing) Then
                RaiseEvent inmueblesRowDeleting(Me, New inmueblesRowChangeEvent(CType(e.Row,inmueblesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveinmueblesRow(ByVal row As inmueblesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As saeosteomaterial2012DataSet = New saeosteomaterial2012DataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "inmueblesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class articulosRow
        Inherits Global.System.Data.DataRow
        
        Private tablearticulos As articulosDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablearticulos = CType(Me.Table,articulosDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property codart() As String
            Get
                Return CType(Me(Me.tablearticulos.codartColumn),String)
            End Get
            Set
                Me(Me.tablearticulos.codartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nomart() As String
            Get
                Return CType(Me(Me.tablearticulos.nomartColumn),String)
            End Get
            Set
                Me(Me.tablearticulos.nomartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property desart() As String
            Get
                Return CType(Me(Me.tablearticulos.desartColumn),String)
            End Get
            Set
                Me(Me.tablearticulos.desartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nivel() As String
            Get
                Return CType(Me(Me.tablearticulos.nivelColumn),String)
            End Get
            Set
                Me(Me.tablearticulos.nivelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property referencia() As String
            Get
                Return CType(Me(Me.tablearticulos.referenciaColumn),String)
            End Get
            Set
                Me(Me.tablearticulos.referenciaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property codbar() As String
            Get
                Return CType(Me(Me.tablearticulos.codbarColumn),String)
            End Get
            Set
                Me(Me.tablearticulos.codbarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cos_uni() As Double
            Get
                Return CType(Me(Me.tablearticulos.cos_uniColumn),Double)
            End Get
            Set
                Me(Me.tablearticulos.cos_uniColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cos_pro() As Double
            Get
                Return CType(Me(Me.tablearticulos.cos_proColumn),Double)
            End Get
            Set
                Me(Me.tablearticulos.cos_proColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property margen() As Decimal
            Get
                Return CType(Me(Me.tablearticulos.margenColumn),Decimal)
            End Get
            Set
                Me(Me.tablearticulos.margenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property precio() As Double
            Get
                Return CType(Me(Me.tablearticulos.precioColumn),Double)
            End Get
            Set
                Me(Me.tablearticulos.precioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property iva() As Decimal
            Get
                Return CType(Me(Me.tablearticulos.ivaColumn),Decimal)
            End Get
            Set
                Me(Me.tablearticulos.ivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property exento() As String
            Get
                Return CType(Me(Me.tablearticulos.exentoColumn),String)
            End Get
            Set
                Me(Me.tablearticulos.exentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property excluido() As String
            Get
                Return CType(Me(Me.tablearticulos.excluidoColumn),String)
            End Get
            Set
                Me(Me.tablearticulos.excluidoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cue_inv() As String
            Get
                Return CType(Me(Me.tablearticulos.cue_invColumn),String)
            End Get
            Set
                Me(Me.tablearticulos.cue_invColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cue_ing() As String
            Get
                Return CType(Me(Me.tablearticulos.cue_ingColumn),String)
            End Get
            Set
                Me(Me.tablearticulos.cue_ingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cue_cos() As String
            Get
                Return CType(Me(Me.tablearticulos.cue_cosColumn),String)
            End Get
            Set
                Me(Me.tablearticulos.cue_cosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cue_iva_v() As String
            Get
                Return CType(Me(Me.tablearticulos.cue_iva_vColumn),String)
            End Get
            Set
                Me(Me.tablearticulos.cue_iva_vColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cue_iva_c() As String
            Get
                Return CType(Me(Me.tablearticulos.cue_iva_cColumn),String)
            End Get
            Set
                Me(Me.tablearticulos.cue_iva_cColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cue_dev() As String
            Get
                Return CType(Me(Me.tablearticulos.cue_devColumn),String)
            End Get
            Set
                Me(Me.tablearticulos.cue_devColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property unidad() As String
            Get
                Return CType(Me(Me.tablearticulos.unidadColumn),String)
            End Get
            Set
                Me(Me.tablearticulos.unidadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property empaque() As Double
            Get
                Return CType(Me(Me.tablearticulos.empaqueColumn),Double)
            End Get
            Set
                Me(Me.tablearticulos.empaqueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property can_emp() As Double
            Get
                Return CType(Me(Me.tablearticulos.can_empColumn),Double)
            End Get
            Set
                Me(Me.tablearticulos.can_empColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property uni_emp() As Double
            Get
                Return CType(Me(Me.tablearticulos.uni_empColumn),Double)
            End Get
            Set
                Me(Me.tablearticulos.uni_empColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant_min() As Double
            Get
                Return CType(Me(Me.tablearticulos.cant_minColumn),Double)
            End Get
            Set
                Me(Me.tablearticulos.cant_minColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pp() As Double
            Get
                Return CType(Me(Me.tablearticulos.ppColumn),Double)
            End Get
            Set
                Me(Me.tablearticulos.ppColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property estado() As String
            Get
                Return CType(Me(Me.tablearticulos.estadoColumn),String)
            End Get
            Set
                Me(Me.tablearticulos.estadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property con_comi() As String
            Get
                Return CType(Me(Me.tablearticulos.con_comiColumn),String)
            End Get
            Set
                Me(Me.tablearticulos.con_comiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property importa() As String
            Get
                Return CType(Me(Me.tablearticulos.importaColumn),String)
            End Get
            Set
                Me(Me.tablearticulos.importaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property num_reg() As String
            Get
                Return CType(Me(Me.tablearticulos.num_regColumn),String)
            End Get
            Set
                Me(Me.tablearticulos.num_regColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property por_ara() As Decimal
            Get
                Return CType(Me(Me.tablearticulos.por_araColumn),Decimal)
            End Get
            Set
                Me(Me.tablearticulos.por_araColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pos_ara() As String
            Get
                Return CType(Me(Me.tablearticulos.pos_araColumn),String)
            End Get
            Set
                Me(Me.tablearticulos.pos_araColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property p1() As String
            Get
                Return CType(Me(Me.tablearticulos.p1Column),String)
            End Get
            Set
                Me(Me.tablearticulos.p1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property p2() As String
            Get
                Return CType(Me(Me.tablearticulos.p2Column),String)
            End Get
            Set
                Me(Me.tablearticulos.p2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property p3() As String
            Get
                Return CType(Me(Me.tablearticulos.p3Column),String)
            End Get
            Set
                Me(Me.tablearticulos.p3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property p4() As String
            Get
                Return CType(Me(Me.tablearticulos.p4Column),String)
            End Get
            Set
                Me(Me.tablearticulos.p4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property p5() As String
            Get
                Return CType(Me(Me.tablearticulos.p5Column),String)
            End Get
            Set
                Me(Me.tablearticulos.p5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Getcon_invRows() As con_invRow()
            If (Me.Table.ChildRelations("con_inv_ibfk_1") Is Nothing) Then
                Return New con_invRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("con_inv_ibfk_1")),con_invRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class con_invRow
        Inherits Global.System.Data.DataRow
        
        Private tablecon_inv As con_invDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablecon_inv = CType(Me.Table,con_invDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property codart() As String
            Get
                Return CType(Me(Me.tablecon_inv.codartColumn),String)
            End Get
            Set
                Me(Me.tablecon_inv.codartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property periodo() As String
            Get
                Return CType(Me(Me.tablecon_inv.periodoColumn),String)
            End Get
            Set
                Me(Me.tablecon_inv.periodoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property costuni() As Double
            Get
                Return CType(Me(Me.tablecon_inv.costuniColumn),Double)
            End Get
            Set
                Me(Me.tablecon_inv.costuniColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property costprom() As Double
            Get
                Return CType(Me(Me.tablecon_inv.costpromColumn),Double)
            End Get
            Set
                Me(Me.tablecon_inv.costpromColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property costmoe() As Double
            Get
                Return CType(Me(Me.tablecon_inv.costmoeColumn),Double)
            End Get
            Set
                Me(Me.tablecon_inv.costmoeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property otro() As Double
            Get
                Return CType(Me(Me.tablecon_inv.otroColumn),Double)
            End Get
            Set
                Me(Me.tablecon_inv.otroColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property margen() As Decimal
            Get
                Return CType(Me(Me.tablecon_inv.margenColumn),Decimal)
            End Get
            Set
                Me(Me.tablecon_inv.margenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property base() As Double
            Get
                Return CType(Me(Me.tablecon_inv.baseColumn),Double)
            End Get
            Set
                Me(Me.tablecon_inv.baseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property precio1() As Double
            Get
                Return CType(Me(Me.tablecon_inv.precio1Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.precio1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property precio2() As Double
            Get
                Return CType(Me(Me.tablecon_inv.precio2Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.precio2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property precio3() As Double
            Get
                Return CType(Me(Me.tablecon_inv.precio3Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.precio3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property precio4() As Double
            Get
                Return CType(Me(Me.tablecon_inv.precio4Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.precio4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property precio5() As Double
            Get
                Return CType(Me(Me.tablecon_inv.precio5Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.precio5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property precio6() As Double
            Get
                Return CType(Me(Me.tablecon_inv.precio6Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.precio6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cue_inv() As String
            Get
                Return CType(Me(Me.tablecon_inv.cue_invColumn),String)
            End Get
            Set
                Me(Me.tablecon_inv.cue_invColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cue_cos() As String
            Get
                Return CType(Me(Me.tablecon_inv.cue_cosColumn),String)
            End Get
            Set
                Me(Me.tablecon_inv.cue_cosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cue_ing() As String
            Get
                Return CType(Me(Me.tablecon_inv.cue_ingColumn),String)
            End Get
            Set
                Me(Me.tablecon_inv.cue_ingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cue_iva_v() As String
            Get
                Return CType(Me(Me.tablecon_inv.cue_iva_vColumn),String)
            End Get
            Set
                Me(Me.tablecon_inv.cue_iva_vColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cue_iva_c() As String
            Get
                Return CType(Me(Me.tablecon_inv.cue_iva_cColumn),String)
            End Get
            Set
                Me(Me.tablecon_inv.cue_iva_cColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cue_dev() As String
            Get
                Return CType(Me(Me.tablecon_inv.cue_devColumn),String)
            End Get
            Set
                Me(Me.tablecon_inv.cue_devColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property saldoi() As Double
            Get
                Return CType(Me(Me.tablecon_inv.saldoiColumn),Double)
            End Get
            Set
                Me(Me.tablecon_inv.saldoiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property vent() As Double
            Get
                Return CType(Me(Me.tablecon_inv.ventColumn),Double)
            End Get
            Set
                Me(Me.tablecon_inv.ventColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property vsal() As Double
            Get
                Return CType(Me(Me.tablecon_inv.vsalColumn),Double)
            End Get
            Set
                Me(Me.tablecon_inv.vsalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property vaju() As Double
            Get
                Return CType(Me(Me.tablecon_inv.vajuColumn),Double)
            End Get
            Set
                Me(Me.tablecon_inv.vajuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant1() As Double
            Get
                Return CType(Me(Me.tablecon_inv.cant1Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.cant1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant2() As Double
            Get
                Return CType(Me(Me.tablecon_inv.cant2Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.cant2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant3() As Double
            Get
                Return CType(Me(Me.tablecon_inv.cant3Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.cant3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant4() As Double
            Get
                Return CType(Me(Me.tablecon_inv.cant4Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.cant4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant5() As Double
            Get
                Return CType(Me(Me.tablecon_inv.cant5Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.cant5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant6() As Double
            Get
                Return CType(Me(Me.tablecon_inv.cant6Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.cant6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant7() As Double
            Get
                Return CType(Me(Me.tablecon_inv.cant7Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.cant7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant8() As Double
            Get
                Return CType(Me(Me.tablecon_inv.cant8Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.cant8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant9() As Double
            Get
                Return CType(Me(Me.tablecon_inv.cant9Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.cant9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant10() As Double
            Get
                Return CType(Me(Me.tablecon_inv.cant10Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.cant10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant11() As Double
            Get
                Return CType(Me(Me.tablecon_inv.cant11Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.cant11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant12() As Double
            Get
                Return CType(Me(Me.tablecon_inv.cant12Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.cant12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant13() As Double
            Get
                Return CType(Me(Me.tablecon_inv.cant13Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.cant13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant14() As Double
            Get
                Return CType(Me(Me.tablecon_inv.cant14Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.cant14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant15() As Double
            Get
                Return CType(Me(Me.tablecon_inv.cant15Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.cant15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant16() As Double
            Get
                Return CType(Me(Me.tablecon_inv.cant16Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.cant16Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant17() As Double
            Get
                Return CType(Me(Me.tablecon_inv.cant17Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.cant17Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant18() As Double
            Get
                Return CType(Me(Me.tablecon_inv.cant18Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.cant18Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant19() As Double
            Get
                Return CType(Me(Me.tablecon_inv.cant19Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.cant19Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant20() As Double
            Get
                Return CType(Me(Me.tablecon_inv.cant20Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.cant20Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant21() As Double
            Get
                Return CType(Me(Me.tablecon_inv.cant21Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.cant21Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant22() As Double
            Get
                Return CType(Me(Me.tablecon_inv.cant22Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.cant22Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant23() As Double
            Get
                Return CType(Me(Me.tablecon_inv.cant23Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.cant23Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant24() As Double
            Get
                Return CType(Me(Me.tablecon_inv.cant24Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.cant24Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant25() As Double
            Get
                Return CType(Me(Me.tablecon_inv.cant25Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.cant25Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant26() As Double
            Get
                Return CType(Me(Me.tablecon_inv.cant26Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.cant26Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant27() As Double
            Get
                Return CType(Me(Me.tablecon_inv.cant27Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.cant27Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant28() As Double
            Get
                Return CType(Me(Me.tablecon_inv.cant28Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.cant28Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant29() As Double
            Get
                Return CType(Me(Me.tablecon_inv.cant29Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.cant29Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant30() As Double
            Get
                Return CType(Me(Me.tablecon_inv.cant30Column),Double)
            End Get
            Set
                Me(Me.tablecon_inv.cant30Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property articulosRow() As articulosRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("con_inv_ibfk_1")),articulosRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("con_inv_ibfk_1"))
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class movimientos01Row
        Inherits Global.System.Data.DataRow
        
        Private tablemovimientos01 As movimientos01DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablemovimientos01 = CType(Me.Table,movimientos01DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property doc() As String
            Get
                Return CType(Me(Me.tablemovimientos01.docColumn),String)
            End Get
            Set
                Me(Me.tablemovimientos01.docColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tipodoc() As String
            Get
                Return CType(Me(Me.tablemovimientos01.tipodocColumn),String)
            End Get
            Set
                Me(Me.tablemovimientos01.tipodocColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property num() As Long
            Get
                Return CType(Me(Me.tablemovimientos01.numColumn),Long)
            End Get
            Set
                Me(Me.tablemovimientos01.numColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property per() As String
            Get
                Return CType(Me(Me.tablemovimientos01.perColumn),String)
            End Get
            Set
                Me(Me.tablemovimientos01.perColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dia() As String
            Get
                Return CType(Me(Me.tablemovimientos01.diaColumn),String)
            End Get
            Set
                Me(Me.tablemovimientos01.diaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property hora() As System.TimeSpan
            Get
                Return CType(Me(Me.tablemovimientos01.horaColumn),Global.System.TimeSpan)
            End Get
            Set
                Me(Me.tablemovimientos01.horaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nitc() As String
            Get
                Return CType(Me(Me.tablemovimientos01.nitcColumn),String)
            End Get
            Set
                Me(Me.tablemovimientos01.nitcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tipo_mov() As String
            Get
                Return CType(Me(Me.tablemovimientos01.tipo_movColumn),String)
            End Get
            Set
                Me(Me.tablemovimientos01.tipo_movColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tipo() As String
            Get
                Return CType(Me(Me.tablemovimientos01.tipoColumn),String)
            End Get
            Set
                Me(Me.tablemovimientos01.tipoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property desc_mov() As String
            Get
                Return CType(Me(Me.tablemovimientos01.desc_movColumn),String)
            End Get
            Set
                Me(Me.tablemovimientos01.desc_movColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cc() As String
            Get
                Return CType(Me(Me.tablemovimientos01.ccColumn),String)
            End Get
            Set
                Me(Me.tablemovimientos01.ccColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property concepto() As String
            Get
                Return CType(Me(Me.tablemovimientos01.conceptoColumn),String)
            End Get
            Set
                Me(Me.tablemovimientos01.conceptoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property o_compra() As String
            Get
                Return CType(Me(Me.tablemovimientos01.o_compraColumn),String)
            End Get
            Set
                Me(Me.tablemovimientos01.o_compraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property n_pedido() As String
            Get
                Return CType(Me(Me.tablemovimientos01.n_pedidoColumn),String)
            End Get
            Set
                Me(Me.tablemovimientos01.n_pedidoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property observ() As String
            Get
                Return CType(Me(Me.tablemovimientos01.observColumn),String)
            End Get
            Set
                Me(Me.tablemovimientos01.observColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property total() As Double
            Get
                Return CType(Me(Me.tablemovimientos01.totalColumn),Double)
            End Get
            Set
                Me(Me.tablemovimientos01.totalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property estado() As String
            Get
                Return CType(Me(Me.tablemovimientos01.estadoColumn),String)
            End Get
            Set
                Me(Me.tablemovimientos01.estadoColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class deta_mov01Row
        Inherits Global.System.Data.DataRow
        
        Private tabledeta_mov01 As deta_mov01DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledeta_mov01 = CType(Me.Table,deta_mov01DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property doc() As String
            Get
                Return CType(Me(Me.tabledeta_mov01.docColumn),String)
            End Get
            Set
                Me(Me.tabledeta_mov01.docColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property item() As Integer
            Get
                Return CType(Me(Me.tabledeta_mov01.itemColumn),Integer)
            End Get
            Set
                Me(Me.tabledeta_mov01.itemColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property codart() As String
            Get
                Return CType(Me(Me.tabledeta_mov01.codartColumn),String)
            End Get
            Set
                Me(Me.tabledeta_mov01.codartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nomart() As String
            Get
                Return CType(Me(Me.tabledeta_mov01.nomartColumn),String)
            End Get
            Set
                Me(Me.tabledeta_mov01.nomartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property bod_ori() As Integer
            Get
                Return CType(Me(Me.tabledeta_mov01.bod_oriColumn),Integer)
            End Get
            Set
                Me(Me.tabledeta_mov01.bod_oriColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property bod_des() As Integer
            Get
                Return CType(Me(Me.tabledeta_mov01.bod_desColumn),Integer)
            End Get
            Set
                Me(Me.tabledeta_mov01.bod_desColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cantidad() As Double
            Get
                Return CType(Me(Me.tabledeta_mov01.cantidadColumn),Double)
            End Get
            Set
                Me(Me.tabledeta_mov01.cantidadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property valor() As Double
            Get
                Return CType(Me(Me.tabledeta_mov01.valorColumn),Double)
            End Get
            Set
                Me(Me.tabledeta_mov01.valorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cta_inv() As String
            Get
                Return CType(Me(Me.tabledeta_mov01.cta_invColumn),String)
            End Get
            Set
                Me(Me.tabledeta_mov01.cta_invColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cta_cos() As String
            Get
                Return CType(Me(Me.tabledeta_mov01.cta_cosColumn),String)
            End Get
            Set
                Me(Me.tabledeta_mov01.cta_cosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cta_ing() As String
            Get
                Return CType(Me(Me.tabledeta_mov01.cta_ingColumn),String)
            End Get
            Set
                Me(Me.tabledeta_mov01.cta_ingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cta_iva() As String
            Get
                Return CType(Me(Me.tabledeta_mov01.cta_ivaColumn),String)
            End Get
            Set
                Me(Me.tabledeta_mov01.cta_ivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property costo() As Double
            Get
                Return CType(Me(Me.tabledeta_mov01.costoColumn),Double)
            End Get
            Set
                Me(Me.tabledeta_mov01.costoColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class tercerosRow
        Inherits Global.System.Data.DataRow
        
        Private tableterceros As tercerosDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableterceros = CType(Me.Table,tercerosDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nit() As String
            Get
                Return CType(Me(Me.tableterceros.nitColumn),String)
            End Get
            Set
                Me(Me.tableterceros.nitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dv() As String
            Get
                Return CType(Me(Me.tableterceros.dvColumn),String)
            End Get
            Set
                Me(Me.tableterceros.dvColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nombre() As String
            Get
                Return CType(Me(Me.tableterceros.nombreColumn),String)
            End Get
            Set
                Me(Me.tableterceros.nombreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property apellidos() As String
            Get
                Try 
                    Return CType(Me(Me.tableterceros.apellidosColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'apellidos' de la tabla 'terceros' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableterceros.apellidosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tipo() As String
            Get
                Return CType(Me(Me.tableterceros.tipoColumn),String)
            End Get
            Set
                Me(Me.tableterceros.tipoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property persona() As String
            Get
                Return CType(Me(Me.tableterceros.personaColumn),String)
            End Get
            Set
                Me(Me.tableterceros.personaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dir() As String
            Get
                Return CType(Me(Me.tableterceros.dirColumn),String)
            End Get
            Set
                Me(Me.tableterceros.dirColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pais() As String
            Get
                Return CType(Me(Me.tableterceros.paisColumn),String)
            End Get
            Set
                Me(Me.tableterceros.paisColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dept() As String
            Get
                Return CType(Me(Me.tableterceros.deptColumn),String)
            End Get
            Set
                Me(Me.tableterceros.deptColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mun() As String
            Get
                Return CType(Me(Me.tableterceros.munColumn),String)
            End Get
            Set
                Me(Me.tableterceros.munColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property telefono() As String
            Get
                Try 
                    Return CType(Me(Me.tableterceros.telefonoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'telefono' de la tabla 'terceros' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableterceros.telefonoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property celular() As String
            Get
                Try 
                    Return CType(Me(Me.tableterceros.celularColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'celular' de la tabla 'terceros' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableterceros.celularColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fax() As String
            Get
                Try 
                    Return CType(Me(Me.tableterceros.faxColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'fax' de la tabla 'terceros' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableterceros.faxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property correo() As String
            Get
                Try 
                    Return CType(Me(Me.tableterceros.correoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'correo' de la tabla 'terceros' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableterceros.correoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property web() As String
            Get
                Try 
                    Return CType(Me(Me.tableterceros.webColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'web' de la tabla 'terceros' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableterceros.webColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dia() As String
            Get
                Return CType(Me(Me.tableterceros.diaColumn),String)
            End Get
            Set
                Me(Me.tableterceros.diaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mes() As String
            Get
                Return CType(Me(Me.tableterceros.mesColumn),String)
            End Get
            Set
                Me(Me.tableterceros.mesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property contacto() As String
            Get
                Return CType(Me(Me.tableterceros.contactoColumn),String)
            End Get
            Set
                Me(Me.tableterceros.contactoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property telconta() As String
            Get
                Return CType(Me(Me.tableterceros.telcontaColumn),String)
            End Get
            Set
                Me(Me.tableterceros.telcontaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cupo() As Double
            Get
                Return CType(Me(Me.tableterceros.cupoColumn),Double)
            End Get
            Set
                Me(Me.tableterceros.cupoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property vmto() As Long
            Get
                Return CType(Me(Me.tableterceros.vmtoColumn),Long)
            End Get
            Set
                Me(Me.tableterceros.vmtoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property iva() As String
            Get
                Return CType(Me(Me.tableterceros.ivaColumn),String)
            End Get
            Set
                Me(Me.tableterceros.ivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property retef() As String
            Get
                Return CType(Me(Me.tableterceros.retefColumn),String)
            End Get
            Set
                Me(Me.tableterceros.retefColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property reteiva() As String
            Get
                Return CType(Me(Me.tableterceros.reteivaColumn),String)
            End Get
            Set
                Me(Me.tableterceros.reteivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property reteica() As String
            Get
                Return CType(Me(Me.tableterceros.reteicaColumn),String)
            End Get
            Set
                Me(Me.tableterceros.reteicaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsapellidosNull() As Boolean
            Return Me.IsNull(Me.tableterceros.apellidosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetapellidosNull()
            Me(Me.tableterceros.apellidosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IstelefonoNull() As Boolean
            Return Me.IsNull(Me.tableterceros.telefonoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SettelefonoNull()
            Me(Me.tableterceros.telefonoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscelularNull() As Boolean
            Return Me.IsNull(Me.tableterceros.celularColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcelularNull()
            Me(Me.tableterceros.celularColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfaxNull() As Boolean
            Return Me.IsNull(Me.tableterceros.faxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfaxNull()
            Me(Me.tableterceros.faxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IscorreoNull() As Boolean
            Return Me.IsNull(Me.tableterceros.correoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetcorreoNull()
            Me(Me.tableterceros.correoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IswebNull() As Boolean
            Return Me.IsNull(Me.tableterceros.webColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetwebNull()
            Me(Me.tableterceros.webColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class parinvenRow
        Inherits Global.System.Data.DataRow
        
        Private tableparinven As parinvenDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableparinven = CType(Me.Table,parinvenDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property longitud() As Integer
            Get
                Return CType(Me(Me.tableparinven.longitudColumn),Integer)
            End Get
            Set
                Me(Me.tableparinven.longitudColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nivel1() As Integer
            Get
                Return CType(Me(Me.tableparinven.nivel1Column),Integer)
            End Get
            Set
                Me(Me.tableparinven.nivel1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property desc1() As String
            Get
                Return CType(Me(Me.tableparinven.desc1Column),String)
            End Get
            Set
                Me(Me.tableparinven.desc1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nivel2() As Integer
            Get
                Return CType(Me(Me.tableparinven.nivel2Column),Integer)
            End Get
            Set
                Me(Me.tableparinven.nivel2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property desc2() As String
            Get
                Return CType(Me(Me.tableparinven.desc2Column),String)
            End Get
            Set
                Me(Me.tableparinven.desc2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nivel3() As Integer
            Get
                Return CType(Me(Me.tableparinven.nivel3Column),Integer)
            End Get
            Set
                Me(Me.tableparinven.nivel3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property desc3() As String
            Get
                Return CType(Me(Me.tableparinven.desc3Column),String)
            End Get
            Set
                Me(Me.tableparinven.desc3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nivel4() As Integer
            Get
                Return CType(Me(Me.tableparinven.nivel4Column),Integer)
            End Get
            Set
                Me(Me.tableparinven.nivel4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property desc4() As String
            Get
                Return CType(Me(Me.tableparinven.desc4Column),String)
            End Get
            Set
                Me(Me.tableparinven.desc4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nivel5() As Integer
            Get
                Return CType(Me(Me.tableparinven.nivel5Column),Integer)
            End Get
            Set
                Me(Me.tableparinven.nivel5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property desc5() As String
            Get
                Return CType(Me(Me.tableparinven.desc5Column),String)
            End Get
            Set
                Me(Me.tableparinven.desc5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nivel6() As Integer
            Get
                Return CType(Me(Me.tableparinven.nivel6Column),Integer)
            End Get
            Set
                Me(Me.tableparinven.nivel6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property desc6() As String
            Get
                Return CType(Me(Me.tableparinven.desc6Column),String)
            End Get
            Set
                Me(Me.tableparinven.desc6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property formula() As String
            Get
                Return CType(Me(Me.tableparinven.formulaColumn),String)
            End Get
            Set
                Me(Me.tableparinven.formulaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property porcen() As Integer
            Get
                Return CType(Me(Me.tableparinven.porcenColumn),Integer)
            End Get
            Set
                Me(Me.tableparinven.porcenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property traslados() As String
            Get
                Return CType(Me(Me.tableparinven.trasladosColumn),String)
            End Get
            Set
                Me(Me.tableparinven.trasladosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ajustes() As String
            Get
                Return CType(Me(Me.tableparinven.ajustesColumn),String)
            End Get
            Set
                Me(Me.tableparinven.ajustesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property entradas() As String
            Get
                Return CType(Me(Me.tableparinven.entradasColumn),String)
            End Get
            Set
                Me(Me.tableparinven.entradasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property salidas() As String
            Get
                Return CType(Me(Me.tableparinven.salidasColumn),String)
            End Get
            Set
                Me(Me.tableparinven.salidasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property codbar() As String
            Get
                Return CType(Me(Me.tableparinven.codbarColumn),String)
            End Get
            Set
                Me(Me.tableparinven.codbarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property contable() As String
            Get
                Return CType(Me(Me.tableparinven.contableColumn),String)
            End Get
            Set
                Me(Me.tableparinven.contableColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cuenta1() As String
            Get
                Return CType(Me(Me.tableparinven.cuenta1Column),String)
            End Get
            Set
                Me(Me.tableparinven.cuenta1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cuenta2() As String
            Get
                Return CType(Me(Me.tableparinven.cuenta2Column),String)
            End Get
            Set
                Me(Me.tableparinven.cuenta2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cuenta3() As String
            Get
                Return CType(Me(Me.tableparinven.cuenta3Column),String)
            End Get
            Set
                Me(Me.tableparinven.cuenta3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cuenta4() As String
            Get
                Return CType(Me(Me.tableparinven.cuenta4Column),String)
            End Get
            Set
                Me(Me.tableparinven.cuenta4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cuenta5() As String
            Get
                Return CType(Me(Me.tableparinven.cuenta5Column),String)
            End Get
            Set
                Me(Me.tableparinven.cuenta5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cuenta6() As String
            Get
                Return CType(Me(Me.tableparinven.cuenta6Column),String)
            End Get
            Set
                Me(Me.tableparinven.cuenta6Column) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class detafac01Row
        Inherits Global.System.Data.DataRow
        
        Private tabledetafac01 As detafac01DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledetafac01 = CType(Me.Table,detafac01DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property doc() As String
            Get
                Return CType(Me(Me.tabledetafac01.docColumn),String)
            End Get
            Set
                Me(Me.tabledetafac01.docColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property item() As Integer
            Get
                Return CType(Me(Me.tabledetafac01.itemColumn),Integer)
            End Get
            Set
                Me(Me.tabledetafac01.itemColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tipo_it() As String
            Get
                Return CType(Me(Me.tabledetafac01.tipo_itColumn),String)
            End Get
            Set
                Me(Me.tabledetafac01.tipo_itColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property codart() As String
            Get
                Return CType(Me(Me.tabledetafac01.codartColumn),String)
            End Get
            Set
                Me(Me.tabledetafac01.codartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nomart() As String
            Get
                Return CType(Me(Me.tabledetafac01.nomartColumn),String)
            End Get
            Set
                Me(Me.tabledetafac01.nomartColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property numbod() As Integer
            Get
                Return CType(Me(Me.tabledetafac01.numbodColumn),Integer)
            End Get
            Set
                Me(Me.tabledetafac01.numbodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cantidad() As Double
            Get
                Return CType(Me(Me.tabledetafac01.cantidadColumn),Double)
            End Get
            Set
                Me(Me.tabledetafac01.cantidadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property valor() As Double
            Get
                Return CType(Me(Me.tabledetafac01.valorColumn),Double)
            End Get
            Set
                Me(Me.tabledetafac01.valorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property vtotal() As Double
            Get
                Return CType(Me(Me.tabledetafac01.vtotalColumn),Double)
            End Get
            Set
                Me(Me.tabledetafac01.vtotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property iva_d() As Decimal
            Get
                Return CType(Me(Me.tabledetafac01.iva_dColumn),Decimal)
            End Get
            Set
                Me(Me.tabledetafac01.iva_dColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cta_inv() As String
            Get
                Return CType(Me(Me.tabledetafac01.cta_invColumn),String)
            End Get
            Set
                Me(Me.tabledetafac01.cta_invColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cta_cos() As String
            Get
                Return CType(Me(Me.tabledetafac01.cta_cosColumn),String)
            End Get
            Set
                Me(Me.tabledetafac01.cta_cosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cta_ing() As String
            Get
                Return CType(Me(Me.tabledetafac01.cta_ingColumn),String)
            End Get
            Set
                Me(Me.tabledetafac01.cta_ingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cta_iva() As String
            Get
                Return CType(Me(Me.tabledetafac01.cta_ivaColumn),String)
            End Get
            Set
                Me(Me.tabledetafac01.cta_ivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property costo() As Double
            Get
                Return CType(Me(Me.tabledetafac01.costoColumn),Double)
            End Get
            Set
                Me(Me.tabledetafac01.costoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property concep() As String
            Get
                Return CType(Me(Me.tabledetafac01.concepColumn),String)
            End Get
            Set
                Me(Me.tabledetafac01.concepColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class facturas01Row
        Inherits Global.System.Data.DataRow
        
        Private tablefacturas01 As facturas01DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablefacturas01 = CType(Me.Table,facturas01DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property doc() As String
            Get
                Return CType(Me(Me.tablefacturas01.docColumn),String)
            End Get
            Set
                Me(Me.tablefacturas01.docColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property num() As Long
            Get
                Return CType(Me(Me.tablefacturas01.numColumn),Long)
            End Get
            Set
                Me(Me.tablefacturas01.numColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tipodoc() As String
            Get
                Return CType(Me(Me.tablefacturas01.tipodocColumn),String)
            End Get
            Set
                Me(Me.tablefacturas01.tipodocColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property doc_de() As String
            Get
                Return CType(Me(Me.tablefacturas01.doc_deColumn),String)
            End Get
            Set
                Me(Me.tablefacturas01.doc_deColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nitc() As String
            Get
                Return CType(Me(Me.tablefacturas01.nitcColumn),String)
            End Get
            Set
                Me(Me.tablefacturas01.nitcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nitv() As String
            Get
                Return CType(Me(Me.tablefacturas01.nitvColumn),String)
            End Get
            Set
                Me(Me.tablefacturas01.nitvColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property usuario() As String
            Get
                Return CType(Me(Me.tablefacturas01.usuarioColumn),String)
            End Get
            Set
                Me(Me.tablefacturas01.usuarioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fecha() As Date
            Get
                Return CType(Me(Me.tablefacturas01.fechaColumn),Date)
            End Get
            Set
                Me(Me.tablefacturas01.fechaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property hora() As System.TimeSpan
            Get
                Return CType(Me(Me.tablefacturas01.horaColumn),Global.System.TimeSpan)
            End Get
            Set
                Me(Me.tablefacturas01.horaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property descrip() As String
            Get
                Return CType(Me(Me.tablefacturas01.descripColumn),String)
            End Get
            Set
                Me(Me.tablefacturas01.descripColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property doc_afec() As String
            Get
                Return CType(Me(Me.tablefacturas01.doc_afecColumn),String)
            End Get
            Set
                Me(Me.tablefacturas01.doc_afecColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property afecta() As String
            Get
                Return CType(Me(Me.tablefacturas01.afectaColumn),String)
            End Get
            Set
                Me(Me.tablefacturas01.afectaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property subtotal() As Double
            Get
                Return CType(Me(Me.tablefacturas01.subtotalColumn),Double)
            End Get
            Set
                Me(Me.tablefacturas01.subtotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property por_desc() As Decimal
            Get
                Return CType(Me(Me.tablefacturas01.por_descColumn),Decimal)
            End Get
            Set
                Me(Me.tablefacturas01.por_descColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property descuento() As Double
            Get
                Return CType(Me(Me.tablefacturas01.descuentoColumn),Double)
            End Get
            Set
                Me(Me.tablefacturas01.descuentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cta_desc() As String
            Get
                Return CType(Me(Me.tablefacturas01.cta_descColumn),String)
            End Get
            Set
                Me(Me.tablefacturas01.cta_descColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property por_ret_f() As Decimal
            Get
                Return CType(Me(Me.tablefacturas01.por_ret_fColumn),Decimal)
            End Get
            Set
                Me(Me.tablefacturas01.por_ret_fColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ret_f() As Double
            Get
                Return CType(Me(Me.tablefacturas01.ret_fColumn),Double)
            End Get
            Set
                Me(Me.tablefacturas01.ret_fColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cta_ret_f() As String
            Get
                Return CType(Me(Me.tablefacturas01.cta_ret_fColumn),String)
            End Get
            Set
                Me(Me.tablefacturas01.cta_ret_fColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property por_iva() As Decimal
            Get
                Return CType(Me(Me.tablefacturas01.por_ivaColumn),Decimal)
            End Get
            Set
                Me(Me.tablefacturas01.por_ivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property iva() As Double
            Get
                Return CType(Me(Me.tablefacturas01.ivaColumn),Double)
            End Get
            Set
                Me(Me.tablefacturas01.ivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cta_iva() As String
            Get
                Return CType(Me(Me.tablefacturas01.cta_ivaColumn),String)
            End Get
            Set
                Me(Me.tablefacturas01.cta_ivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property por_ret_iva() As Decimal
            Get
                Return CType(Me(Me.tablefacturas01.por_ret_ivaColumn),Decimal)
            End Get
            Set
                Me(Me.tablefacturas01.por_ret_ivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ret_iva() As Double
            Get
                Return CType(Me(Me.tablefacturas01.ret_ivaColumn),Double)
            End Get
            Set
                Me(Me.tablefacturas01.ret_ivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cta_ret_iva() As String
            Get
                Return CType(Me(Me.tablefacturas01.cta_ret_ivaColumn),String)
            End Get
            Set
                Me(Me.tablefacturas01.cta_ret_ivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property por_ret_ica() As Decimal
            Get
                Return CType(Me(Me.tablefacturas01.por_ret_icaColumn),Decimal)
            End Get
            Set
                Me(Me.tablefacturas01.por_ret_icaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ret_ica() As Double
            Get
                Return CType(Me(Me.tablefacturas01.ret_icaColumn),Double)
            End Get
            Set
                Me(Me.tablefacturas01.ret_icaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cta_ret_ica() As String
            Get
                Return CType(Me(Me.tablefacturas01.cta_ret_icaColumn),String)
            End Get
            Set
                Me(Me.tablefacturas01.cta_ret_icaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property total() As Double
            Get
                Return CType(Me(Me.tablefacturas01.totalColumn),Double)
            End Get
            Set
                Me(Me.tablefacturas01.totalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cta_total() As String
            Get
                Return CType(Me(Me.tablefacturas01.cta_totalColumn),String)
            End Get
            Set
                Me(Me.tablefacturas01.cta_totalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property estado() As String
            Get
                Return CType(Me(Me.tablefacturas01.estadoColumn),String)
            End Get
            Set
                Me(Me.tablefacturas01.estadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property observ() As String
            Get
                Return CType(Me(Me.tablefacturas01.observColumn),String)
            End Get
            Set
                Me(Me.tablefacturas01.observColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property vmto() As Integer
            Get
                Return CType(Me(Me.tablefacturas01.vmtoColumn),Integer)
            End Get
            Set
                Me(Me.tablefacturas01.vmtoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dir_ent() As String
            Get
                Return CType(Me(Me.tablefacturas01.dir_entColumn),String)
            End Get
            Set
                Me(Me.tablefacturas01.dir_entColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ciu_ent() As String
            Get
                Return CType(Me(Me.tablefacturas01.ciu_entColumn),String)
            End Get
            Set
                Me(Me.tablefacturas01.ciu_entColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property o_compra() As String
            Get
                Return CType(Me(Me.tablefacturas01.o_compraColumn),String)
            End Get
            Set
                Me(Me.tablefacturas01.o_compraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fecha_o() As String
            Get
                Return CType(Me(Me.tablefacturas01.fecha_oColumn),String)
            End Get
            Set
                Me(Me.tablefacturas01.fecha_oColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cc() As String
            Get
                Return CType(Me(Me.tablefacturas01.ccColumn),String)
            End Get
            Set
                Me(Me.tablefacturas01.ccColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property o_con() As String
            Get
                Return CType(Me(Me.tablefacturas01.o_conColumn),String)
            End Get
            Set
                Me(Me.tablefacturas01.o_conColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t1() As String
            Get
                Return CType(Me(Me.tablefacturas01.t1Column),String)
            End Get
            Set
                Me(Me.tablefacturas01.t1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property d1() As String
            Get
                Return CType(Me(Me.tablefacturas01.d1Column),String)
            End Get
            Set
                Me(Me.tablefacturas01.d1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property v1() As Double
            Get
                Return CType(Me(Me.tablefacturas01.v1Column),Double)
            End Get
            Set
                Me(Me.tablefacturas01.v1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cta1() As String
            Get
                Return CType(Me(Me.tablefacturas01.cta1Column),String)
            End Get
            Set
                Me(Me.tablefacturas01.cta1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t2() As String
            Get
                Return CType(Me(Me.tablefacturas01.t2Column),String)
            End Get
            Set
                Me(Me.tablefacturas01.t2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property d2() As String
            Get
                Return CType(Me(Me.tablefacturas01.d2Column),String)
            End Get
            Set
                Me(Me.tablefacturas01.d2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property v2() As Double
            Get
                Return CType(Me(Me.tablefacturas01.v2Column),Double)
            End Get
            Set
                Me(Me.tablefacturas01.v2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cta2() As String
            Get
                Return CType(Me(Me.tablefacturas01.cta2Column),String)
            End Get
            Set
                Me(Me.tablefacturas01.cta2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property t3() As String
            Get
                Return CType(Me(Me.tablefacturas01.t3Column),String)
            End Get
            Set
                Me(Me.tablefacturas01.t3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property d3() As String
            Get
                Return CType(Me(Me.tablefacturas01.d3Column),String)
            End Get
            Set
                Me(Me.tablefacturas01.d3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property v3() As Double
            Get
                Return CType(Me(Me.tablefacturas01.v3Column),Double)
            End Get
            Set
                Me(Me.tablefacturas01.v3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cta3() As String
            Get
                Return CType(Me(Me.tablefacturas01.cta3Column),String)
            End Get
            Set
                Me(Me.tablefacturas01.cta3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property entregar() As String
            Get
                Return CType(Me(Me.tablefacturas01.entregarColumn),String)
            End Get
            Set
                Me(Me.tablefacturas01.entregarColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class facpagos01Row
        Inherits Global.System.Data.DataRow
        
        Private tablefacpagos01 As facpagos01DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablefacpagos01 = CType(Me.Table,facpagos01DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property doc() As String
            Get
                Return CType(Me(Me.tablefacpagos01.docColumn),String)
            End Get
            Set
                Me(Me.tablefacpagos01.docColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tipo() As String
            Get
                Return CType(Me(Me.tablefacpagos01.tipoColumn),String)
            End Get
            Set
                Me(Me.tablefacpagos01.tipoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property descrip() As String
            Get
                Return CType(Me(Me.tablefacpagos01.descripColumn),String)
            End Get
            Set
                Me(Me.tablefacpagos01.descripColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tt() As String
            Get
                Return CType(Me(Me.tablefacpagos01.ttColumn),String)
            End Get
            Set
                Me(Me.tablefacpagos01.ttColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property banco() As String
            Get
                Return CType(Me(Me.tablefacpagos01.bancoColumn),String)
            End Get
            Set
                Me(Me.tablefacpagos01.bancoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property numero() As String
            Get
                Return CType(Me(Me.tablefacpagos01.numeroColumn),String)
            End Get
            Set
                Me(Me.tablefacpagos01.numeroColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property valor() As Double
            Get
                Return CType(Me(Me.tablefacpagos01.valorColumn),Double)
            End Get
            Set
                Me(Me.tablefacpagos01.valorColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class cobdpenRow
        Inherits Global.System.Data.DataRow
        
        Private tablecobdpen As cobdpenDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablecobdpen = CType(Me.Table,cobdpenDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property doc() As String
            Get
                Return CType(Me(Me.tablecobdpen.docColumn),String)
            End Get
            Set
                Me(Me.tablecobdpen.docColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tipo() As String
            Get
                Return CType(Me(Me.tablecobdpen.tipoColumn),String)
            End Get
            Set
                Me(Me.tablecobdpen.tipoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property num() As Long
            Get
                Return CType(Me(Me.tablecobdpen.numColumn),Long)
            End Get
            Set
                Me(Me.tablecobdpen.numColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property descrip() As String
            Get
                Return CType(Me(Me.tablecobdpen.descripColumn),String)
            End Get
            Set
                Me(Me.tablecobdpen.descripColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tipafec() As String
            Get
                Return CType(Me(Me.tablecobdpen.tipafecColumn),String)
            End Get
            Set
                Me(Me.tablecobdpen.tipafecColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property clasaju() As String
            Get
                Return CType(Me(Me.tablecobdpen.clasajuColumn),String)
            End Get
            Set
                Me(Me.tablecobdpen.clasajuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nitc() As String
            Get
                Return CType(Me(Me.tablecobdpen.nitcColumn),String)
            End Get
            Set
                Me(Me.tablecobdpen.nitcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nomnit() As String
            Get
                Return CType(Me(Me.tablecobdpen.nomnitColumn),String)
            End Get
            Set
                Me(Me.tablecobdpen.nomnitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nitcod() As String
            Get
                Return CType(Me(Me.tablecobdpen.nitcodColumn),String)
            End Get
            Set
                Me(Me.tablecobdpen.nitcodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nitv() As String
            Get
                Return CType(Me(Me.tablecobdpen.nitvColumn),String)
            End Get
            Set
                Me(Me.tablecobdpen.nitvColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fecha() As Date
            Get
                Return CType(Me(Me.tablecobdpen.fechaColumn),Date)
            End Get
            Set
                Me(Me.tablecobdpen.fechaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property vmto() As Integer
            Get
                Return CType(Me(Me.tablecobdpen.vmtoColumn),Integer)
            End Get
            Set
                Me(Me.tablecobdpen.vmtoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property concepto() As String
            Get
                Return CType(Me(Me.tablecobdpen.conceptoColumn),String)
            End Get
            Set
                Me(Me.tablecobdpen.conceptoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property subtotal() As Double
            Get
                Return CType(Me(Me.tablecobdpen.subtotalColumn),Double)
            End Get
            Set
                Me(Me.tablecobdpen.subtotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property descto() As Double
            Get
                Return CType(Me(Me.tablecobdpen.desctoColumn),Double)
            End Get
            Set
                Me(Me.tablecobdpen.desctoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ret() As Double
            Get
                Return CType(Me(Me.tablecobdpen.retColumn),Double)
            End Get
            Set
                Me(Me.tablecobdpen.retColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property iva() As Decimal
            Get
                Return CType(Me(Me.tablecobdpen.ivaColumn),Decimal)
            End Get
            Set
                Me(Me.tablecobdpen.ivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property v_viva() As Double
            Get
                Return CType(Me(Me.tablecobdpen.v_vivaColumn),Double)
            End Get
            Set
                Me(Me.tablecobdpen.v_vivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property total() As Double
            Get
                Return CType(Me(Me.tablecobdpen.totalColumn),Double)
            End Get
            Set
                Me(Me.tablecobdpen.totalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ctasubtotal() As String
            Get
                Return CType(Me(Me.tablecobdpen.ctasubtotalColumn),String)
            End Get
            Set
                Me(Me.tablecobdpen.ctasubtotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ctaret() As String
            Get
                Return CType(Me(Me.tablecobdpen.ctaretColumn),String)
            End Get
            Set
                Me(Me.tablecobdpen.ctaretColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ctaiva() As String
            Get
                Return CType(Me(Me.tablecobdpen.ctaivaColumn),String)
            End Get
            Set
                Me(Me.tablecobdpen.ctaivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ctatotal() As String
            Get
                Return CType(Me(Me.tablecobdpen.ctatotalColumn),String)
            End Get
            Set
                Me(Me.tablecobdpen.ctatotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ccosto() As String
            Get
                Return CType(Me(Me.tablecobdpen.ccostoColumn),String)
            End Get
            Set
                Me(Me.tablecobdpen.ccostoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property otroimp() As String
            Get
                Return CType(Me(Me.tablecobdpen.otroimpColumn),String)
            End Get
            Set
                Me(Me.tablecobdpen.otroimpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property retiva() As Double
            Get
                Return CType(Me(Me.tablecobdpen.retivaColumn),Double)
            End Get
            Set
                Me(Me.tablecobdpen.retivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ctaretiva() As String
            Get
                Return CType(Me(Me.tablecobdpen.ctaretivaColumn),String)
            End Get
            Set
                Me(Me.tablecobdpen.ctaretivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property retica() As Double
            Get
                Return CType(Me(Me.tablecobdpen.reticaColumn),Double)
            End Get
            Set
                Me(Me.tablecobdpen.reticaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ctaretica() As String
            Get
                Return CType(Me(Me.tablecobdpen.ctareticaColumn),String)
            End Get
            Set
                Me(Me.tablecobdpen.ctareticaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pagado() As Double
            Get
                Return CType(Me(Me.tablecobdpen.pagadoColumn),Double)
            End Get
            Set
                Me(Me.tablecobdpen.pagadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property rcpos() As String
            Get
                Return CType(Me(Me.tablecobdpen.rcposColumn),String)
            End Get
            Set
                Me(Me.tablecobdpen.rcposColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fechpos() As String
            Get
                Return CType(Me(Me.tablecobdpen.fechposColumn),String)
            End Get
            Set
                Me(Me.tablecobdpen.fechposColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property vpos() As Double
            Get
                Return CType(Me(Me.tablecobdpen.vposColumn),Double)
            End Get
            Set
                Me(Me.tablecobdpen.vposColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tasa() As Double
            Get
                Return CType(Me(Me.tablecobdpen.tasaColumn),Double)
            End Get
            Set
                Me(Me.tablecobdpen.tasaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property moneda() As String
            Get
                Return CType(Me(Me.tablecobdpen.monedaColumn),String)
            End Get
            Set
                Me(Me.tablecobdpen.monedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property monloex() As String
            Get
                Return CType(Me(Me.tablecobdpen.monloexColumn),String)
            End Get
            Set
                Me(Me.tablecobdpen.monloexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property estado() As String
            Get
                Return CType(Me(Me.tablecobdpen.estadoColumn),String)
            End Get
            Set
                Me(Me.tablecobdpen.estadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property salmov() As String
            Get
                Return CType(Me(Me.tablecobdpen.salmovColumn),String)
            End Get
            Set
                Me(Me.tablecobdpen.salmovColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pagare() As String
            Get
                Return CType(Me(Me.tablecobdpen.pagareColumn),String)
            End Get
            Set
                Me(Me.tablecobdpen.pagareColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class ctas_x_pagarRow
        Inherits Global.System.Data.DataRow
        
        Private tablectas_x_pagar As ctas_x_pagarDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablectas_x_pagar = CType(Me.Table,ctas_x_pagarDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property doc() As String
            Get
                Return CType(Me(Me.tablectas_x_pagar.docColumn),String)
            End Get
            Set
                Me(Me.tablectas_x_pagar.docColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tipo() As String
            Get
                Return CType(Me(Me.tablectas_x_pagar.tipoColumn),String)
            End Get
            Set
                Me(Me.tablectas_x_pagar.tipoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property num() As Long
            Get
                Return CType(Me(Me.tablectas_x_pagar.numColumn),Long)
            End Get
            Set
                Me(Me.tablectas_x_pagar.numColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property doc_ext() As String
            Get
                Return CType(Me(Me.tablectas_x_pagar.doc_extColumn),String)
            End Get
            Set
                Me(Me.tablectas_x_pagar.doc_extColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property descrip() As String
            Get
                Return CType(Me(Me.tablectas_x_pagar.descripColumn),String)
            End Get
            Set
                Me(Me.tablectas_x_pagar.descripColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tipafec() As String
            Get
                Return CType(Me(Me.tablectas_x_pagar.tipafecColumn),String)
            End Get
            Set
                Me(Me.tablectas_x_pagar.tipafecColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property clasaju() As String
            Get
                Return CType(Me(Me.tablectas_x_pagar.clasajuColumn),String)
            End Get
            Set
                Me(Me.tablectas_x_pagar.clasajuColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nitc() As String
            Get
                Return CType(Me(Me.tablectas_x_pagar.nitcColumn),String)
            End Get
            Set
                Me(Me.tablectas_x_pagar.nitcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nomnit() As String
            Get
                Return CType(Me(Me.tablectas_x_pagar.nomnitColumn),String)
            End Get
            Set
                Me(Me.tablectas_x_pagar.nomnitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nitcod() As String
            Get
                Return CType(Me(Me.tablectas_x_pagar.nitcodColumn),String)
            End Get
            Set
                Me(Me.tablectas_x_pagar.nitcodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fecha() As Date
            Get
                Return CType(Me(Me.tablectas_x_pagar.fechaColumn),Date)
            End Get
            Set
                Me(Me.tablectas_x_pagar.fechaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property vmto() As Integer
            Get
                Return CType(Me(Me.tablectas_x_pagar.vmtoColumn),Integer)
            End Get
            Set
                Me(Me.tablectas_x_pagar.vmtoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property concepto() As String
            Get
                Return CType(Me(Me.tablectas_x_pagar.conceptoColumn),String)
            End Get
            Set
                Me(Me.tablectas_x_pagar.conceptoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property subtotal() As Double
            Get
                Return CType(Me(Me.tablectas_x_pagar.subtotalColumn),Double)
            End Get
            Set
                Me(Me.tablectas_x_pagar.subtotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property descto() As Double
            Get
                Return CType(Me(Me.tablectas_x_pagar.desctoColumn),Double)
            End Get
            Set
                Me(Me.tablectas_x_pagar.desctoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ret() As Double
            Get
                Return CType(Me(Me.tablectas_x_pagar.retColumn),Double)
            End Get
            Set
                Me(Me.tablectas_x_pagar.retColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property iva() As Decimal
            Get
                Return CType(Me(Me.tablectas_x_pagar.ivaColumn),Decimal)
            End Get
            Set
                Me(Me.tablectas_x_pagar.ivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property v_viva() As Double
            Get
                Return CType(Me(Me.tablectas_x_pagar.v_vivaColumn),Double)
            End Get
            Set
                Me(Me.tablectas_x_pagar.v_vivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property total() As Double
            Get
                Return CType(Me(Me.tablectas_x_pagar.totalColumn),Double)
            End Get
            Set
                Me(Me.tablectas_x_pagar.totalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ctasubtotal() As String
            Get
                Return CType(Me(Me.tablectas_x_pagar.ctasubtotalColumn),String)
            End Get
            Set
                Me(Me.tablectas_x_pagar.ctasubtotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ctaret() As String
            Get
                Return CType(Me(Me.tablectas_x_pagar.ctaretColumn),String)
            End Get
            Set
                Me(Me.tablectas_x_pagar.ctaretColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ctaiva() As String
            Get
                Return CType(Me(Me.tablectas_x_pagar.ctaivaColumn),String)
            End Get
            Set
                Me(Me.tablectas_x_pagar.ctaivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ctatotal() As String
            Get
                Return CType(Me(Me.tablectas_x_pagar.ctatotalColumn),String)
            End Get
            Set
                Me(Me.tablectas_x_pagar.ctatotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ccosto() As String
            Get
                Return CType(Me(Me.tablectas_x_pagar.ccostoColumn),String)
            End Get
            Set
                Me(Me.tablectas_x_pagar.ccostoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property otroimp() As String
            Get
                Return CType(Me(Me.tablectas_x_pagar.otroimpColumn),String)
            End Get
            Set
                Me(Me.tablectas_x_pagar.otroimpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property retiva() As Double
            Get
                Return CType(Me(Me.tablectas_x_pagar.retivaColumn),Double)
            End Get
            Set
                Me(Me.tablectas_x_pagar.retivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ctaretiva() As String
            Get
                Return CType(Me(Me.tablectas_x_pagar.ctaretivaColumn),String)
            End Get
            Set
                Me(Me.tablectas_x_pagar.ctaretivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property retica() As Double
            Get
                Return CType(Me(Me.tablectas_x_pagar.reticaColumn),Double)
            End Get
            Set
                Me(Me.tablectas_x_pagar.reticaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ctaretica() As String
            Get
                Return CType(Me(Me.tablectas_x_pagar.ctareticaColumn),String)
            End Get
            Set
                Me(Me.tablectas_x_pagar.ctareticaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pagado() As Double
            Get
                Return CType(Me(Me.tablectas_x_pagar.pagadoColumn),Double)
            End Get
            Set
                Me(Me.tablectas_x_pagar.pagadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property rcpos() As String
            Get
                Return CType(Me(Me.tablectas_x_pagar.rcposColumn),String)
            End Get
            Set
                Me(Me.tablectas_x_pagar.rcposColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fechpos() As String
            Get
                Return CType(Me(Me.tablectas_x_pagar.fechposColumn),String)
            End Get
            Set
                Me(Me.tablectas_x_pagar.fechposColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property vpos() As Double
            Get
                Return CType(Me(Me.tablectas_x_pagar.vposColumn),Double)
            End Get
            Set
                Me(Me.tablectas_x_pagar.vposColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tasa() As Double
            Get
                Return CType(Me(Me.tablectas_x_pagar.tasaColumn),Double)
            End Get
            Set
                Me(Me.tablectas_x_pagar.tasaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property moneda() As String
            Get
                Return CType(Me(Me.tablectas_x_pagar.monedaColumn),String)
            End Get
            Set
                Me(Me.tablectas_x_pagar.monedaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property monloex() As String
            Get
                Return CType(Me(Me.tablectas_x_pagar.monloexColumn),String)
            End Get
            Set
                Me(Me.tablectas_x_pagar.monloexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property estado() As String
            Get
                Return CType(Me(Me.tablectas_x_pagar.estadoColumn),String)
            End Get
            Set
                Me(Me.tablectas_x_pagar.estadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property salmov() As String
            Get
                Return CType(Me(Me.tablectas_x_pagar.salmovColumn),String)
            End Get
            Set
                Me(Me.tablectas_x_pagar.salmovColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pagare() As String
            Get
                Return CType(Me(Me.tablectas_x_pagar.pagareColumn),String)
            End Get
            Set
                Me(Me.tablectas_x_pagar.pagareColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class parafactsRow
        Inherits Global.System.Data.DataRow
        
        Private tableparafacts As parafactsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableparafacts = CType(Me.Table,parafactsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property factura() As String
            Get
                Return CType(Me(Me.tableparafacts.facturaColumn),String)
            End Get
            Set
                Me(Me.tableparafacts.facturaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property doc() As String
            Get
                Return CType(Me(Me.tableparafacts.docColumn),String)
            End Get
            Set
                Me(Me.tableparafacts.docColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tipodoc() As String
            Get
                Return CType(Me(Me.tableparafacts.tipodocColumn),String)
            End Get
            Set
                Me(Me.tableparafacts.tipodocColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property numfact() As String
            Get
                Return CType(Me(Me.tableparafacts.numfactColumn),String)
            End Get
            Set
                Me(Me.tableparafacts.numfactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property afecinv() As String
            Get
                Return CType(Me(Me.tableparafacts.afecinvColumn),String)
            End Get
            Set
                Me(Me.tableparafacts.afecinvColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fecha() As String
            Get
                Return CType(Me(Me.tableparafacts.fechaColumn),String)
            End Get
            Set
                Me(Me.tableparafacts.fechaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nitcpre() As String
            Get
                Return CType(Me(Me.tableparafacts.nitcpreColumn),String)
            End Get
            Set
                Me(Me.tableparafacts.nitcpreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nitc() As String
            Get
                Return CType(Me(Me.tableparafacts.nitcColumn),String)
            End Get
            Set
                Me(Me.tableparafacts.nitcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nitvpre() As String
            Get
                Return CType(Me(Me.tableparafacts.nitvpreColumn),String)
            End Get
            Set
                Me(Me.tableparafacts.nitvpreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nitv() As String
            Get
                Return CType(Me(Me.tableparafacts.nitvColumn),String)
            End Get
            Set
                Me(Me.tableparafacts.nitvColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property codinv() As String
            Get
                Return CType(Me(Me.tableparafacts.codinvColumn),String)
            End Get
            Set
                Me(Me.tableparafacts.codinvColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property centrocost() As String
            Get
                Return CType(Me(Me.tableparafacts.centrocostColumn),String)
            End Get
            Set
                Me(Me.tableparafacts.centrocostColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property facdifuniemp() As String
            Get
                Return CType(Me(Me.tableparafacts.facdifuniempColumn),String)
            End Get
            Set
                Me(Me.tableparafacts.facdifuniempColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property precautcant() As String
            Get
                Return CType(Me(Me.tableparafacts.precautcantColumn),String)
            End Get
            Set
                Me(Me.tableparafacts.precautcantColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property bodpred() As String
            Get
                Return CType(Me(Me.tableparafacts.bodpredColumn),String)
            End Get
            Set
                Me(Me.tableparafacts.bodpredColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property idbod() As String
            Get
                Return CType(Me(Me.tableparafacts.idbodColumn),String)
            End Get
            Set
                Me(Me.tableparafacts.idbodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property margmin() As String
            Get
                Return CType(Me(Me.tableparafacts.margminColumn),String)
            End Get
            Set
                Me(Me.tableparafacts.margminColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property margen() As String
            Get
                Return CType(Me(Me.tableparafacts.margenColumn),String)
            End Get
            Set
                Me(Me.tableparafacts.margenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property concomipre() As String
            Get
                Return CType(Me(Me.tableparafacts.concomipreColumn),String)
            End Get
            Set
                Me(Me.tableparafacts.concomipreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property concomi() As String
            Get
                Return CType(Me(Me.tableparafacts.concomiColumn),String)
            End Get
            Set
                Me(Me.tableparafacts.concomiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fpagopre() As String
            Get
                Return CType(Me(Me.tableparafacts.fpagopreColumn),String)
            End Get
            Set
                Me(Me.tableparafacts.fpagopreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cualfp() As String
            Get
                Return CType(Me(Me.tableparafacts.cualfpColumn),String)
            End Get
            Set
                Me(Me.tableparafacts.cualfpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property formatfac() As String
            Get
                Return CType(Me(Me.tableparafacts.formatfacColumn),String)
            End Get
            Set
                Me(Me.tableparafacts.formatfacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property logofac() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableparafacts.logofacColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'logofac' de la tabla 'parafacts' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableparafacts.logofacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property formatped() As String
            Get
                Return CType(Me(Me.tableparafacts.formatpedColumn),String)
            End Get
            Set
                Me(Me.tableparafacts.formatpedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property logoped() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableparafacts.logopedColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'logoped' de la tabla 'parafacts' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableparafacts.logopedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property formatcot() As String
            Get
                Return CType(Me(Me.tableparafacts.formatcotColumn),String)
            End Get
            Set
                Me(Me.tableparafacts.formatcotColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property logocot() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableparafacts.logocotColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'logocot' de la tabla 'parafacts' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableparafacts.logocotColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tipocompa() As String
            Get
                Return CType(Me(Me.tableparafacts.tipocompaColumn),String)
            End Get
            Set
                Me(Me.tableparafacts.tipocompaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property comentario() As String
            Get
                Return CType(Me(Me.tableparafacts.comentarioColumn),String)
            End Get
            Set
                Me(Me.tableparafacts.comentarioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property imp_dec() As String
            Get
                Return CType(Me(Me.tableparafacts.imp_decColumn),String)
            End Get
            Set
                Me(Me.tableparafacts.imp_decColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IslogofacNull() As Boolean
            Return Me.IsNull(Me.tableparafacts.logofacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetlogofacNull()
            Me(Me.tableparafacts.logofacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IslogopedNull() As Boolean
            Return Me.IsNull(Me.tableparafacts.logopedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetlogopedNull()
            Me(Me.tableparafacts.logopedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IslogocotNull() As Boolean
            Return Me.IsNull(Me.tableparafacts.logocotColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetlogocotNull()
            Me(Me.tableparafacts.logocotColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class selpucRow
        Inherits Global.System.Data.DataRow
        
        Private tableselpuc As selpucDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableselpuc = CType(Me.Table,selpucDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property codigo() As String
            Get
                Return CType(Me(Me.tableselpuc.codigoColumn),String)
            End Get
            Set
                Me(Me.tableselpuc.codigoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property descripcion() As String
            Get
                Return CType(Me(Me.tableselpuc.descripcionColumn),String)
            End Get
            Set
                Me(Me.tableselpuc.descripcionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property naturaleza() As String
            Get
                Return CType(Me(Me.tableselpuc.naturalezaColumn),String)
            End Get
            Set
                Me(Me.tableselpuc.naturalezaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nivel() As String
            Get
                Return CType(Me(Me.tableselpuc.nivelColumn),String)
            End Get
            Set
                Me(Me.tableselpuc.nivelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tipo() As String
            Get
                Return CType(Me(Me.tableselpuc.tipoColumn),String)
            End Get
            Set
                Me(Me.tableselpuc.tipoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property saldo() As Double
            Get
                Return CType(Me(Me.tableselpuc.saldoColumn),Double)
            End Get
            Set
                Me(Me.tableselpuc.saldoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property saldo00() As Double
            Get
                Return CType(Me(Me.tableselpuc.saldo00Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.saldo00Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property debito00() As Double
            Get
                Return CType(Me(Me.tableselpuc.debito00Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.debito00Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property credito00() As Double
            Get
                Return CType(Me(Me.tableselpuc.credito00Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.credito00Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property debito01() As Double
            Get
                Return CType(Me(Me.tableselpuc.debito01Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.debito01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property credito01() As Double
            Get
                Return CType(Me(Me.tableselpuc.credito01Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.credito01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property saldo01() As Double
            Get
                Return CType(Me(Me.tableselpuc.saldo01Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.saldo01Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property debito02() As Double
            Get
                Return CType(Me(Me.tableselpuc.debito02Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.debito02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property credito02() As Double
            Get
                Return CType(Me(Me.tableselpuc.credito02Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.credito02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property saldo02() As Double
            Get
                Return CType(Me(Me.tableselpuc.saldo02Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.saldo02Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property debito03() As Double
            Get
                Return CType(Me(Me.tableselpuc.debito03Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.debito03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property credito03() As Double
            Get
                Return CType(Me(Me.tableselpuc.credito03Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.credito03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property saldo03() As Double
            Get
                Return CType(Me(Me.tableselpuc.saldo03Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.saldo03Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property debito04() As Double
            Get
                Return CType(Me(Me.tableselpuc.debito04Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.debito04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property credito04() As Double
            Get
                Return CType(Me(Me.tableselpuc.credito04Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.credito04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property saldo04() As Double
            Get
                Return CType(Me(Me.tableselpuc.saldo04Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.saldo04Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property debito05() As Double
            Get
                Return CType(Me(Me.tableselpuc.debito05Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.debito05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property credito05() As Double
            Get
                Return CType(Me(Me.tableselpuc.credito05Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.credito05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property saldo05() As Double
            Get
                Return CType(Me(Me.tableselpuc.saldo05Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.saldo05Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property debito06() As Double
            Get
                Return CType(Me(Me.tableselpuc.debito06Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.debito06Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property credito06() As Double
            Get
                Return CType(Me(Me.tableselpuc.credito06Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.credito06Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property saldo06() As Double
            Get
                Return CType(Me(Me.tableselpuc.saldo06Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.saldo06Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property debito07() As Double
            Get
                Return CType(Me(Me.tableselpuc.debito07Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.debito07Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property credito07() As Double
            Get
                Return CType(Me(Me.tableselpuc.credito07Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.credito07Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property saldo07() As Double
            Get
                Return CType(Me(Me.tableselpuc.saldo07Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.saldo07Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property debito08() As Double
            Get
                Return CType(Me(Me.tableselpuc.debito08Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.debito08Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property credito08() As Double
            Get
                Return CType(Me(Me.tableselpuc.credito08Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.credito08Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property saldo08() As Double
            Get
                Return CType(Me(Me.tableselpuc.saldo08Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.saldo08Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property debito09() As Double
            Get
                Return CType(Me(Me.tableselpuc.debito09Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.debito09Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property credito09() As Double
            Get
                Return CType(Me(Me.tableselpuc.credito09Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.credito09Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property saldo09() As Double
            Get
                Return CType(Me(Me.tableselpuc.saldo09Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.saldo09Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property debito10() As Double
            Get
                Return CType(Me(Me.tableselpuc.debito10Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.debito10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property credito10() As Double
            Get
                Return CType(Me(Me.tableselpuc.credito10Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.credito10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property saldo10() As Double
            Get
                Return CType(Me(Me.tableselpuc.saldo10Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.saldo10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property debito11() As Double
            Get
                Return CType(Me(Me.tableselpuc.debito11Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.debito11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property credito11() As Double
            Get
                Return CType(Me(Me.tableselpuc.credito11Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.credito11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property saldo11() As Double
            Get
                Return CType(Me(Me.tableselpuc.saldo11Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.saldo11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property debito12() As Double
            Get
                Return CType(Me(Me.tableselpuc.debito12Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.debito12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property credito12() As Double
            Get
                Return CType(Me(Me.tableselpuc.credito12Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.credito12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property saldo12() As Double
            Get
                Return CType(Me(Me.tableselpuc.saldo12Column),Double)
            End Get
            Set
                Me(Me.tableselpuc.saldo12Column) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class documentos01Row
        Inherits Global.System.Data.DataRow
        
        Private tabledocumentos01 As documentos01DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledocumentos01 = CType(Me.Table,documentos01DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property item() As Integer
            Get
                Return CType(Me(Me.tabledocumentos01.itemColumn),Integer)
            End Get
            Set
                Me(Me.tabledocumentos01.itemColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property doc() As Long
            Get
                Return CType(Me(Me.tabledocumentos01.docColumn),Long)
            End Get
            Set
                Me(Me.tabledocumentos01.docColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tipodoc() As String
            Get
                Return CType(Me(Me.tabledocumentos01.tipodocColumn),String)
            End Get
            Set
                Me(Me.tabledocumentos01.tipodocColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property periodo() As String
            Get
                Return CType(Me(Me.tabledocumentos01.periodoColumn),String)
            End Get
            Set
                Me(Me.tabledocumentos01.periodoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dia() As String
            Get
                Return CType(Me(Me.tabledocumentos01.diaColumn),String)
            End Get
            Set
                Me(Me.tabledocumentos01.diaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property centro() As String
            Get
                Return CType(Me(Me.tabledocumentos01.centroColumn),String)
            End Get
            Set
                Me(Me.tabledocumentos01.centroColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property descri() As String
            Get
                Return CType(Me(Me.tabledocumentos01.descriColumn),String)
            End Get
            Set
                Me(Me.tabledocumentos01.descriColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property debito() As Double
            Get
                Return CType(Me(Me.tabledocumentos01.debitoColumn),Double)
            End Get
            Set
                Me(Me.tabledocumentos01.debitoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property credito() As Double
            Get
                Return CType(Me(Me.tabledocumentos01.creditoColumn),Double)
            End Get
            Set
                Me(Me.tabledocumentos01.creditoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property codigo() As String
            Get
                Return CType(Me(Me.tabledocumentos01.codigoColumn),String)
            End Get
            Set
                Me(Me.tabledocumentos01.codigoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property base() As Double
            Get
                Return CType(Me(Me.tabledocumentos01.baseColumn),Double)
            End Get
            Set
                Me(Me.tabledocumentos01.baseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property diasv() As Integer
            Get
                Return CType(Me(Me.tabledocumentos01.diasvColumn),Integer)
            End Get
            Set
                Me(Me.tabledocumentos01.diasvColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fechaven() As String
            Get
                Return CType(Me(Me.tabledocumentos01.fechavenColumn),String)
            End Get
            Set
                Me(Me.tabledocumentos01.fechavenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nit() As String
            Get
                Return CType(Me(Me.tabledocumentos01.nitColumn),String)
            End Get
            Set
                Me(Me.tabledocumentos01.nitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cheque() As String
            Get
                Return CType(Me(Me.tabledocumentos01.chequeColumn),String)
            End Get
            Set
                Me(Me.tabledocumentos01.chequeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property modulo() As String
            Get
                Return CType(Me(Me.tabledocumentos01.moduloColumn),String)
            End Get
            Set
                Me(Me.tabledocumentos01.moduloColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class contrato_inmRow
        Inherits Global.System.Data.DataRow
        
        Private tablecontrato_inm As contrato_inmDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablecontrato_inm = CType(Me.Table,contrato_inmDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cod_contra() As String
            Get
                Return CType(Me(Me.tablecontrato_inm.cod_contraColumn),String)
            End Get
            Set
                Me(Me.tablecontrato_inm.cod_contraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cod_inm() As String
            Get
                Return CType(Me(Me.tablecontrato_inm.cod_inmColumn),String)
            End Get
            Set
                Me(Me.tablecontrato_inm.cod_inmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nit_a() As String
            Get
                Return CType(Me(Me.tablecontrato_inm.nit_aColumn),String)
            End Get
            Set
                Me(Me.tablecontrato_inm.nit_aColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nomb_arr() As String
            Get
                Return CType(Me(Me.tablecontrato_inm.nomb_arrColumn),String)
            End Get
            Set
                Me(Me.tablecontrato_inm.nomb_arrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nit_d() As String
            Get
                Return CType(Me(Me.tablecontrato_inm.nit_dColumn),String)
            End Get
            Set
                Me(Me.tablecontrato_inm.nit_dColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fechaini() As Date
            Get
                Return CType(Me(Me.tablecontrato_inm.fechainiColumn),Date)
            End Get
            Set
                Me(Me.tablecontrato_inm.fechainiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fechafin() As Date
            Get
                Return CType(Me(Me.tablecontrato_inm.fechafinColumn),Date)
            End Get
            Set
                Me(Me.tablecontrato_inm.fechafinColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property valor() As Double
            Get
                Return CType(Me(Me.tablecontrato_inm.valorColumn),Double)
            End Get
            Set
                Me(Me.tablecontrato_inm.valorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cta_valor() As String
            Get
                Return CType(Me(Me.tablecontrato_inm.cta_valorColumn),String)
            End Get
            Set
                Me(Me.tablecontrato_inm.cta_valorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property por_iva() As Decimal
            Get
                Return CType(Me(Me.tablecontrato_inm.por_ivaColumn),Decimal)
            End Get
            Set
                Me(Me.tablecontrato_inm.por_ivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cta_iva() As String
            Get
                Return CType(Me(Me.tablecontrato_inm.cta_ivaColumn),String)
            End Get
            Set
                Me(Me.tablecontrato_inm.cta_ivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property rtf() As Double
            Get
                Return CType(Me(Me.tablecontrato_inm.rtfColumn),Double)
            End Get
            Set
                Me(Me.tablecontrato_inm.rtfColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cta_rtf() As String
            Get
                Return CType(Me(Me.tablecontrato_inm.cta_rtfColumn),String)
            End Get
            Set
                Me(Me.tablecontrato_inm.cta_rtfColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property por_comi() As Decimal
            Get
                Return CType(Me(Me.tablecontrato_inm.por_comiColumn),Decimal)
            End Get
            Set
                Me(Me.tablecontrato_inm.por_comiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cc() As String
            Get
                Return CType(Me(Me.tablecontrato_inm.ccColumn),String)
            End Get
            Set
                Me(Me.tablecontrato_inm.ccColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mes_total() As Double
            Get
                Return CType(Me(Me.tablecontrato_inm.mes_totalColumn),Double)
            End Get
            Set
                Me(Me.tablecontrato_inm.mes_totalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mes_fact() As Double
            Get
                Return CType(Me(Me.tablecontrato_inm.mes_factColumn),Double)
            End Get
            Set
                Me(Me.tablecontrato_inm.mes_factColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mes_act() As Double
            Get
                Return CType(Me(Me.tablecontrato_inm.mes_actColumn),Double)
            End Get
            Set
                Me(Me.tablecontrato_inm.mes_actColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property periodo() As String
            Get
                Return CType(Me(Me.tablecontrato_inm.periodoColumn),String)
            End Get
            Set
                Me(Me.tablecontrato_inm.periodoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nitv() As String
            Get
                Return CType(Me(Me.tablecontrato_inm.nitvColumn),String)
            End Get
            Set
                Me(Me.tablecontrato_inm.nitvColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property vmto() As Integer
            Get
                Return CType(Me(Me.tablecontrato_inm.vmtoColumn),Integer)
            End Get
            Set
                Me(Me.tablecontrato_inm.vmtoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property deposito() As Double
            Get
                Return CType(Me(Me.tablecontrato_inm.depositoColumn),Double)
            End Get
            Set
                Me(Me.tablecontrato_inm.depositoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fechaF() As Date
            Get
                Return CType(Me(Me.tablecontrato_inm.fechaFColumn),Date)
            End Get
            Set
                Me(Me.tablecontrato_inm.fechaFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nitc() As String
            Get
                Return CType(Me(Me.tablecontrato_inm.nitcColumn),String)
            End Get
            Set
                Me(Me.tablecontrato_inm.nitcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cta_cli() As String
            Get
                Return CType(Me(Me.tablecontrato_inm.cta_cliColumn),String)
            End Get
            Set
                Me(Me.tablecontrato_inm.cta_cliColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cta_cms() As String
            Get
                Return CType(Me(Me.tablecontrato_inm.cta_cmsColumn),String)
            End Get
            Set
                Me(Me.tablecontrato_inm.cta_cmsColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class parcontratoRow
        Inherits Global.System.Data.DataRow
        
        Private tableparcontrato As parcontratoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableparcontrato = CType(Me.Table,parcontratoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property comentario() As String
            Get
                Return CType(Me(Me.tableparcontrato.comentarioColumn),String)
            End Get
            Set
                Me(Me.tableparcontrato.comentarioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ctavent() As String
            Get
                Return CType(Me(Me.tableparcontrato.ctaventColumn),String)
            End Get
            Set
                Me(Me.tableparcontrato.ctaventColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ctaiva() As String
            Get
                Return CType(Me(Me.tableparcontrato.ctaivaColumn),String)
            End Get
            Set
                Me(Me.tableparcontrato.ctaivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ctartf() As String
            Get
                Return CType(Me(Me.tableparcontrato.ctartfColumn),String)
            End Get
            Set
                Me(Me.tableparcontrato.ctartfColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property parf() As String
            Get
                Return CType(Me(Me.tableparcontrato.parfColumn),String)
            End Get
            Set
                Me(Me.tableparcontrato.parfColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property docf() As String
            Get
                Return CType(Me(Me.tableparcontrato.docfColumn),String)
            End Get
            Set
                Me(Me.tableparcontrato.docfColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tipof1() As String
            Get
                Return CType(Me(Me.tableparcontrato.tipof1Column),String)
            End Get
            Set
                Me(Me.tableparcontrato.tipof1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property a_f1() As Long
            Get
                Return CType(Me(Me.tableparcontrato.a_f1Column),Long)
            End Get
            Set
                Me(Me.tableparcontrato.a_f1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property hr1() As String
            Get
                Return CType(Me(Me.tableparcontrato.hr1Column),String)
            End Get
            Set
                Me(Me.tableparcontrato.hr1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property reso1() As String
            Get
                Return CType(Me(Me.tableparcontrato.reso1Column),String)
            End Get
            Set
                Me(Me.tableparcontrato.reso1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fecexp1() As Date
            Get
                Return CType(Me(Me.tableparcontrato.fecexp1Column),Date)
            End Get
            Set
                Me(Me.tableparcontrato.fecexp1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property feclim1() As Date
            Get
                Return CType(Me(Me.tableparcontrato.feclim1Column),Date)
            End Get
            Set
                Me(Me.tableparcontrato.feclim1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ini1() As Long
            Get
                Return CType(Me(Me.tableparcontrato.ini1Column),Long)
            End Get
            Set
                Me(Me.tableparcontrato.ini1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property fin1() As Long
            Get
                Return CType(Me(Me.tableparcontrato.fin1Column),Long)
            End Get
            Set
                Me(Me.tableparcontrato.fin1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pre1() As String
            Get
                Return CType(Me(Me.tableparcontrato.pre1Column),String)
            End Get
            Set
                Me(Me.tableparcontrato.pre1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ctacli() As String
            Get
                Return CType(Me(Me.tableparcontrato.ctacliColumn),String)
            End Get
            Set
                Me(Me.tableparcontrato.ctacliColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ctacms() As String
            Get
                Return CType(Me(Me.tableparcontrato.ctacmsColumn),String)
            End Get
            Set
                Me(Me.tableparcontrato.ctacmsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property mora() As Decimal
            Get
                Return CType(Me(Me.tableparcontrato.moraColumn),Decimal)
            End Get
            Set
                Me(Me.tableparcontrato.moraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property logo() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableparcontrato.logoColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'logo' de la tabla 'parcontrato' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableparcontrato.logoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IslogoNull() As Boolean
            Return Me.IsNull(Me.tableparcontrato.logoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetlogoNull()
            Me(Me.tableparcontrato.logoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class inm_dpdenRow
        Inherits Global.System.Data.DataRow
        
        Private tableinm_dpden As inm_dpdenDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableinm_dpden = CType(Me.Table,inm_dpdenDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property codigo_inm() As String
            Get
                Return CType(Me(Me.tableinm_dpden.codigo_inmColumn),String)
            End Get
            Set
                Me(Me.tableinm_dpden.codigo_inmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property descrip() As String
            Get
                Return CType(Me(Me.tableinm_dpden.descripColumn),String)
            End Get
            Set
                Me(Me.tableinm_dpden.descripColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property espacio() As Decimal
            Get
                Return CType(Me(Me.tableinm_dpden.espacioColumn),Decimal)
            End Get
            Set
                Me(Me.tableinm_dpden.espacioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property umedida() As String
            Get
                Return CType(Me(Me.tableinm_dpden.umedidaColumn),String)
            End Get
            Set
                Me(Me.tableinm_dpden.umedidaColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class inm_llavesRow
        Inherits Global.System.Data.DataRow
        
        Private tableinm_llaves As inm_llavesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableinm_llaves = CType(Me.Table,inm_llavesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property codigo_inm() As String
            Get
                Return CType(Me(Me.tableinm_llaves.codigo_inmColumn),String)
            End Get
            Set
                Me(Me.tableinm_llaves.codigo_inmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sitio() As String
            Get
                Return CType(Me(Me.tableinm_llaves.sitioColumn),String)
            End Get
            Set
                Me(Me.tableinm_llaves.sitioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property cant() As Long
            Get
                Return CType(Me(Me.tableinm_llaves.cantColumn),Long)
            End Get
            Set
                Me(Me.tableinm_llaves.cantColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property marca() As String
            Get
                Return CType(Me(Me.tableinm_llaves.marcaColumn),String)
            End Get
            Set
                Me(Me.tableinm_llaves.marcaColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class inm_serviciosRow
        Inherits Global.System.Data.DataRow
        
        Private tableinm_servicios As inm_serviciosDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableinm_servicios = CType(Me.Table,inm_serviciosDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property codigo_inm() As String
            Get
                Return CType(Me(Me.tableinm_servicios.codigo_inmColumn),String)
            End Get
            Set
                Me(Me.tableinm_servicios.codigo_inmColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property descrip() As String
            Get
                Return CType(Me(Me.tableinm_servicios.descripColumn),String)
            End Get
            Set
                Me(Me.tableinm_servicios.descripColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property codigo() As String
            Get
                Return CType(Me(Me.tableinm_servicios.codigoColumn),String)
            End Get
            Set
                Me(Me.tableinm_servicios.codigoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property numero() As String
            Get
                Return CType(Me(Me.tableinm_servicios.numeroColumn),String)
            End Get
            Set
                Me(Me.tableinm_servicios.numeroColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property titular() As String
            Get
                Return CType(Me(Me.tableinm_servicios.titularColumn),String)
            End Get
            Set
                Me(Me.tableinm_servicios.titularColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property observacion() As String
            Get
                Return CType(Me(Me.tableinm_servicios.observacionColumn),String)
            End Get
            Set
                Me(Me.tableinm_servicios.observacionColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class inmueblesRow
        Inherits Global.System.Data.DataRow
        
        Private tableinmuebles As inmueblesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableinmuebles = CType(Me.Table,inmueblesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property codigo() As String
            Get
                Return CType(Me(Me.tableinmuebles.codigoColumn),String)
            End Get
            Set
                Me(Me.tableinmuebles.codigoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property nitp() As String
            Get
                Return CType(Me(Me.tableinmuebles.nitpColumn),String)
            End Get
            Set
                Me(Me.tableinmuebles.nitpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property avaluo() As Double
            Get
                Return CType(Me(Me.tableinmuebles.avaluoColumn),Double)
            End Get
            Set
                Me(Me.tableinmuebles.avaluoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property estado() As String
            Get
                Return CType(Me(Me.tableinmuebles.estadoColumn),String)
            End Get
            Set
                Me(Me.tableinmuebles.estadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property direccion() As String
            Get
                Return CType(Me(Me.tableinmuebles.direccionColumn),String)
            End Get
            Set
                Me(Me.tableinmuebles.direccionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ciudad() As String
            Get
                Return CType(Me(Me.tableinmuebles.ciudadColumn),String)
            End Get
            Set
                Me(Me.tableinmuebles.ciudadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property vcanon() As Double
            Get
                Return CType(Me(Me.tableinmuebles.vcanonColumn),Double)
            End Get
            Set
                Me(Me.tableinmuebles.vcanonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property descrip() As String
            Get
                Return CType(Me(Me.tableinmuebles.descripColumn),String)
            End Get
            Set
                Me(Me.tableinmuebles.descripColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tipoim() As String
            Get
                Return CType(Me(Me.tableinmuebles.tipoimColumn),String)
            End Get
            Set
                Me(Me.tableinmuebles.tipoimColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property operacion() As String
            Get
                Return CType(Me(Me.tableinmuebles.operacionColumn),String)
            End Get
            Set
                Me(Me.tableinmuebles.operacionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dpto() As String
            Get
                Return CType(Me(Me.tableinmuebles.dptoColumn),String)
            End Get
            Set
                Me(Me.tableinmuebles.dptoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property barrio() As String
            Get
                Return CType(Me(Me.tableinmuebles.barrioColumn),String)
            End Get
            Set
                Me(Me.tableinmuebles.barrioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property estrato() As String
            Get
                Return CType(Me(Me.tableinmuebles.estratoColumn),String)
            End Get
            Set
                Me(Me.tableinmuebles.estratoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property conserv() As String
            Get
                Return CType(Me(Me.tableinmuebles.conservColumn),String)
            End Get
            Set
                Me(Me.tableinmuebles.conservColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property tipoestado() As String
            Get
                Return CType(Me(Me.tableinmuebles.tipoestadoColumn),String)
            End Get
            Set
                Me(Me.tableinmuebles.tipoestadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property destino() As String
            Get
                Return CType(Me(Me.tableinmuebles.destinoColumn),String)
            End Get
            Set
                Me(Me.tableinmuebles.destinoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property llaves() As Long
            Get
                Return CType(Me(Me.tableinmuebles.llavesColumn),Long)
            End Get
            Set
                Me(Me.tableinmuebles.llavesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property previvi() As Double
            Get
                Return CType(Me(Me.tableinmuebles.previviColumn),Double)
            End Get
            Set
                Me(Me.tableinmuebles.previviColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property prelocal() As Double
            Get
                Return CType(Me(Me.tableinmuebles.prelocalColumn),Double)
            End Get
            Set
                Me(Me.tableinmuebles.prelocalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ncatast() As String
            Get
                Return CType(Me(Me.tableinmuebles.ncatastColumn),String)
            End Get
            Set
                Me(Me.tableinmuebles.ncatastColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property avcatast() As Double
            Get
                Return CType(Me(Me.tableinmuebles.avcatastColumn),Double)
            End Get
            Set
                Me(Me.tableinmuebles.avcatastColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property notaria() As String
            Get
                Return CType(Me(Me.tableinmuebles.notariaColumn),String)
            End Get
            Set
                Me(Me.tableinmuebles.notariaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property n_escritura() As String
            Get
                Return CType(Me(Me.tableinmuebles.n_escrituraColumn),String)
            End Get
            Set
                Me(Me.tableinmuebles.n_escrituraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property f_escritura() As String
            Get
                Return CType(Me(Me.tableinmuebles.f_escrituraColumn),String)
            End Get
            Set
                Me(Me.tableinmuebles.f_escrituraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property matricula() As String
            Get
                Return CType(Me(Me.tableinmuebles.matriculaColumn),String)
            End Get
            Set
                Me(Me.tableinmuebles.matriculaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property inscripcion() As String
            Get
                Return CType(Me(Me.tableinmuebles.inscripcionColumn),String)
            End Get
            Set
                Me(Me.tableinmuebles.inscripcionColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class articulosRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As articulosRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As articulosRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As articulosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class con_invRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As con_invRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As con_invRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As con_invRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class movimientos01RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As movimientos01Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As movimientos01Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As movimientos01Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class deta_mov01RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As deta_mov01Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As deta_mov01Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As deta_mov01Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class tercerosRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tercerosRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As tercerosRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As tercerosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class parinvenRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As parinvenRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As parinvenRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As parinvenRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class detafac01RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As detafac01Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As detafac01Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As detafac01Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class facturas01RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As facturas01Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As facturas01Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As facturas01Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class facpagos01RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As facpagos01Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As facpagos01Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As facpagos01Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class cobdpenRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As cobdpenRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As cobdpenRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As cobdpenRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class ctas_x_pagarRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ctas_x_pagarRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As ctas_x_pagarRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As ctas_x_pagarRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class parafactsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As parafactsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As parafactsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As parafactsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class selpucRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As selpucRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As selpucRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As selpucRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class documentos01RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As documentos01Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As documentos01Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As documentos01Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class contrato_inmRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As contrato_inmRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As contrato_inmRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As contrato_inmRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class parcontratoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As parcontratoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As parcontratoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As parcontratoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class inm_dpdenRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As inm_dpdenRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As inm_dpdenRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As inm_dpdenRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class inm_llavesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As inm_llavesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As inm_llavesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As inm_llavesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class inm_serviciosRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As inm_serviciosRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As inm_serviciosRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As inm_serviciosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class inmueblesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As inmueblesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As inmueblesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As inmueblesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace saeosteomaterial2012DataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class articulosTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "articulos"
            tableMapping.ColumnMappings.Add("codart", "codart")
            tableMapping.ColumnMappings.Add("nomart", "nomart")
            tableMapping.ColumnMappings.Add("desart", "desart")
            tableMapping.ColumnMappings.Add("nivel", "nivel")
            tableMapping.ColumnMappings.Add("referencia", "referencia")
            tableMapping.ColumnMappings.Add("codbar", "codbar")
            tableMapping.ColumnMappings.Add("cos_uni", "cos_uni")
            tableMapping.ColumnMappings.Add("cos_pro", "cos_pro")
            tableMapping.ColumnMappings.Add("margen", "margen")
            tableMapping.ColumnMappings.Add("precio", "precio")
            tableMapping.ColumnMappings.Add("iva", "iva")
            tableMapping.ColumnMappings.Add("exento", "exento")
            tableMapping.ColumnMappings.Add("excluido", "excluido")
            tableMapping.ColumnMappings.Add("cue_inv", "cue_inv")
            tableMapping.ColumnMappings.Add("cue_ing", "cue_ing")
            tableMapping.ColumnMappings.Add("cue_cos", "cue_cos")
            tableMapping.ColumnMappings.Add("cue_iva_v", "cue_iva_v")
            tableMapping.ColumnMappings.Add("cue_iva_c", "cue_iva_c")
            tableMapping.ColumnMappings.Add("cue_dev", "cue_dev")
            tableMapping.ColumnMappings.Add("unidad", "unidad")
            tableMapping.ColumnMappings.Add("empaque", "empaque")
            tableMapping.ColumnMappings.Add("can_emp", "can_emp")
            tableMapping.ColumnMappings.Add("uni_emp", "uni_emp")
            tableMapping.ColumnMappings.Add("cant_min", "cant_min")
            tableMapping.ColumnMappings.Add("pp", "pp")
            tableMapping.ColumnMappings.Add("estado", "estado")
            tableMapping.ColumnMappings.Add("con_comi", "con_comi")
            tableMapping.ColumnMappings.Add("importa", "importa")
            tableMapping.ColumnMappings.Add("num_reg", "num_reg")
            tableMapping.ColumnMappings.Add("por_ara", "por_ara")
            tableMapping.ColumnMappings.Add("pos_ara", "pos_ara")
            tableMapping.ColumnMappings.Add("p1", "p1")
            tableMapping.ColumnMappings.Add("p2", "p2")
            tableMapping.ColumnMappings.Add("p3", "p3")
            tableMapping.ColumnMappings.Add("p4", "p4")
            tableMapping.ColumnMappings.Add("p5", "p5")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `saeosteomaterial2012`.`articulos` WHERE ((`codart` = @Original_codar"& _ 
                "t) AND (`nomart` = @Original_nomart) AND (`nivel` = @Original_nivel) AND (`refer"& _ 
                "encia` = @Original_referencia) AND (`codbar` = @Original_codbar) AND (`cos_uni` "& _ 
                "= @Original_cos_uni) AND (`cos_pro` = @Original_cos_pro) AND (`margen` = @Origin"& _ 
                "al_margen) AND (`precio` = @Original_precio) AND (`iva` = @Original_iva) AND (`e"& _ 
                "xento` = @Original_exento) AND (`excluido` = @Original_excluido) AND (`cue_inv` "& _ 
                "= @Original_cue_inv) AND (`cue_ing` = @Original_cue_ing) AND (`cue_cos` = @Origi"& _ 
                "nal_cue_cos) AND (`cue_iva_v` = @Original_cue_iva_v) AND (`cue_iva_c` = @Origina"& _ 
                "l_cue_iva_c) AND (`cue_dev` = @Original_cue_dev) AND (`unidad` = @Original_unida"& _ 
                "d) AND (`empaque` = @Original_empaque) AND (`can_emp` = @Original_can_emp) AND ("& _ 
                "`uni_emp` = @Original_uni_emp) AND (`cant_min` = @Original_cant_min) AND (`pp` ="& _ 
                " @Original_pp) AND (`estado` = @Original_estado) AND (`con_comi` = @Original_con"& _ 
                "_comi) AND (`importa` = @Original_importa) AND (`num_reg` = @Original_num_reg) A"& _ 
                "ND (`por_ara` = @Original_por_ara) AND (`pos_ara` = @Original_pos_ara) AND (`p1`"& _ 
                " = @Original_p1) AND (`p2` = @Original_p2) AND (`p3` = @Original_p3) AND (`p4` ="& _ 
                " @Original_p4) AND (`p5` = @Original_p5))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_codart"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "codart"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nomart"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nomart"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nivel"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nivel"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_referencia"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "referencia"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_codbar"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "codbar"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cos_uni"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cos_uni"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cos_pro"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cos_pro"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_margen"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "margen"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_precio"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "precio"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_iva"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "iva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_exento"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "exento"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_excluido"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "excluido"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cue_inv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cue_inv"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cue_ing"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cue_ing"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cue_cos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cue_cos"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cue_iva_v"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cue_iva_v"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cue_iva_c"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cue_iva_c"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cue_dev"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cue_dev"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_unidad"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "unidad"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_empaque"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "empaque"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_can_emp"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "can_emp"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_uni_emp"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "uni_emp"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cant_min"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant_min"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_pp"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "pp"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_estado"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_con_comi"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "con_comi"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_importa"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "importa"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_num_reg"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "num_reg"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_por_ara"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_ara"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_pos_ara"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "pos_ara"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_p1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "p1"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_p2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "p2"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_p3"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "p3"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_p4"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "p4"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_p5"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "p5"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `saeosteomaterial2012`.`articulos` (`codart`, `nomart`, `desart`, `ni"& _ 
                "vel`, `referencia`, `codbar`, `cos_uni`, `cos_pro`, `margen`, `precio`, `iva`, `"& _ 
                "exento`, `excluido`, `cue_inv`, `cue_ing`, `cue_cos`, `cue_iva_v`, `cue_iva_c`, "& _ 
                "`cue_dev`, `unidad`, `empaque`, `can_emp`, `uni_emp`, `cant_min`, `pp`, `estado`"& _ 
                ", `con_comi`, `importa`, `num_reg`, `por_ara`, `pos_ara`, `p1`, `p2`, `p3`, `p4`"& _ 
                ", `p5`) VALUES (@codart, @nomart, @desart, @nivel, @referencia, @codbar, @cos_un"& _ 
                "i, @cos_pro, @margen, @precio, @iva, @exento, @excluido, @cue_inv, @cue_ing, @cu"& _ 
                "e_cos, @cue_iva_v, @cue_iva_c, @cue_dev, @unidad, @empaque, @can_emp, @uni_emp, "& _ 
                "@cant_min, @pp, @estado, @con_comi, @importa, @num_reg, @por_ara, @pos_ara, @p1,"& _ 
                " @p2, @p3, @p4, @p5)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@codart"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "codart"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nomart"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nomart"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@desart"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Text
            param.IsNullable = true
            param.SourceColumn = "desart"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nivel"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nivel"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@referencia"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "referencia"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@codbar"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "codbar"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cos_uni"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cos_uni"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cos_pro"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cos_pro"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@margen"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "margen"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@precio"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "precio"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@iva"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "iva"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@exento"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "exento"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@excluido"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "excluido"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cue_inv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cue_inv"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cue_ing"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cue_ing"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cue_cos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cue_cos"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cue_iva_v"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cue_iva_v"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cue_iva_c"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cue_iva_c"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cue_dev"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cue_dev"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@unidad"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "unidad"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@empaque"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "empaque"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@can_emp"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "can_emp"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@uni_emp"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "uni_emp"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant_min"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant_min"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@pp"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "pp"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@estado"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@con_comi"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "con_comi"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@importa"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "importa"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@num_reg"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "num_reg"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@por_ara"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_ara"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@pos_ara"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "pos_ara"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@p1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "p1"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@p2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "p2"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@p3"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "p3"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@p4"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "p4"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@p5"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "p5"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `saeosteomaterial2012`.`articulos` SET `codart` = @codart, `nomart` = @nom"& _ 
                "art, `desart` = @desart, `nivel` = @nivel, `referencia` = @referencia, `codbar` "& _ 
                "= @codbar, `cos_uni` = @cos_uni, `cos_pro` = @cos_pro, `margen` = @margen, `prec"& _ 
                "io` = @precio, `iva` = @iva, `exento` = @exento, `excluido` = @excluido, `cue_in"& _ 
                "v` = @cue_inv, `cue_ing` = @cue_ing, `cue_cos` = @cue_cos, `cue_iva_v` = @cue_iv"& _ 
                "a_v, `cue_iva_c` = @cue_iva_c, `cue_dev` = @cue_dev, `unidad` = @unidad, `empaqu"& _ 
                "e` = @empaque, `can_emp` = @can_emp, `uni_emp` = @uni_emp, `cant_min` = @cant_mi"& _ 
                "n, `pp` = @pp, `estado` = @estado, `con_comi` = @con_comi, `importa` = @importa,"& _ 
                " `num_reg` = @num_reg, `por_ara` = @por_ara, `pos_ara` = @pos_ara, `p1` = @p1, `"& _ 
                "p2` = @p2, `p3` = @p3, `p4` = @p4, `p5` = @p5 WHERE ((`codart` = @Original_codar"& _ 
                "t) AND (`nomart` = @Original_nomart) AND (`nivel` = @Original_nivel) AND (`refer"& _ 
                "encia` = @Original_referencia) AND (`codbar` = @Original_codbar) AND (`cos_uni` "& _ 
                "= @Original_cos_uni) AND (`cos_pro` = @Original_cos_pro) AND (`margen` = @Origin"& _ 
                "al_margen) AND (`precio` = @Original_precio) AND (`iva` = @Original_iva) AND (`e"& _ 
                "xento` = @Original_exento) AND (`excluido` = @Original_excluido) AND (`cue_inv` "& _ 
                "= @Original_cue_inv) AND (`cue_ing` = @Original_cue_ing) AND (`cue_cos` = @Origi"& _ 
                "nal_cue_cos) AND (`cue_iva_v` = @Original_cue_iva_v) AND (`cue_iva_c` = @Origina"& _ 
                "l_cue_iva_c) AND (`cue_dev` = @Original_cue_dev) AND (`unidad` = @Original_unida"& _ 
                "d) AND (`empaque` = @Original_empaque) AND (`can_emp` = @Original_can_emp) AND ("& _ 
                "`uni_emp` = @Original_uni_emp) AND (`cant_min` = @Original_cant_min) AND (`pp` ="& _ 
                " @Original_pp) AND (`estado` = @Original_estado) AND (`con_comi` = @Original_con"& _ 
                "_comi) AND (`importa` = @Original_importa) AND (`num_reg` = @Original_num_reg) A"& _ 
                "ND (`por_ara` = @Original_por_ara) AND (`pos_ara` = @Original_pos_ara) AND (`p1`"& _ 
                " = @Original_p1) AND (`p2` = @Original_p2) AND (`p3` = @Original_p3) AND (`p4` ="& _ 
                " @Original_p4) AND (`p5` = @Original_p5))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@codart"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "codart"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nomart"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nomart"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@desart"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Text
            param.IsNullable = true
            param.SourceColumn = "desart"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nivel"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nivel"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@referencia"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "referencia"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@codbar"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "codbar"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cos_uni"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cos_uni"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cos_pro"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cos_pro"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@margen"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "margen"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@precio"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "precio"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@iva"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "iva"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@exento"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "exento"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@excluido"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "excluido"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cue_inv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cue_inv"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cue_ing"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cue_ing"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cue_cos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cue_cos"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cue_iva_v"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cue_iva_v"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cue_iva_c"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cue_iva_c"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cue_dev"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cue_dev"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@unidad"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "unidad"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@empaque"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "empaque"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@can_emp"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "can_emp"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@uni_emp"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "uni_emp"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant_min"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant_min"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@pp"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "pp"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@estado"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@con_comi"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "con_comi"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@importa"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "importa"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@num_reg"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "num_reg"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@por_ara"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_ara"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@pos_ara"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "pos_ara"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@p1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "p1"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@p2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "p2"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@p3"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "p3"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@p4"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "p4"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@p5"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "p5"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_codart"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "codart"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nomart"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nomart"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nivel"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nivel"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_referencia"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "referencia"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_codbar"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "codbar"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cos_uni"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cos_uni"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cos_pro"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cos_pro"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_margen"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "margen"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_precio"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "precio"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_iva"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "iva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_exento"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "exento"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_excluido"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "excluido"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cue_inv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cue_inv"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cue_ing"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cue_ing"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cue_cos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cue_cos"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cue_iva_v"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cue_iva_v"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cue_iva_c"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cue_iva_c"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cue_dev"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cue_dev"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_unidad"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "unidad"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_empaque"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "empaque"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_can_emp"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "can_emp"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_uni_emp"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "uni_emp"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cant_min"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant_min"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_pp"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "pp"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_estado"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_con_comi"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "con_comi"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_importa"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "importa"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_num_reg"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "num_reg"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_por_ara"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_ara"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_pos_ara"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "pos_ara"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_p1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "p1"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_p2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "p2"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_p3"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "p3"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_p4"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "p4"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_p5"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "p5"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection
            Me._connection.ConnectionString = Global.SAE.My.MySettings.Default.saeosteomaterial2012ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `codart`, `nomart`, `desart`, `nivel`, `referencia`, `codbar`, `cos_uni`, "& _ 
                "`cos_pro`, `margen`, `precio`, `iva`, `exento`, `excluido`, `cue_inv`, `cue_ing`"& _ 
                ", `cue_cos`, `cue_iva_v`, `cue_iva_c`, `cue_dev`, `unidad`, `empaque`, `can_emp`"& _ 
                ", `uni_emp`, `cant_min`, `pp`, `estado`, `con_comi`, `importa`, `num_reg`, `por_"& _ 
                "ara`, `pos_ara`, `p1`, `p2`, `p3`, `p4`, `p5` FROM `saeosteomaterial2012`.`artic"& _ 
                "ulos`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As saeosteomaterial2012DataSet.articulosDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As saeosteomaterial2012DataSet.articulosDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As saeosteomaterial2012DataSet.articulosDataTable = New saeosteomaterial2012DataSet.articulosDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As saeosteomaterial2012DataSet.articulosDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As saeosteomaterial2012DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "articulos")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_codart As String,  _
                    ByVal Original_nomart As String,  _
                    ByVal Original_nivel As String,  _
                    ByVal Original_referencia As String,  _
                    ByVal Original_codbar As String,  _
                    ByVal Original_cos_uni As Double,  _
                    ByVal Original_cos_pro As Double,  _
                    ByVal Original_margen As String,  _
                    ByVal Original_precio As Double,  _
                    ByVal Original_iva As String,  _
                    ByVal Original_exento As String,  _
                    ByVal Original_excluido As String,  _
                    ByVal Original_cue_inv As String,  _
                    ByVal Original_cue_ing As String,  _
                    ByVal Original_cue_cos As String,  _
                    ByVal Original_cue_iva_v As String,  _
                    ByVal Original_cue_iva_c As String,  _
                    ByVal Original_cue_dev As String,  _
                    ByVal Original_unidad As String,  _
                    ByVal Original_empaque As Double,  _
                    ByVal Original_can_emp As Double,  _
                    ByVal Original_uni_emp As Double,  _
                    ByVal Original_cant_min As Double,  _
                    ByVal Original_pp As Double,  _
                    ByVal Original_estado As String,  _
                    ByVal Original_con_comi As String,  _
                    ByVal Original_importa As String,  _
                    ByVal Original_num_reg As String,  _
                    ByVal Original_por_ara As String,  _
                    ByVal Original_pos_ara As String,  _
                    ByVal Original_p1 As String,  _
                    ByVal Original_p2 As String,  _
                    ByVal Original_p3 As String,  _
                    ByVal Original_p4 As String,  _
                    ByVal Original_p5 As String) As Integer
            If (Original_codart Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_codart")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_codart,String)
            End If
            If (Original_nomart Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nomart")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_nomart,String)
            End If
            If (Original_nivel Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nivel")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_nivel,String)
            End If
            If (Original_referencia Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_referencia")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_referencia,String)
            End If
            If (Original_codbar Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_codbar")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_codbar,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_cos_uni,Double)
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_cos_pro,Double)
            If (Original_margen Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_margen")
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_margen,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_precio,Double)
            If (Original_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_iva")
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_iva,String)
            End If
            If (Original_exento Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_exento")
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_exento,String)
            End If
            If (Original_excluido Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_excluido")
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_excluido,String)
            End If
            If (Original_cue_inv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cue_inv")
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_cue_inv,String)
            End If
            If (Original_cue_ing Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cue_ing")
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_cue_ing,String)
            End If
            If (Original_cue_cos Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cue_cos")
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_cue_cos,String)
            End If
            If (Original_cue_iva_v Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cue_iva_v")
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_cue_iva_v,String)
            End If
            If (Original_cue_iva_c Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cue_iva_c")
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_cue_iva_c,String)
            End If
            If (Original_cue_dev Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cue_dev")
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_cue_dev,String)
            End If
            If (Original_unidad Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_unidad")
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_unidad,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_empaque,Double)
            Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_can_emp,Double)
            Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_uni_emp,Double)
            Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_cant_min,Double)
            Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_pp,Double)
            If (Original_estado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_estado")
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_estado,String)
            End If
            If (Original_con_comi Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_con_comi")
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_con_comi,String)
            End If
            If (Original_importa Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_importa")
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_importa,String)
            End If
            If (Original_num_reg Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_num_reg")
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_num_reg,String)
            End If
            If (Original_por_ara Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_por_ara")
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_por_ara,String)
            End If
            If (Original_pos_ara Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_pos_ara")
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_pos_ara,String)
            End If
            If (Original_p1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_p1")
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_p1,String)
            End If
            If (Original_p2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_p2")
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_p2,String)
            End If
            If (Original_p3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_p3")
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_p3,String)
            End If
            If (Original_p4 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_p4")
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_p4,String)
            End If
            If (Original_p5 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_p5")
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_p5,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal codart As String,  _
                    ByVal nomart As String,  _
                    ByVal desart As String,  _
                    ByVal nivel As String,  _
                    ByVal referencia As String,  _
                    ByVal codbar As String,  _
                    ByVal cos_uni As Double,  _
                    ByVal cos_pro As Double,  _
                    ByVal margen As String,  _
                    ByVal precio As Double,  _
                    ByVal iva As String,  _
                    ByVal exento As String,  _
                    ByVal excluido As String,  _
                    ByVal cue_inv As String,  _
                    ByVal cue_ing As String,  _
                    ByVal cue_cos As String,  _
                    ByVal cue_iva_v As String,  _
                    ByVal cue_iva_c As String,  _
                    ByVal cue_dev As String,  _
                    ByVal unidad As String,  _
                    ByVal empaque As Double,  _
                    ByVal can_emp As Double,  _
                    ByVal uni_emp As Double,  _
                    ByVal cant_min As Double,  _
                    ByVal pp As Double,  _
                    ByVal estado As String,  _
                    ByVal con_comi As String,  _
                    ByVal importa As String,  _
                    ByVal num_reg As String,  _
                    ByVal por_ara As String,  _
                    ByVal pos_ara As String,  _
                    ByVal p1 As String,  _
                    ByVal p2 As String,  _
                    ByVal p3 As String,  _
                    ByVal p4 As String,  _
                    ByVal p5 As String) As Integer
            If (codart Is Nothing) Then
                Throw New Global.System.ArgumentNullException("codart")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(codart,String)
            End If
            If (nomart Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nomart")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(nomart,String)
            End If
            If (desart Is Nothing) Then
                Throw New Global.System.ArgumentNullException("desart")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(desart,String)
            End If
            If (nivel Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nivel")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(nivel,String)
            End If
            If (referencia Is Nothing) Then
                Throw New Global.System.ArgumentNullException("referencia")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(referencia,String)
            End If
            If (codbar Is Nothing) Then
                Throw New Global.System.ArgumentNullException("codbar")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(codbar,String)
            End If
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(cos_uni,Double)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(cos_pro,Double)
            If (margen Is Nothing) Then
                Throw New Global.System.ArgumentNullException("margen")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(margen,String)
            End If
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(precio,Double)
            If (iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("iva")
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(iva,String)
            End If
            If (exento Is Nothing) Then
                Throw New Global.System.ArgumentNullException("exento")
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(exento,String)
            End If
            If (excluido Is Nothing) Then
                Throw New Global.System.ArgumentNullException("excluido")
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(excluido,String)
            End If
            If (cue_inv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cue_inv")
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(cue_inv,String)
            End If
            If (cue_ing Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cue_ing")
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(cue_ing,String)
            End If
            If (cue_cos Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cue_cos")
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(cue_cos,String)
            End If
            If (cue_iva_v Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cue_iva_v")
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(cue_iva_v,String)
            End If
            If (cue_iva_c Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cue_iva_c")
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(cue_iva_c,String)
            End If
            If (cue_dev Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cue_dev")
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(cue_dev,String)
            End If
            If (unidad Is Nothing) Then
                Throw New Global.System.ArgumentNullException("unidad")
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(unidad,String)
            End If
            Me.Adapter.InsertCommand.Parameters(20).Value = CType(empaque,Double)
            Me.Adapter.InsertCommand.Parameters(21).Value = CType(can_emp,Double)
            Me.Adapter.InsertCommand.Parameters(22).Value = CType(uni_emp,Double)
            Me.Adapter.InsertCommand.Parameters(23).Value = CType(cant_min,Double)
            Me.Adapter.InsertCommand.Parameters(24).Value = CType(pp,Double)
            If (estado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("estado")
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(estado,String)
            End If
            If (con_comi Is Nothing) Then
                Throw New Global.System.ArgumentNullException("con_comi")
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(con_comi,String)
            End If
            If (importa Is Nothing) Then
                Throw New Global.System.ArgumentNullException("importa")
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(importa,String)
            End If
            If (num_reg Is Nothing) Then
                Throw New Global.System.ArgumentNullException("num_reg")
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(num_reg,String)
            End If
            If (por_ara Is Nothing) Then
                Throw New Global.System.ArgumentNullException("por_ara")
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(por_ara,String)
            End If
            If (pos_ara Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pos_ara")
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(pos_ara,String)
            End If
            If (p1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("p1")
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(p1,String)
            End If
            If (p2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("p2")
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(p2,String)
            End If
            If (p3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("p3")
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(p3,String)
            End If
            If (p4 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("p4")
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(p4,String)
            End If
            If (p5 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("p5")
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(p5,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal codart As String,  _
                    ByVal nomart As String,  _
                    ByVal desart As String,  _
                    ByVal nivel As String,  _
                    ByVal referencia As String,  _
                    ByVal codbar As String,  _
                    ByVal cos_uni As Double,  _
                    ByVal cos_pro As Double,  _
                    ByVal margen As String,  _
                    ByVal precio As Double,  _
                    ByVal iva As String,  _
                    ByVal exento As String,  _
                    ByVal excluido As String,  _
                    ByVal cue_inv As String,  _
                    ByVal cue_ing As String,  _
                    ByVal cue_cos As String,  _
                    ByVal cue_iva_v As String,  _
                    ByVal cue_iva_c As String,  _
                    ByVal cue_dev As String,  _
                    ByVal unidad As String,  _
                    ByVal empaque As Double,  _
                    ByVal can_emp As Double,  _
                    ByVal uni_emp As Double,  _
                    ByVal cant_min As Double,  _
                    ByVal pp As Double,  _
                    ByVal estado As String,  _
                    ByVal con_comi As String,  _
                    ByVal importa As String,  _
                    ByVal num_reg As String,  _
                    ByVal por_ara As String,  _
                    ByVal pos_ara As String,  _
                    ByVal p1 As String,  _
                    ByVal p2 As String,  _
                    ByVal p3 As String,  _
                    ByVal p4 As String,  _
                    ByVal p5 As String,  _
                    ByVal Original_codart As String,  _
                    ByVal Original_nomart As String,  _
                    ByVal Original_nivel As String,  _
                    ByVal Original_referencia As String,  _
                    ByVal Original_codbar As String,  _
                    ByVal Original_cos_uni As Double,  _
                    ByVal Original_cos_pro As Double,  _
                    ByVal Original_margen As String,  _
                    ByVal Original_precio As Double,  _
                    ByVal Original_iva As String,  _
                    ByVal Original_exento As String,  _
                    ByVal Original_excluido As String,  _
                    ByVal Original_cue_inv As String,  _
                    ByVal Original_cue_ing As String,  _
                    ByVal Original_cue_cos As String,  _
                    ByVal Original_cue_iva_v As String,  _
                    ByVal Original_cue_iva_c As String,  _
                    ByVal Original_cue_dev As String,  _
                    ByVal Original_unidad As String,  _
                    ByVal Original_empaque As Double,  _
                    ByVal Original_can_emp As Double,  _
                    ByVal Original_uni_emp As Double,  _
                    ByVal Original_cant_min As Double,  _
                    ByVal Original_pp As Double,  _
                    ByVal Original_estado As String,  _
                    ByVal Original_con_comi As String,  _
                    ByVal Original_importa As String,  _
                    ByVal Original_num_reg As String,  _
                    ByVal Original_por_ara As String,  _
                    ByVal Original_pos_ara As String,  _
                    ByVal Original_p1 As String,  _
                    ByVal Original_p2 As String,  _
                    ByVal Original_p3 As String,  _
                    ByVal Original_p4 As String,  _
                    ByVal Original_p5 As String) As Integer
            If (codart Is Nothing) Then
                Throw New Global.System.ArgumentNullException("codart")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(codart,String)
            End If
            If (nomart Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nomart")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(nomart,String)
            End If
            If (desart Is Nothing) Then
                Throw New Global.System.ArgumentNullException("desart")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(desart,String)
            End If
            If (nivel Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nivel")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(nivel,String)
            End If
            If (referencia Is Nothing) Then
                Throw New Global.System.ArgumentNullException("referencia")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(referencia,String)
            End If
            If (codbar Is Nothing) Then
                Throw New Global.System.ArgumentNullException("codbar")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(codbar,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(cos_uni,Double)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(cos_pro,Double)
            If (margen Is Nothing) Then
                Throw New Global.System.ArgumentNullException("margen")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(margen,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(precio,Double)
            If (iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("iva")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(iva,String)
            End If
            If (exento Is Nothing) Then
                Throw New Global.System.ArgumentNullException("exento")
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(exento,String)
            End If
            If (excluido Is Nothing) Then
                Throw New Global.System.ArgumentNullException("excluido")
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(excluido,String)
            End If
            If (cue_inv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cue_inv")
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(cue_inv,String)
            End If
            If (cue_ing Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cue_ing")
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(cue_ing,String)
            End If
            If (cue_cos Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cue_cos")
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(cue_cos,String)
            End If
            If (cue_iva_v Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cue_iva_v")
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(cue_iva_v,String)
            End If
            If (cue_iva_c Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cue_iva_c")
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(cue_iva_c,String)
            End If
            If (cue_dev Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cue_dev")
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(cue_dev,String)
            End If
            If (unidad Is Nothing) Then
                Throw New Global.System.ArgumentNullException("unidad")
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(unidad,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(empaque,Double)
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(can_emp,Double)
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(uni_emp,Double)
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(cant_min,Double)
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(pp,Double)
            If (estado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("estado")
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(estado,String)
            End If
            If (con_comi Is Nothing) Then
                Throw New Global.System.ArgumentNullException("con_comi")
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(con_comi,String)
            End If
            If (importa Is Nothing) Then
                Throw New Global.System.ArgumentNullException("importa")
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(importa,String)
            End If
            If (num_reg Is Nothing) Then
                Throw New Global.System.ArgumentNullException("num_reg")
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(num_reg,String)
            End If
            If (por_ara Is Nothing) Then
                Throw New Global.System.ArgumentNullException("por_ara")
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(por_ara,String)
            End If
            If (pos_ara Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pos_ara")
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(pos_ara,String)
            End If
            If (p1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("p1")
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(p1,String)
            End If
            If (p2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("p2")
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(p2,String)
            End If
            If (p3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("p3")
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(p3,String)
            End If
            If (p4 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("p4")
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(p4,String)
            End If
            If (p5 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("p5")
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(p5,String)
            End If
            If (Original_codart Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_codart")
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_codart,String)
            End If
            If (Original_nomart Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nomart")
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_nomart,String)
            End If
            If (Original_nivel Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nivel")
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_nivel,String)
            End If
            If (Original_referencia Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_referencia")
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_referencia,String)
            End If
            If (Original_codbar Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_codbar")
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_codbar,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_cos_uni,Double)
            Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_cos_pro,Double)
            If (Original_margen Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_margen")
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_margen,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_precio,Double)
            If (Original_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_iva")
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_iva,String)
            End If
            If (Original_exento Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_exento")
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_exento,String)
            End If
            If (Original_excluido Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_excluido")
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_excluido,String)
            End If
            If (Original_cue_inv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cue_inv")
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_cue_inv,String)
            End If
            If (Original_cue_ing Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cue_ing")
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_cue_ing,String)
            End If
            If (Original_cue_cos Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cue_cos")
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_cue_cos,String)
            End If
            If (Original_cue_iva_v Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cue_iva_v")
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_cue_iva_v,String)
            End If
            If (Original_cue_iva_c Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cue_iva_c")
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_cue_iva_c,String)
            End If
            If (Original_cue_dev Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cue_dev")
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_cue_dev,String)
            End If
            If (Original_unidad Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_unidad")
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_unidad,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_empaque,Double)
            Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_can_emp,Double)
            Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_uni_emp,Double)
            Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_cant_min,Double)
            Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_pp,Double)
            If (Original_estado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_estado")
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_estado,String)
            End If
            If (Original_con_comi Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_con_comi")
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_con_comi,String)
            End If
            If (Original_importa Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_importa")
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_importa,String)
            End If
            If (Original_num_reg Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_num_reg")
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_num_reg,String)
            End If
            If (Original_por_ara Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_por_ara")
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_por_ara,String)
            End If
            If (Original_pos_ara Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_pos_ara")
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_pos_ara,String)
            End If
            If (Original_p1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_p1")
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_p1,String)
            End If
            If (Original_p2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_p2")
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_p2,String)
            End If
            If (Original_p3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_p3")
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_p3,String)
            End If
            If (Original_p4 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_p4")
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_p4,String)
            End If
            If (Original_p5 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_p5")
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_p5,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal nomart As String,  _
                    ByVal desart As String,  _
                    ByVal nivel As String,  _
                    ByVal referencia As String,  _
                    ByVal codbar As String,  _
                    ByVal cos_uni As Double,  _
                    ByVal cos_pro As Double,  _
                    ByVal margen As String,  _
                    ByVal precio As Double,  _
                    ByVal iva As String,  _
                    ByVal exento As String,  _
                    ByVal excluido As String,  _
                    ByVal cue_inv As String,  _
                    ByVal cue_ing As String,  _
                    ByVal cue_cos As String,  _
                    ByVal cue_iva_v As String,  _
                    ByVal cue_iva_c As String,  _
                    ByVal cue_dev As String,  _
                    ByVal unidad As String,  _
                    ByVal empaque As Double,  _
                    ByVal can_emp As Double,  _
                    ByVal uni_emp As Double,  _
                    ByVal cant_min As Double,  _
                    ByVal pp As Double,  _
                    ByVal estado As String,  _
                    ByVal con_comi As String,  _
                    ByVal importa As String,  _
                    ByVal num_reg As String,  _
                    ByVal por_ara As String,  _
                    ByVal pos_ara As String,  _
                    ByVal p1 As String,  _
                    ByVal p2 As String,  _
                    ByVal p3 As String,  _
                    ByVal p4 As String,  _
                    ByVal p5 As String,  _
                    ByVal Original_codart As String,  _
                    ByVal Original_nomart As String,  _
                    ByVal Original_nivel As String,  _
                    ByVal Original_referencia As String,  _
                    ByVal Original_codbar As String,  _
                    ByVal Original_cos_uni As Double,  _
                    ByVal Original_cos_pro As Double,  _
                    ByVal Original_margen As String,  _
                    ByVal Original_precio As Double,  _
                    ByVal Original_iva As String,  _
                    ByVal Original_exento As String,  _
                    ByVal Original_excluido As String,  _
                    ByVal Original_cue_inv As String,  _
                    ByVal Original_cue_ing As String,  _
                    ByVal Original_cue_cos As String,  _
                    ByVal Original_cue_iva_v As String,  _
                    ByVal Original_cue_iva_c As String,  _
                    ByVal Original_cue_dev As String,  _
                    ByVal Original_unidad As String,  _
                    ByVal Original_empaque As Double,  _
                    ByVal Original_can_emp As Double,  _
                    ByVal Original_uni_emp As Double,  _
                    ByVal Original_cant_min As Double,  _
                    ByVal Original_pp As Double,  _
                    ByVal Original_estado As String,  _
                    ByVal Original_con_comi As String,  _
                    ByVal Original_importa As String,  _
                    ByVal Original_num_reg As String,  _
                    ByVal Original_por_ara As String,  _
                    ByVal Original_pos_ara As String,  _
                    ByVal Original_p1 As String,  _
                    ByVal Original_p2 As String,  _
                    ByVal Original_p3 As String,  _
                    ByVal Original_p4 As String,  _
                    ByVal Original_p5 As String) As Integer
            Return Me.Update(Original_codart, nomart, desart, nivel, referencia, codbar, cos_uni, cos_pro, margen, precio, iva, exento, excluido, cue_inv, cue_ing, cue_cos, cue_iva_v, cue_iva_c, cue_dev, unidad, empaque, can_emp, uni_emp, cant_min, pp, estado, con_comi, importa, num_reg, por_ara, pos_ara, p1, p2, p3, p4, p5, Original_codart, Original_nomart, Original_nivel, Original_referencia, Original_codbar, Original_cos_uni, Original_cos_pro, Original_margen, Original_precio, Original_iva, Original_exento, Original_excluido, Original_cue_inv, Original_cue_ing, Original_cue_cos, Original_cue_iva_v, Original_cue_iva_c, Original_cue_dev, Original_unidad, Original_empaque, Original_can_emp, Original_uni_emp, Original_cant_min, Original_pp, Original_estado, Original_con_comi, Original_importa, Original_num_reg, Original_por_ara, Original_pos_ara, Original_p1, Original_p2, Original_p3, Original_p4, Original_p5)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class con_invTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "con_inv"
            tableMapping.ColumnMappings.Add("codart", "codart")
            tableMapping.ColumnMappings.Add("periodo", "periodo")
            tableMapping.ColumnMappings.Add("costuni", "costuni")
            tableMapping.ColumnMappings.Add("costprom", "costprom")
            tableMapping.ColumnMappings.Add("costmoe", "costmoe")
            tableMapping.ColumnMappings.Add("otro", "otro")
            tableMapping.ColumnMappings.Add("margen", "margen")
            tableMapping.ColumnMappings.Add("base", "base")
            tableMapping.ColumnMappings.Add("precio1", "precio1")
            tableMapping.ColumnMappings.Add("precio2", "precio2")
            tableMapping.ColumnMappings.Add("precio3", "precio3")
            tableMapping.ColumnMappings.Add("precio4", "precio4")
            tableMapping.ColumnMappings.Add("precio5", "precio5")
            tableMapping.ColumnMappings.Add("precio6", "precio6")
            tableMapping.ColumnMappings.Add("cue_inv", "cue_inv")
            tableMapping.ColumnMappings.Add("cue_cos", "cue_cos")
            tableMapping.ColumnMappings.Add("cue_ing", "cue_ing")
            tableMapping.ColumnMappings.Add("cue_iva_v", "cue_iva_v")
            tableMapping.ColumnMappings.Add("cue_iva_c", "cue_iva_c")
            tableMapping.ColumnMappings.Add("cue_dev", "cue_dev")
            tableMapping.ColumnMappings.Add("saldoi", "saldoi")
            tableMapping.ColumnMappings.Add("vent", "vent")
            tableMapping.ColumnMappings.Add("vsal", "vsal")
            tableMapping.ColumnMappings.Add("vaju", "vaju")
            tableMapping.ColumnMappings.Add("cant1", "cant1")
            tableMapping.ColumnMappings.Add("cant2", "cant2")
            tableMapping.ColumnMappings.Add("cant3", "cant3")
            tableMapping.ColumnMappings.Add("cant4", "cant4")
            tableMapping.ColumnMappings.Add("cant5", "cant5")
            tableMapping.ColumnMappings.Add("cant6", "cant6")
            tableMapping.ColumnMappings.Add("cant7", "cant7")
            tableMapping.ColumnMappings.Add("cant8", "cant8")
            tableMapping.ColumnMappings.Add("cant9", "cant9")
            tableMapping.ColumnMappings.Add("cant10", "cant10")
            tableMapping.ColumnMappings.Add("cant11", "cant11")
            tableMapping.ColumnMappings.Add("cant12", "cant12")
            tableMapping.ColumnMappings.Add("cant13", "cant13")
            tableMapping.ColumnMappings.Add("cant14", "cant14")
            tableMapping.ColumnMappings.Add("cant15", "cant15")
            tableMapping.ColumnMappings.Add("cant16", "cant16")
            tableMapping.ColumnMappings.Add("cant17", "cant17")
            tableMapping.ColumnMappings.Add("cant18", "cant18")
            tableMapping.ColumnMappings.Add("cant19", "cant19")
            tableMapping.ColumnMappings.Add("cant20", "cant20")
            tableMapping.ColumnMappings.Add("cant21", "cant21")
            tableMapping.ColumnMappings.Add("cant22", "cant22")
            tableMapping.ColumnMappings.Add("cant23", "cant23")
            tableMapping.ColumnMappings.Add("cant24", "cant24")
            tableMapping.ColumnMappings.Add("cant25", "cant25")
            tableMapping.ColumnMappings.Add("cant26", "cant26")
            tableMapping.ColumnMappings.Add("cant27", "cant27")
            tableMapping.ColumnMappings.Add("cant28", "cant28")
            tableMapping.ColumnMappings.Add("cant29", "cant29")
            tableMapping.ColumnMappings.Add("cant30", "cant30")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `saeosteomaterial2012`.`con_inv` (`codart`, `periodo`, `costuni`, `co"& _ 
                "stprom`, `costmoe`, `otro`, `margen`, `base`, `precio1`, `precio2`, `precio3`, `"& _ 
                "precio4`, `precio5`, `precio6`, `cue_inv`, `cue_cos`, `cue_ing`, `cue_iva_v`, `c"& _ 
                "ue_iva_c`, `cue_dev`, `saldoi`, `vent`, `vsal`, `vaju`, `cant1`, `cant2`, `cant3"& _ 
                "`, `cant4`, `cant5`, `cant6`, `cant7`, `cant8`, `cant9`, `cant10`, `cant11`, `ca"& _ 
                "nt12`, `cant13`, `cant14`, `cant15`, `cant16`, `cant17`, `cant18`, `cant19`, `ca"& _ 
                "nt20`, `cant21`, `cant22`, `cant23`, `cant24`, `cant25`, `cant26`, `cant27`, `ca"& _ 
                "nt28`, `cant29`, `cant30`) VALUES (@codart, @periodo, @costuni, @costprom, @cost"& _ 
                "moe, @otro, @margen, @base, @precio1, @precio2, @precio3, @precio4, @precio5, @p"& _ 
                "recio6, @cue_inv, @cue_cos, @cue_ing, @cue_iva_v, @cue_iva_c, @cue_dev, @saldoi,"& _ 
                " @vent, @vsal, @vaju, @cant1, @cant2, @cant3, @cant4, @cant5, @cant6, @cant7, @c"& _ 
                "ant8, @cant9, @cant10, @cant11, @cant12, @cant13, @cant14, @cant15, @cant16, @ca"& _ 
                "nt17, @cant18, @cant19, @cant20, @cant21, @cant22, @cant23, @cant24, @cant25, @c"& _ 
                "ant26, @cant27, @cant28, @cant29, @cant30)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@codart"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "codart"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@periodo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "periodo"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@costuni"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "costuni"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@costprom"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "costprom"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@costmoe"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "costmoe"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@otro"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "otro"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@margen"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "margen"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@base"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "base"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@precio1"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "precio1"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@precio2"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "precio2"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@precio3"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "precio3"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@precio4"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "precio4"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@precio5"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "precio5"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@precio6"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "precio6"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cue_inv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cue_inv"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cue_cos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cue_cos"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cue_ing"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cue_ing"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cue_iva_v"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cue_iva_v"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cue_iva_c"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cue_iva_c"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cue_dev"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cue_dev"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@saldoi"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldoi"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@vent"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "vent"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@vsal"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "vsal"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@vaju"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "vaju"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant1"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant1"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant2"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant2"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant3"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant3"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant4"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant4"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant5"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant5"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant6"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant6"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant7"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant7"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant8"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant8"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant9"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant9"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant10"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant10"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant11"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant11"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant12"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant12"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant13"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant13"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant14"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant14"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant15"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant15"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant16"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant16"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant17"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant17"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant18"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant18"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant19"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant19"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant20"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant20"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant21"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant21"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant22"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant22"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant23"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant23"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant24"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant24"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant25"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant25"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant26"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant26"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant27"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant27"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant28"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant28"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant29"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant29"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant30"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cant30"
            Me._adapter.InsertCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection
            Me._connection.ConnectionString = Global.SAE.My.MySettings.Default.saeosteomaterial2012ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `codart`, `periodo`, `costuni`, `costprom`, `costmoe`, `otro`, `margen`, `"& _ 
                "base`, `precio1`, `precio2`, `precio3`, `precio4`, `precio5`, `precio6`, `cue_in"& _ 
                "v`, `cue_cos`, `cue_ing`, `cue_iva_v`, `cue_iva_c`, `cue_dev`, `saldoi`, `vent`,"& _ 
                " `vsal`, `vaju`, `cant1`, `cant2`, `cant3`, `cant4`, `cant5`, `cant6`, `cant7`, "& _ 
                "`cant8`, `cant9`, `cant10`, `cant11`, `cant12`, `cant13`, `cant14`, `cant15`, `c"& _ 
                "ant16`, `cant17`, `cant18`, `cant19`, `cant20`, `cant21`, `cant22`, `cant23`, `c"& _ 
                "ant24`, `cant25`, `cant26`, `cant27`, `cant28`, `cant29`, `cant30` FROM `saeoste"& _ 
                "omaterial2012`.`con_inv`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As saeosteomaterial2012DataSet.con_invDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As saeosteomaterial2012DataSet.con_invDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As saeosteomaterial2012DataSet.con_invDataTable = New saeosteomaterial2012DataSet.con_invDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As saeosteomaterial2012DataSet.con_invDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As saeosteomaterial2012DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "con_inv")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal codart As String,  _
                    ByVal periodo As String,  _
                    ByVal costuni As Double,  _
                    ByVal costprom As Double,  _
                    ByVal costmoe As Double,  _
                    ByVal otro As Double,  _
                    ByVal margen As String,  _
                    ByVal base As Double,  _
                    ByVal precio1 As Double,  _
                    ByVal precio2 As Double,  _
                    ByVal precio3 As Double,  _
                    ByVal precio4 As Double,  _
                    ByVal precio5 As Double,  _
                    ByVal precio6 As Double,  _
                    ByVal cue_inv As String,  _
                    ByVal cue_cos As String,  _
                    ByVal cue_ing As String,  _
                    ByVal cue_iva_v As String,  _
                    ByVal cue_iva_c As String,  _
                    ByVal cue_dev As String,  _
                    ByVal saldoi As Double,  _
                    ByVal vent As Double,  _
                    ByVal vsal As Double,  _
                    ByVal vaju As Double,  _
                    ByVal cant1 As Double,  _
                    ByVal cant2 As Double,  _
                    ByVal cant3 As Double,  _
                    ByVal cant4 As Double,  _
                    ByVal cant5 As Double,  _
                    ByVal cant6 As Double,  _
                    ByVal cant7 As Double,  _
                    ByVal cant8 As Double,  _
                    ByVal cant9 As Double,  _
                    ByVal cant10 As Double,  _
                    ByVal cant11 As Double,  _
                    ByVal cant12 As Double,  _
                    ByVal cant13 As Double,  _
                    ByVal cant14 As Double,  _
                    ByVal cant15 As Double,  _
                    ByVal cant16 As Double,  _
                    ByVal cant17 As Double,  _
                    ByVal cant18 As Double,  _
                    ByVal cant19 As Double,  _
                    ByVal cant20 As Double,  _
                    ByVal cant21 As Double,  _
                    ByVal cant22 As Double,  _
                    ByVal cant23 As Double,  _
                    ByVal cant24 As Double,  _
                    ByVal cant25 As Double,  _
                    ByVal cant26 As Double,  _
                    ByVal cant27 As Double,  _
                    ByVal cant28 As Double,  _
                    ByVal cant29 As Double,  _
                    ByVal cant30 As Double) As Integer
            If (codart Is Nothing) Then
                Throw New Global.System.ArgumentNullException("codart")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(codart,String)
            End If
            If (periodo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("periodo")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(periodo,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(costuni,Double)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(costprom,Double)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(costmoe,Double)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(otro,Double)
            If (margen Is Nothing) Then
                Throw New Global.System.ArgumentNullException("margen")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(margen,String)
            End If
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(base,Double)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(precio1,Double)
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(precio2,Double)
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(precio3,Double)
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(precio4,Double)
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(precio5,Double)
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(precio6,Double)
            If (cue_inv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cue_inv")
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(cue_inv,String)
            End If
            If (cue_cos Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cue_cos")
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(cue_cos,String)
            End If
            If (cue_ing Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cue_ing")
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(cue_ing,String)
            End If
            If (cue_iva_v Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cue_iva_v")
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(cue_iva_v,String)
            End If
            If (cue_iva_c Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cue_iva_c")
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(cue_iva_c,String)
            End If
            If (cue_dev Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cue_dev")
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(cue_dev,String)
            End If
            Me.Adapter.InsertCommand.Parameters(20).Value = CType(saldoi,Double)
            Me.Adapter.InsertCommand.Parameters(21).Value = CType(vent,Double)
            Me.Adapter.InsertCommand.Parameters(22).Value = CType(vsal,Double)
            Me.Adapter.InsertCommand.Parameters(23).Value = CType(vaju,Double)
            Me.Adapter.InsertCommand.Parameters(24).Value = CType(cant1,Double)
            Me.Adapter.InsertCommand.Parameters(25).Value = CType(cant2,Double)
            Me.Adapter.InsertCommand.Parameters(26).Value = CType(cant3,Double)
            Me.Adapter.InsertCommand.Parameters(27).Value = CType(cant4,Double)
            Me.Adapter.InsertCommand.Parameters(28).Value = CType(cant5,Double)
            Me.Adapter.InsertCommand.Parameters(29).Value = CType(cant6,Double)
            Me.Adapter.InsertCommand.Parameters(30).Value = CType(cant7,Double)
            Me.Adapter.InsertCommand.Parameters(31).Value = CType(cant8,Double)
            Me.Adapter.InsertCommand.Parameters(32).Value = CType(cant9,Double)
            Me.Adapter.InsertCommand.Parameters(33).Value = CType(cant10,Double)
            Me.Adapter.InsertCommand.Parameters(34).Value = CType(cant11,Double)
            Me.Adapter.InsertCommand.Parameters(35).Value = CType(cant12,Double)
            Me.Adapter.InsertCommand.Parameters(36).Value = CType(cant13,Double)
            Me.Adapter.InsertCommand.Parameters(37).Value = CType(cant14,Double)
            Me.Adapter.InsertCommand.Parameters(38).Value = CType(cant15,Double)
            Me.Adapter.InsertCommand.Parameters(39).Value = CType(cant16,Double)
            Me.Adapter.InsertCommand.Parameters(40).Value = CType(cant17,Double)
            Me.Adapter.InsertCommand.Parameters(41).Value = CType(cant18,Double)
            Me.Adapter.InsertCommand.Parameters(42).Value = CType(cant19,Double)
            Me.Adapter.InsertCommand.Parameters(43).Value = CType(cant20,Double)
            Me.Adapter.InsertCommand.Parameters(44).Value = CType(cant21,Double)
            Me.Adapter.InsertCommand.Parameters(45).Value = CType(cant22,Double)
            Me.Adapter.InsertCommand.Parameters(46).Value = CType(cant23,Double)
            Me.Adapter.InsertCommand.Parameters(47).Value = CType(cant24,Double)
            Me.Adapter.InsertCommand.Parameters(48).Value = CType(cant25,Double)
            Me.Adapter.InsertCommand.Parameters(49).Value = CType(cant26,Double)
            Me.Adapter.InsertCommand.Parameters(50).Value = CType(cant27,Double)
            Me.Adapter.InsertCommand.Parameters(51).Value = CType(cant28,Double)
            Me.Adapter.InsertCommand.Parameters(52).Value = CType(cant29,Double)
            Me.Adapter.InsertCommand.Parameters(53).Value = CType(cant30,Double)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class movimientos01TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "movimientos01"
            tableMapping.ColumnMappings.Add("doc", "doc")
            tableMapping.ColumnMappings.Add("tipodoc", "tipodoc")
            tableMapping.ColumnMappings.Add("num", "num")
            tableMapping.ColumnMappings.Add("per", "per")
            tableMapping.ColumnMappings.Add("dia", "dia")
            tableMapping.ColumnMappings.Add("hora", "hora")
            tableMapping.ColumnMappings.Add("nitc", "nitc")
            tableMapping.ColumnMappings.Add("tipo_mov", "tipo_mov")
            tableMapping.ColumnMappings.Add("tipo", "tipo")
            tableMapping.ColumnMappings.Add("desc_mov", "desc_mov")
            tableMapping.ColumnMappings.Add("cc", "cc")
            tableMapping.ColumnMappings.Add("concepto", "concepto")
            tableMapping.ColumnMappings.Add("o_compra", "o_compra")
            tableMapping.ColumnMappings.Add("n_pedido", "n_pedido")
            tableMapping.ColumnMappings.Add("observ", "observ")
            tableMapping.ColumnMappings.Add("total", "total")
            tableMapping.ColumnMappings.Add("estado", "estado")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `saeosteomaterial2012`.`movimientos01` WHERE ((`doc` = @Original_doc)"& _ 
                " AND (`tipodoc` = @Original_tipodoc) AND (`num` = @Original_num) AND (`per` = @O"& _ 
                "riginal_per) AND (`dia` = @Original_dia) AND (`hora` = @Original_hora) AND (`nit"& _ 
                "c` = @Original_nitc) AND (`tipo_mov` = @Original_tipo_mov) AND (`tipo` = @Origin"& _ 
                "al_tipo) AND (`desc_mov` = @Original_desc_mov) AND (`cc` = @Original_cc) AND (`o"& _ 
                "_compra` = @Original_o_compra) AND (`n_pedido` = @Original_n_pedido) AND (`total"& _ 
                "` = @Original_total) AND (`estado` = @Original_estado))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_doc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "doc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tipodoc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipodoc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_num"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int64
            param.IsNullable = true
            param.SourceColumn = "num"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_per"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "per"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_dia"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dia"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_hora"
            param.DbType = Global.System.Data.DbType.Time
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Time
            param.IsNullable = true
            param.SourceColumn = "hora"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nitc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tipo_mov"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "tipo_mov"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tipo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_desc_mov"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "desc_mov"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_o_compra"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "o_compra"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_n_pedido"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "n_pedido"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_total"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "total"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_estado"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `saeosteomaterial2012`.`movimientos01` (`doc`, `tipodoc`, `num`, `per"& _ 
                "`, `dia`, `hora`, `nitc`, `tipo_mov`, `tipo`, `desc_mov`, `cc`, `concepto`, `o_c"& _ 
                "ompra`, `n_pedido`, `observ`, `total`, `estado`) VALUES (@doc, @tipodoc, @num, @"& _ 
                "per, @dia, @hora, @nitc, @tipo_mov, @tipo, @desc_mov, @cc, @concepto, @o_compra,"& _ 
                " @n_pedido, @observ, @total, @estado)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@doc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "doc"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipodoc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipodoc"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@num"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int64
            param.IsNullable = true
            param.SourceColumn = "num"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@per"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "per"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@dia"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dia"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@hora"
            param.DbType = Global.System.Data.DbType.Time
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Time
            param.IsNullable = true
            param.SourceColumn = "hora"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nitc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitc"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipo_mov"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "tipo_mov"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipo"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@desc_mov"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "desc_mov"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cc"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@concepto"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Text
            param.IsNullable = true
            param.SourceColumn = "concepto"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@o_compra"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "o_compra"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@n_pedido"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "n_pedido"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@observ"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Text
            param.IsNullable = true
            param.SourceColumn = "observ"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@total"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "total"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@estado"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `saeosteomaterial2012`.`movimientos01` SET `doc` = @doc, `tipodoc` = @tipo"& _ 
                "doc, `num` = @num, `per` = @per, `dia` = @dia, `hora` = @hora, `nitc` = @nitc, `"& _ 
                "tipo_mov` = @tipo_mov, `tipo` = @tipo, `desc_mov` = @desc_mov, `cc` = @cc, `conc"& _ 
                "epto` = @concepto, `o_compra` = @o_compra, `n_pedido` = @n_pedido, `observ` = @o"& _ 
                "bserv, `total` = @total, `estado` = @estado WHERE ((`doc` = @Original_doc) AND ("& _ 
                "`tipodoc` = @Original_tipodoc) AND (`num` = @Original_num) AND (`per` = @Origina"& _ 
                "l_per) AND (`dia` = @Original_dia) AND (`hora` = @Original_hora) AND (`nitc` = @"& _ 
                "Original_nitc) AND (`tipo_mov` = @Original_tipo_mov) AND (`tipo` = @Original_tip"& _ 
                "o) AND (`desc_mov` = @Original_desc_mov) AND (`cc` = @Original_cc) AND (`o_compr"& _ 
                "a` = @Original_o_compra) AND (`n_pedido` = @Original_n_pedido) AND (`total` = @O"& _ 
                "riginal_total) AND (`estado` = @Original_estado))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@doc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "doc"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipodoc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipodoc"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@num"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int64
            param.IsNullable = true
            param.SourceColumn = "num"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@per"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "per"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@dia"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dia"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@hora"
            param.DbType = Global.System.Data.DbType.Time
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Time
            param.IsNullable = true
            param.SourceColumn = "hora"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nitc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitc"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipo_mov"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "tipo_mov"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipo"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@desc_mov"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "desc_mov"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cc"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@concepto"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Text
            param.IsNullable = true
            param.SourceColumn = "concepto"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@o_compra"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "o_compra"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@n_pedido"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "n_pedido"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@observ"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Text
            param.IsNullable = true
            param.SourceColumn = "observ"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@total"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "total"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@estado"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_doc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "doc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tipodoc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipodoc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_num"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int64
            param.IsNullable = true
            param.SourceColumn = "num"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_per"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "per"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_dia"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dia"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_hora"
            param.DbType = Global.System.Data.DbType.Time
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Time
            param.IsNullable = true
            param.SourceColumn = "hora"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nitc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tipo_mov"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "tipo_mov"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tipo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_desc_mov"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "desc_mov"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_o_compra"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "o_compra"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_n_pedido"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "n_pedido"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_total"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "total"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_estado"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection
            Me._connection.ConnectionString = Global.SAE.My.MySettings.Default.saeosteomaterial2012ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `doc`, `tipodoc`, `num`, `per`, `dia`, `hora`, `nitc`, `tipo_mov`, `tipo`,"& _ 
                " `desc_mov`, `cc`, `concepto`, `o_compra`, `n_pedido`, `observ`, `total`, `estad"& _ 
                "o` FROM `saeosteomaterial2012`.`movimientos01`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As saeosteomaterial2012DataSet.movimientos01DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As saeosteomaterial2012DataSet.movimientos01DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As saeosteomaterial2012DataSet.movimientos01DataTable = New saeosteomaterial2012DataSet.movimientos01DataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As saeosteomaterial2012DataSet.movimientos01DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As saeosteomaterial2012DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "movimientos01")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_doc As String, ByVal Original_tipodoc As String, ByVal Original_num As Long, ByVal Original_per As String, ByVal Original_dia As String, ByVal Original_hora As Date, ByVal Original_nitc As String, ByVal Original_tipo_mov As String, ByVal Original_tipo As String, ByVal Original_desc_mov As String, ByVal Original_cc As String, ByVal Original_o_compra As String, ByVal Original_n_pedido As String, ByVal Original_total As Double, ByVal Original_estado As String) As Integer
            If (Original_doc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_doc")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_doc,String)
            End If
            If (Original_tipodoc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_tipodoc")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_tipodoc,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_num,Long)
            If (Original_per Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_per")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_per,String)
            End If
            If (Original_dia Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_dia")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_dia,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_hora,Date)
            If (Original_nitc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nitc")
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_nitc,String)
            End If
            If (Original_tipo_mov Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_tipo_mov")
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_tipo_mov,String)
            End If
            If (Original_tipo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_tipo")
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_tipo,String)
            End If
            If (Original_desc_mov Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_desc_mov")
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_desc_mov,String)
            End If
            If (Original_cc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cc")
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_cc,String)
            End If
            If (Original_o_compra Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_o_compra")
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_o_compra,String)
            End If
            If (Original_n_pedido Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_n_pedido")
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_n_pedido,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_total,Double)
            If (Original_estado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_estado")
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_estado,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal doc As String,  _
                    ByVal tipodoc As String,  _
                    ByVal num As Long,  _
                    ByVal per As String,  _
                    ByVal dia As String,  _
                    ByVal hora As Date,  _
                    ByVal nitc As String,  _
                    ByVal tipo_mov As String,  _
                    ByVal tipo As String,  _
                    ByVal desc_mov As String,  _
                    ByVal cc As String,  _
                    ByVal concepto As String,  _
                    ByVal o_compra As String,  _
                    ByVal n_pedido As String,  _
                    ByVal observ As String,  _
                    ByVal total As Double,  _
                    ByVal estado As String) As Integer
            If (doc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("doc")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(doc,String)
            End If
            If (tipodoc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipodoc")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(tipodoc,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(num,Long)
            If (per Is Nothing) Then
                Throw New Global.System.ArgumentNullException("per")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(per,String)
            End If
            If (dia Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dia")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(dia,String)
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(hora,Date)
            If (nitc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nitc")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(nitc,String)
            End If
            If (tipo_mov Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipo_mov")
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(tipo_mov,String)
            End If
            If (tipo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipo")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(tipo,String)
            End If
            If (desc_mov Is Nothing) Then
                Throw New Global.System.ArgumentNullException("desc_mov")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(desc_mov,String)
            End If
            If (cc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cc")
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(cc,String)
            End If
            If (concepto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("concepto")
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(concepto,String)
            End If
            If (o_compra Is Nothing) Then
                Throw New Global.System.ArgumentNullException("o_compra")
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(o_compra,String)
            End If
            If (n_pedido Is Nothing) Then
                Throw New Global.System.ArgumentNullException("n_pedido")
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(n_pedido,String)
            End If
            If (observ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("observ")
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(observ,String)
            End If
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(total,Double)
            If (estado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("estado")
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(estado,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal doc As String,  _
                    ByVal tipodoc As String,  _
                    ByVal num As Long,  _
                    ByVal per As String,  _
                    ByVal dia As String,  _
                    ByVal hora As Date,  _
                    ByVal nitc As String,  _
                    ByVal tipo_mov As String,  _
                    ByVal tipo As String,  _
                    ByVal desc_mov As String,  _
                    ByVal cc As String,  _
                    ByVal concepto As String,  _
                    ByVal o_compra As String,  _
                    ByVal n_pedido As String,  _
                    ByVal observ As String,  _
                    ByVal total As Double,  _
                    ByVal estado As String,  _
                    ByVal Original_doc As String,  _
                    ByVal Original_tipodoc As String,  _
                    ByVal Original_num As Long,  _
                    ByVal Original_per As String,  _
                    ByVal Original_dia As String,  _
                    ByVal Original_hora As Date,  _
                    ByVal Original_nitc As String,  _
                    ByVal Original_tipo_mov As String,  _
                    ByVal Original_tipo As String,  _
                    ByVal Original_desc_mov As String,  _
                    ByVal Original_cc As String,  _
                    ByVal Original_o_compra As String,  _
                    ByVal Original_n_pedido As String,  _
                    ByVal Original_total As Double,  _
                    ByVal Original_estado As String) As Integer
            If (doc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("doc")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(doc,String)
            End If
            If (tipodoc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipodoc")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(tipodoc,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(num,Long)
            If (per Is Nothing) Then
                Throw New Global.System.ArgumentNullException("per")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(per,String)
            End If
            If (dia Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dia")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(dia,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(hora,Date)
            If (nitc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nitc")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(nitc,String)
            End If
            If (tipo_mov Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipo_mov")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(tipo_mov,String)
            End If
            If (tipo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipo")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(tipo,String)
            End If
            If (desc_mov Is Nothing) Then
                Throw New Global.System.ArgumentNullException("desc_mov")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(desc_mov,String)
            End If
            If (cc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cc")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(cc,String)
            End If
            If (concepto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("concepto")
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(concepto,String)
            End If
            If (o_compra Is Nothing) Then
                Throw New Global.System.ArgumentNullException("o_compra")
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(o_compra,String)
            End If
            If (n_pedido Is Nothing) Then
                Throw New Global.System.ArgumentNullException("n_pedido")
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(n_pedido,String)
            End If
            If (observ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("observ")
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(observ,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(total,Double)
            If (estado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("estado")
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(estado,String)
            End If
            If (Original_doc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_doc")
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_doc,String)
            End If
            If (Original_tipodoc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_tipodoc")
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_tipodoc,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_num,Long)
            If (Original_per Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_per")
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_per,String)
            End If
            If (Original_dia Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_dia")
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_dia,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_hora,Date)
            If (Original_nitc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nitc")
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_nitc,String)
            End If
            If (Original_tipo_mov Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_tipo_mov")
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_tipo_mov,String)
            End If
            If (Original_tipo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_tipo")
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_tipo,String)
            End If
            If (Original_desc_mov Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_desc_mov")
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_desc_mov,String)
            End If
            If (Original_cc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cc")
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_cc,String)
            End If
            If (Original_o_compra Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_o_compra")
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_o_compra,String)
            End If
            If (Original_n_pedido Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_n_pedido")
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_n_pedido,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_total,Double)
            If (Original_estado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_estado")
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_estado,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal tipodoc As String,  _
                    ByVal num As Long,  _
                    ByVal per As String,  _
                    ByVal dia As String,  _
                    ByVal hora As Date,  _
                    ByVal nitc As String,  _
                    ByVal tipo_mov As String,  _
                    ByVal tipo As String,  _
                    ByVal desc_mov As String,  _
                    ByVal cc As String,  _
                    ByVal concepto As String,  _
                    ByVal o_compra As String,  _
                    ByVal n_pedido As String,  _
                    ByVal observ As String,  _
                    ByVal total As Double,  _
                    ByVal estado As String,  _
                    ByVal Original_doc As String,  _
                    ByVal Original_tipodoc As String,  _
                    ByVal Original_num As Long,  _
                    ByVal Original_per As String,  _
                    ByVal Original_dia As String,  _
                    ByVal Original_hora As Date,  _
                    ByVal Original_nitc As String,  _
                    ByVal Original_tipo_mov As String,  _
                    ByVal Original_tipo As String,  _
                    ByVal Original_desc_mov As String,  _
                    ByVal Original_cc As String,  _
                    ByVal Original_o_compra As String,  _
                    ByVal Original_n_pedido As String,  _
                    ByVal Original_total As Double,  _
                    ByVal Original_estado As String) As Integer
            Return Me.Update(Original_doc, tipodoc, num, per, dia, hora, nitc, tipo_mov, tipo, desc_mov, cc, concepto, o_compra, n_pedido, observ, total, estado, Original_doc, Original_tipodoc, Original_num, Original_per, Original_dia, Original_hora, Original_nitc, Original_tipo_mov, Original_tipo, Original_desc_mov, Original_cc, Original_o_compra, Original_n_pedido, Original_total, Original_estado)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class deta_mov01TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "deta_mov01"
            tableMapping.ColumnMappings.Add("doc", "doc")
            tableMapping.ColumnMappings.Add("item", "item")
            tableMapping.ColumnMappings.Add("codart", "codart")
            tableMapping.ColumnMappings.Add("nomart", "nomart")
            tableMapping.ColumnMappings.Add("bod_ori", "bod_ori")
            tableMapping.ColumnMappings.Add("bod_des", "bod_des")
            tableMapping.ColumnMappings.Add("cantidad", "cantidad")
            tableMapping.ColumnMappings.Add("valor", "valor")
            tableMapping.ColumnMappings.Add("cta_inv", "cta_inv")
            tableMapping.ColumnMappings.Add("cta_cos", "cta_cos")
            tableMapping.ColumnMappings.Add("cta_ing", "cta_ing")
            tableMapping.ColumnMappings.Add("cta_iva", "cta_iva")
            tableMapping.ColumnMappings.Add("costo", "costo")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `saeosteomaterial2012`.`deta_mov01` (`doc`, `item`, `codart`, `nomart"& _ 
                "`, `bod_ori`, `bod_des`, `cantidad`, `valor`, `cta_inv`, `cta_cos`, `cta_ing`, `"& _ 
                "cta_iva`, `costo`) VALUES (@doc, @item, @codart, @nomart, @bod_ori, @bod_des, @c"& _ 
                "antidad, @valor, @cta_inv, @cta_cos, @cta_ing, @cta_iva, @costo)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@doc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "doc"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@item"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "item"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@codart"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "codart"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nomart"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Text
            param.IsNullable = true
            param.SourceColumn = "nomart"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@bod_ori"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "bod_ori"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@bod_des"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "bod_des"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cantidad"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cantidad"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@valor"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "valor"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta_inv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_inv"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta_cos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_cos"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta_ing"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_ing"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta_iva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_iva"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@costo"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "costo"
            Me._adapter.InsertCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection
            Me._connection.ConnectionString = Global.SAE.My.MySettings.Default.saeosteomaterial2012ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `doc`, `item`, `codart`, `nomart`, `bod_ori`, `bod_des`, `cantidad`, `valo"& _ 
                "r`, `cta_inv`, `cta_cos`, `cta_ing`, `cta_iva`, `costo` FROM `saeosteomaterial20"& _ 
                "12`.`deta_mov01`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As saeosteomaterial2012DataSet.deta_mov01DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As saeosteomaterial2012DataSet.deta_mov01DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As saeosteomaterial2012DataSet.deta_mov01DataTable = New saeosteomaterial2012DataSet.deta_mov01DataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As saeosteomaterial2012DataSet.deta_mov01DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As saeosteomaterial2012DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "deta_mov01")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal doc As String, ByVal item As Integer, ByVal codart As String, ByVal nomart As String, ByVal bod_ori As Integer, ByVal bod_des As Integer, ByVal cantidad As Double, ByVal valor As Double, ByVal cta_inv As String, ByVal cta_cos As String, ByVal cta_ing As String, ByVal cta_iva As String, ByVal costo As Double) As Integer
            If (doc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("doc")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(doc,String)
            End If
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(item,Integer)
            If (codart Is Nothing) Then
                Throw New Global.System.ArgumentNullException("codart")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(codart,String)
            End If
            If (nomart Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nomart")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(nomart,String)
            End If
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(bod_ori,Integer)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(bod_des,Integer)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(cantidad,Double)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(valor,Double)
            If (cta_inv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta_inv")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(cta_inv,String)
            End If
            If (cta_cos Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta_cos")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(cta_cos,String)
            End If
            If (cta_ing Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta_ing")
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(cta_ing,String)
            End If
            If (cta_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta_iva")
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(cta_iva,String)
            End If
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(costo,Double)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tercerosTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "terceros"
            tableMapping.ColumnMappings.Add("nit", "nit")
            tableMapping.ColumnMappings.Add("dv", "dv")
            tableMapping.ColumnMappings.Add("nombre", "nombre")
            tableMapping.ColumnMappings.Add("apellidos", "apellidos")
            tableMapping.ColumnMappings.Add("tipo", "tipo")
            tableMapping.ColumnMappings.Add("persona", "persona")
            tableMapping.ColumnMappings.Add("dir", "dir")
            tableMapping.ColumnMappings.Add("pais", "pais")
            tableMapping.ColumnMappings.Add("dept", "dept")
            tableMapping.ColumnMappings.Add("mun", "mun")
            tableMapping.ColumnMappings.Add("telefono", "telefono")
            tableMapping.ColumnMappings.Add("celular", "celular")
            tableMapping.ColumnMappings.Add("fax", "fax")
            tableMapping.ColumnMappings.Add("correo", "correo")
            tableMapping.ColumnMappings.Add("web", "web")
            tableMapping.ColumnMappings.Add("dia", "dia")
            tableMapping.ColumnMappings.Add("mes", "mes")
            tableMapping.ColumnMappings.Add("contacto", "contacto")
            tableMapping.ColumnMappings.Add("telconta", "telconta")
            tableMapping.ColumnMappings.Add("cupo", "cupo")
            tableMapping.ColumnMappings.Add("vmto", "vmto")
            tableMapping.ColumnMappings.Add("iva", "iva")
            tableMapping.ColumnMappings.Add("retef", "retef")
            tableMapping.ColumnMappings.Add("reteiva", "reteiva")
            tableMapping.ColumnMappings.Add("reteica", "reteica")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `saeosteomaterial2012`.`terceros` WHERE ((`nit` = @Original_nit) AND "& _ 
                "(`dv` = @Original_dv) AND (`nombre` = @Original_nombre) AND ((@IsNull_apellidos "& _ 
                "= 1 AND `apellidos` IS NULL) OR (`apellidos` = @Original_apellidos)) AND (`tipo`"& _ 
                " = @Original_tipo) AND (`persona` = @Original_persona) AND (`dir` = @Original_di"& _ 
                "r) AND (`pais` = @Original_pais) AND (`dept` = @Original_dept) AND (`mun` = @Ori"& _ 
                "ginal_mun) AND ((@IsNull_telefono = 1 AND `telefono` IS NULL) OR (`telefono` = @"& _ 
                "Original_telefono)) AND ((@IsNull_celular = 1 AND `celular` IS NULL) OR (`celula"& _ 
                "r` = @Original_celular)) AND ((@IsNull_fax = 1 AND `fax` IS NULL) OR (`fax` = @O"& _ 
                "riginal_fax)) AND ((@IsNull_correo = 1 AND `correo` IS NULL) OR (`correo` = @Ori"& _ 
                "ginal_correo)) AND ((@IsNull_web = 1 AND `web` IS NULL) OR (`web` = @Original_we"& _ 
                "b)) AND (`dia` = @Original_dia) AND (`mes` = @Original_mes) AND (`contacto` = @O"& _ 
                "riginal_contacto) AND (`telconta` = @Original_telconta) AND (`cupo` = @Original_"& _ 
                "cupo) AND (`vmto` = @Original_vmto) AND (`iva` = @Original_iva) AND (`retef` = @"& _ 
                "Original_retef) AND (`reteiva` = @Original_reteiva) AND (`reteica` = @Original_r"& _ 
                "eteica))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nit"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nit"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_dv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dv"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nombre"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@IsNull_apellidos"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "apellidos"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_apellidos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "apellidos"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tipo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_persona"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "persona"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_dir"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dir"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_pais"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "pais"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_dept"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dept"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_mun"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "mun"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@IsNull_telefono"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "telefono"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_telefono"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "telefono"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@IsNull_celular"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "celular"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_celular"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "celular"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@IsNull_fax"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "fax"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_fax"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "fax"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@IsNull_correo"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "correo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_correo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "correo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@IsNull_web"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "web"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_web"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "web"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_dia"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dia"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_mes"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "mes"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_contacto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "contacto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_telconta"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "telconta"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cupo"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cupo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_vmto"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int64
            param.IsNullable = true
            param.SourceColumn = "vmto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_iva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "iva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_retef"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "retef"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_reteiva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "reteiva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_reteica"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "reteica"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `saeosteomaterial2012`.`terceros` (`nit`, `dv`, `nombre`, `apellidos`"& _ 
                ", `tipo`, `persona`, `dir`, `pais`, `dept`, `mun`, `telefono`, `celular`, `fax`,"& _ 
                " `correo`, `web`, `dia`, `mes`, `contacto`, `telconta`, `cupo`, `vmto`, `iva`, `"& _ 
                "retef`, `reteiva`, `reteica`) VALUES (@nit, @dv, @nombre, @apellidos, @tipo, @pe"& _ 
                "rsona, @dir, @pais, @dept, @mun, @telefono, @celular, @fax, @correo, @web, @dia,"& _ 
                " @mes, @contacto, @telconta, @cupo, @vmto, @iva, @retef, @reteiva, @reteica)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nit"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nit"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@dv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dv"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nombre"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@apellidos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "apellidos"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipo"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@persona"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "persona"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@dir"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dir"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@pais"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "pais"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@dept"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dept"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@mun"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "mun"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@telefono"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "telefono"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@celular"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "celular"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@fax"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "fax"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@correo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "correo"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@web"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "web"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@dia"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dia"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@mes"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "mes"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@contacto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "contacto"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@telconta"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "telconta"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cupo"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cupo"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@vmto"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int64
            param.IsNullable = true
            param.SourceColumn = "vmto"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@iva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "iva"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@retef"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "retef"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@reteiva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "reteiva"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@reteica"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "reteica"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `saeosteomaterial2012`.`terceros` SET `nit` = @nit, `dv` = @dv, `nombre` ="& _ 
                " @nombre, `apellidos` = @apellidos, `tipo` = @tipo, `persona` = @persona, `dir` "& _ 
                "= @dir, `pais` = @pais, `dept` = @dept, `mun` = @mun, `telefono` = @telefono, `c"& _ 
                "elular` = @celular, `fax` = @fax, `correo` = @correo, `web` = @web, `dia` = @dia"& _ 
                ", `mes` = @mes, `contacto` = @contacto, `telconta` = @telconta, `cupo` = @cupo, "& _ 
                "`vmto` = @vmto, `iva` = @iva, `retef` = @retef, `reteiva` = @reteiva, `reteica` "& _ 
                "= @reteica WHERE ((`nit` = @Original_nit) AND (`dv` = @Original_dv) AND (`nombre"& _ 
                "` = @Original_nombre) AND ((@IsNull_apellidos = 1 AND `apellidos` IS NULL) OR (`"& _ 
                "apellidos` = @Original_apellidos)) AND (`tipo` = @Original_tipo) AND (`persona` "& _ 
                "= @Original_persona) AND (`dir` = @Original_dir) AND (`pais` = @Original_pais) A"& _ 
                "ND (`dept` = @Original_dept) AND (`mun` = @Original_mun) AND ((@IsNull_telefono "& _ 
                "= 1 AND `telefono` IS NULL) OR (`telefono` = @Original_telefono)) AND ((@IsNull_"& _ 
                "celular = 1 AND `celular` IS NULL) OR (`celular` = @Original_celular)) AND ((@Is"& _ 
                "Null_fax = 1 AND `fax` IS NULL) OR (`fax` = @Original_fax)) AND ((@IsNull_correo"& _ 
                " = 1 AND `correo` IS NULL) OR (`correo` = @Original_correo)) AND ((@IsNull_web ="& _ 
                " 1 AND `web` IS NULL) OR (`web` = @Original_web)) AND (`dia` = @Original_dia) AN"& _ 
                "D (`mes` = @Original_mes) AND (`contacto` = @Original_contacto) AND (`telconta` "& _ 
                "= @Original_telconta) AND (`cupo` = @Original_cupo) AND (`vmto` = @Original_vmto"& _ 
                ") AND (`iva` = @Original_iva) AND (`retef` = @Original_retef) AND (`reteiva` = @"& _ 
                "Original_reteiva) AND (`reteica` = @Original_reteica))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nit"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nit"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@dv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dv"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nombre"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@apellidos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "apellidos"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipo"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@persona"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "persona"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@dir"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dir"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@pais"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "pais"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@dept"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dept"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@mun"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "mun"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@telefono"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "telefono"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@celular"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "celular"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@fax"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "fax"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@correo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "correo"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@web"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "web"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@dia"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dia"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@mes"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "mes"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@contacto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "contacto"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@telconta"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "telconta"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cupo"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cupo"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@vmto"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int64
            param.IsNullable = true
            param.SourceColumn = "vmto"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@iva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "iva"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@retef"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "retef"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@reteiva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "reteiva"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@reteica"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "reteica"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nit"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nit"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_dv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dv"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nombre"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nombre"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@IsNull_apellidos"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "apellidos"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_apellidos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "apellidos"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tipo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_persona"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "persona"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_dir"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dir"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_pais"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "pais"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_dept"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dept"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_mun"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "mun"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@IsNull_telefono"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "telefono"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_telefono"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "telefono"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@IsNull_celular"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "celular"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_celular"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "celular"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@IsNull_fax"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "fax"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_fax"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "fax"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@IsNull_correo"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "correo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_correo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "correo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@IsNull_web"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "web"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_web"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "web"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_dia"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dia"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_mes"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "mes"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_contacto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "contacto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_telconta"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "telconta"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cupo"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cupo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_vmto"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int64
            param.IsNullable = true
            param.SourceColumn = "vmto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_iva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "iva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_retef"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "retef"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_reteiva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "reteiva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_reteica"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "reteica"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection
            Me._connection.ConnectionString = Global.SAE.My.MySettings.Default.saeosteomaterial2012ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `nit`, `dv`, `nombre`, `apellidos`, `tipo`, `persona`, `dir`, `pais`, `dep"& _ 
                "t`, `mun`, `telefono`, `celular`, `fax`, `correo`, `web`, `dia`, `mes`, `contact"& _ 
                "o`, `telconta`, `cupo`, `vmto`, `iva`, `retef`, `reteiva`, `reteica` FROM `saeos"& _ 
                "teomaterial2012`.`terceros`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As saeosteomaterial2012DataSet.tercerosDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As saeosteomaterial2012DataSet.tercerosDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As saeosteomaterial2012DataSet.tercerosDataTable = New saeosteomaterial2012DataSet.tercerosDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As saeosteomaterial2012DataSet.tercerosDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As saeosteomaterial2012DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "terceros")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_nit As String,  _
                    ByVal Original_dv As String,  _
                    ByVal Original_nombre As String,  _
                    ByVal Original_apellidos As String,  _
                    ByVal Original_tipo As String,  _
                    ByVal Original_persona As String,  _
                    ByVal Original_dir As String,  _
                    ByVal Original_pais As String,  _
                    ByVal Original_dept As String,  _
                    ByVal Original_mun As String,  _
                    ByVal Original_telefono As String,  _
                    ByVal Original_celular As String,  _
                    ByVal Original_fax As String,  _
                    ByVal Original_correo As String,  _
                    ByVal Original_web As String,  _
                    ByVal Original_dia As String,  _
                    ByVal Original_mes As String,  _
                    ByVal Original_contacto As String,  _
                    ByVal Original_telconta As String,  _
                    ByVal Original_cupo As Double,  _
                    ByVal Original_vmto As Long,  _
                    ByVal Original_iva As String,  _
                    ByVal Original_retef As String,  _
                    ByVal Original_reteiva As String,  _
                    ByVal Original_reteica As String) As Integer
            If (Original_nit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nit")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_nit,String)
            End If
            If (Original_dv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_dv")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_dv,String)
            End If
            If (Original_nombre Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nombre")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_nombre,String)
            End If
            If (Original_apellidos Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_apellidos,String)
            End If
            If (Original_tipo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_tipo")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_tipo,String)
            End If
            If (Original_persona Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_persona")
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_persona,String)
            End If
            If (Original_dir Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_dir")
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_dir,String)
            End If
            If (Original_pais Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_pais")
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_pais,String)
            End If
            If (Original_dept Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_dept")
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_dept,String)
            End If
            If (Original_mun Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_mun")
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_mun,String)
            End If
            If (Original_telefono Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_telefono,String)
            End If
            If (Original_celular Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_celular,String)
            End If
            If (Original_fax Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_fax,String)
            End If
            If (Original_correo Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_correo,String)
            End If
            If (Original_web Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_web,String)
            End If
            If (Original_dia Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_dia")
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_dia,String)
            End If
            If (Original_mes Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_mes")
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_mes,String)
            End If
            If (Original_contacto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_contacto")
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_contacto,String)
            End If
            If (Original_telconta Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_telconta")
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_telconta,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_cupo,Double)
            Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_vmto,Long)
            If (Original_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_iva")
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_iva,String)
            End If
            If (Original_retef Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_retef")
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_retef,String)
            End If
            If (Original_reteiva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_reteiva")
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_reteiva,String)
            End If
            If (Original_reteica Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_reteica")
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_reteica,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal nit As String,  _
                    ByVal dv As String,  _
                    ByVal nombre As String,  _
                    ByVal apellidos As String,  _
                    ByVal tipo As String,  _
                    ByVal persona As String,  _
                    ByVal dir As String,  _
                    ByVal pais As String,  _
                    ByVal dept As String,  _
                    ByVal mun As String,  _
                    ByVal telefono As String,  _
                    ByVal celular As String,  _
                    ByVal fax As String,  _
                    ByVal correo As String,  _
                    ByVal web As String,  _
                    ByVal dia As String,  _
                    ByVal mes As String,  _
                    ByVal contacto As String,  _
                    ByVal telconta As String,  _
                    ByVal cupo As Double,  _
                    ByVal vmto As Long,  _
                    ByVal iva As String,  _
                    ByVal retef As String,  _
                    ByVal reteiva As String,  _
                    ByVal reteica As String) As Integer
            If (nit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nit")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(nit,String)
            End If
            If (dv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dv")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(dv,String)
            End If
            If (nombre Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nombre")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(nombre,String)
            End If
            If (apellidos Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(apellidos,String)
            End If
            If (tipo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipo")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(tipo,String)
            End If
            If (persona Is Nothing) Then
                Throw New Global.System.ArgumentNullException("persona")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(persona,String)
            End If
            If (dir Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dir")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(dir,String)
            End If
            If (pais Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pais")
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(pais,String)
            End If
            If (dept Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dept")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(dept,String)
            End If
            If (mun Is Nothing) Then
                Throw New Global.System.ArgumentNullException("mun")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(mun,String)
            End If
            If (telefono Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(telefono,String)
            End If
            If (celular Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(celular,String)
            End If
            If (fax Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(fax,String)
            End If
            If (correo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(correo,String)
            End If
            If (web Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(web,String)
            End If
            If (dia Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dia")
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(dia,String)
            End If
            If (mes Is Nothing) Then
                Throw New Global.System.ArgumentNullException("mes")
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(mes,String)
            End If
            If (contacto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("contacto")
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(contacto,String)
            End If
            If (telconta Is Nothing) Then
                Throw New Global.System.ArgumentNullException("telconta")
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(telconta,String)
            End If
            Me.Adapter.InsertCommand.Parameters(19).Value = CType(cupo,Double)
            Me.Adapter.InsertCommand.Parameters(20).Value = CType(vmto,Long)
            If (iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("iva")
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(iva,String)
            End If
            If (retef Is Nothing) Then
                Throw New Global.System.ArgumentNullException("retef")
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(retef,String)
            End If
            If (reteiva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("reteiva")
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(reteiva,String)
            End If
            If (reteica Is Nothing) Then
                Throw New Global.System.ArgumentNullException("reteica")
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(reteica,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal nit As String,  _
                    ByVal dv As String,  _
                    ByVal nombre As String,  _
                    ByVal apellidos As String,  _
                    ByVal tipo As String,  _
                    ByVal persona As String,  _
                    ByVal dir As String,  _
                    ByVal pais As String,  _
                    ByVal dept As String,  _
                    ByVal mun As String,  _
                    ByVal telefono As String,  _
                    ByVal celular As String,  _
                    ByVal fax As String,  _
                    ByVal correo As String,  _
                    ByVal web As String,  _
                    ByVal dia As String,  _
                    ByVal mes As String,  _
                    ByVal contacto As String,  _
                    ByVal telconta As String,  _
                    ByVal cupo As Double,  _
                    ByVal vmto As Long,  _
                    ByVal iva As String,  _
                    ByVal retef As String,  _
                    ByVal reteiva As String,  _
                    ByVal reteica As String,  _
                    ByVal Original_nit As String,  _
                    ByVal Original_dv As String,  _
                    ByVal Original_nombre As String,  _
                    ByVal Original_apellidos As String,  _
                    ByVal Original_tipo As String,  _
                    ByVal Original_persona As String,  _
                    ByVal Original_dir As String,  _
                    ByVal Original_pais As String,  _
                    ByVal Original_dept As String,  _
                    ByVal Original_mun As String,  _
                    ByVal Original_telefono As String,  _
                    ByVal Original_celular As String,  _
                    ByVal Original_fax As String,  _
                    ByVal Original_correo As String,  _
                    ByVal Original_web As String,  _
                    ByVal Original_dia As String,  _
                    ByVal Original_mes As String,  _
                    ByVal Original_contacto As String,  _
                    ByVal Original_telconta As String,  _
                    ByVal Original_cupo As Double,  _
                    ByVal Original_vmto As Long,  _
                    ByVal Original_iva As String,  _
                    ByVal Original_retef As String,  _
                    ByVal Original_reteiva As String,  _
                    ByVal Original_reteica As String) As Integer
            If (nit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nit")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(nit,String)
            End If
            If (dv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dv")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(dv,String)
            End If
            If (nombre Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nombre")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(nombre,String)
            End If
            If (apellidos Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(apellidos,String)
            End If
            If (tipo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipo")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(tipo,String)
            End If
            If (persona Is Nothing) Then
                Throw New Global.System.ArgumentNullException("persona")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(persona,String)
            End If
            If (dir Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dir")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(dir,String)
            End If
            If (pais Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pais")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(pais,String)
            End If
            If (dept Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dept")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(dept,String)
            End If
            If (mun Is Nothing) Then
                Throw New Global.System.ArgumentNullException("mun")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(mun,String)
            End If
            If (telefono Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(telefono,String)
            End If
            If (celular Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(celular,String)
            End If
            If (fax Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(fax,String)
            End If
            If (correo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(correo,String)
            End If
            If (web Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(web,String)
            End If
            If (dia Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dia")
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(dia,String)
            End If
            If (mes Is Nothing) Then
                Throw New Global.System.ArgumentNullException("mes")
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(mes,String)
            End If
            If (contacto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("contacto")
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(contacto,String)
            End If
            If (telconta Is Nothing) Then
                Throw New Global.System.ArgumentNullException("telconta")
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(telconta,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(cupo,Double)
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(vmto,Long)
            If (iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("iva")
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(iva,String)
            End If
            If (retef Is Nothing) Then
                Throw New Global.System.ArgumentNullException("retef")
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(retef,String)
            End If
            If (reteiva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("reteiva")
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(reteiva,String)
            End If
            If (reteica Is Nothing) Then
                Throw New Global.System.ArgumentNullException("reteica")
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(reteica,String)
            End If
            If (Original_nit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nit")
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_nit,String)
            End If
            If (Original_dv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_dv")
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_dv,String)
            End If
            If (Original_nombre Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nombre")
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_nombre,String)
            End If
            If (Original_apellidos Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_apellidos,String)
            End If
            If (Original_tipo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_tipo")
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_tipo,String)
            End If
            If (Original_persona Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_persona")
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_persona,String)
            End If
            If (Original_dir Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_dir")
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_dir,String)
            End If
            If (Original_pais Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_pais")
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_pais,String)
            End If
            If (Original_dept Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_dept")
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_dept,String)
            End If
            If (Original_mun Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_mun")
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_mun,String)
            End If
            If (Original_telefono Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_telefono,String)
            End If
            If (Original_celular Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_celular,String)
            End If
            If (Original_fax Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_fax,String)
            End If
            If (Original_correo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_correo,String)
            End If
            If (Original_web Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_web,String)
            End If
            If (Original_dia Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_dia")
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_dia,String)
            End If
            If (Original_mes Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_mes")
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_mes,String)
            End If
            If (Original_contacto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_contacto")
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_contacto,String)
            End If
            If (Original_telconta Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_telconta")
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_telconta,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_cupo,Double)
            Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_vmto,Long)
            If (Original_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_iva")
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_iva,String)
            End If
            If (Original_retef Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_retef")
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_retef,String)
            End If
            If (Original_reteiva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_reteiva")
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_reteiva,String)
            End If
            If (Original_reteica Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_reteica")
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_reteica,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal dv As String,  _
                    ByVal nombre As String,  _
                    ByVal apellidos As String,  _
                    ByVal tipo As String,  _
                    ByVal persona As String,  _
                    ByVal dir As String,  _
                    ByVal pais As String,  _
                    ByVal dept As String,  _
                    ByVal mun As String,  _
                    ByVal telefono As String,  _
                    ByVal celular As String,  _
                    ByVal fax As String,  _
                    ByVal correo As String,  _
                    ByVal web As String,  _
                    ByVal dia As String,  _
                    ByVal mes As String,  _
                    ByVal contacto As String,  _
                    ByVal telconta As String,  _
                    ByVal cupo As Double,  _
                    ByVal vmto As Long,  _
                    ByVal iva As String,  _
                    ByVal retef As String,  _
                    ByVal reteiva As String,  _
                    ByVal reteica As String,  _
                    ByVal Original_nit As String,  _
                    ByVal Original_dv As String,  _
                    ByVal Original_nombre As String,  _
                    ByVal Original_apellidos As String,  _
                    ByVal Original_tipo As String,  _
                    ByVal Original_persona As String,  _
                    ByVal Original_dir As String,  _
                    ByVal Original_pais As String,  _
                    ByVal Original_dept As String,  _
                    ByVal Original_mun As String,  _
                    ByVal Original_telefono As String,  _
                    ByVal Original_celular As String,  _
                    ByVal Original_fax As String,  _
                    ByVal Original_correo As String,  _
                    ByVal Original_web As String,  _
                    ByVal Original_dia As String,  _
                    ByVal Original_mes As String,  _
                    ByVal Original_contacto As String,  _
                    ByVal Original_telconta As String,  _
                    ByVal Original_cupo As Double,  _
                    ByVal Original_vmto As Long,  _
                    ByVal Original_iva As String,  _
                    ByVal Original_retef As String,  _
                    ByVal Original_reteiva As String,  _
                    ByVal Original_reteica As String) As Integer
            Return Me.Update(Original_nit, dv, nombre, apellidos, tipo, persona, dir, pais, dept, mun, telefono, celular, fax, correo, web, dia, mes, contacto, telconta, cupo, vmto, iva, retef, reteiva, reteica, Original_nit, Original_dv, Original_nombre, Original_apellidos, Original_tipo, Original_persona, Original_dir, Original_pais, Original_dept, Original_mun, Original_telefono, Original_celular, Original_fax, Original_correo, Original_web, Original_dia, Original_mes, Original_contacto, Original_telconta, Original_cupo, Original_vmto, Original_iva, Original_retef, Original_reteiva, Original_reteica)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class parinvenTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "parinven"
            tableMapping.ColumnMappings.Add("longitud", "longitud")
            tableMapping.ColumnMappings.Add("nivel1", "nivel1")
            tableMapping.ColumnMappings.Add("desc1", "desc1")
            tableMapping.ColumnMappings.Add("nivel2", "nivel2")
            tableMapping.ColumnMappings.Add("desc2", "desc2")
            tableMapping.ColumnMappings.Add("nivel3", "nivel3")
            tableMapping.ColumnMappings.Add("desc3", "desc3")
            tableMapping.ColumnMappings.Add("nivel4", "nivel4")
            tableMapping.ColumnMappings.Add("desc4", "desc4")
            tableMapping.ColumnMappings.Add("nivel5", "nivel5")
            tableMapping.ColumnMappings.Add("desc5", "desc5")
            tableMapping.ColumnMappings.Add("nivel6", "nivel6")
            tableMapping.ColumnMappings.Add("desc6", "desc6")
            tableMapping.ColumnMappings.Add("formula", "formula")
            tableMapping.ColumnMappings.Add("porcen", "porcen")
            tableMapping.ColumnMappings.Add("traslados", "traslados")
            tableMapping.ColumnMappings.Add("ajustes", "ajustes")
            tableMapping.ColumnMappings.Add("entradas", "entradas")
            tableMapping.ColumnMappings.Add("salidas", "salidas")
            tableMapping.ColumnMappings.Add("codbar", "codbar")
            tableMapping.ColumnMappings.Add("contable", "contable")
            tableMapping.ColumnMappings.Add("cuenta1", "cuenta1")
            tableMapping.ColumnMappings.Add("cuenta2", "cuenta2")
            tableMapping.ColumnMappings.Add("cuenta3", "cuenta3")
            tableMapping.ColumnMappings.Add("cuenta4", "cuenta4")
            tableMapping.ColumnMappings.Add("cuenta5", "cuenta5")
            tableMapping.ColumnMappings.Add("cuenta6", "cuenta6")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `saeosteomaterial2012`.`parinven` (`longitud`, `nivel1`, `desc1`, `ni"& _ 
                "vel2`, `desc2`, `nivel3`, `desc3`, `nivel4`, `desc4`, `nivel5`, `desc5`, `nivel6"& _ 
                "`, `desc6`, `formula`, `porcen`, `traslados`, `ajustes`, `entradas`, `salidas`, "& _ 
                "`codbar`, `contable`, `cuenta1`, `cuenta2`, `cuenta3`, `cuenta4`, `cuenta5`, `cu"& _ 
                "enta6`) VALUES (@longitud, @nivel1, @desc1, @nivel2, @desc2, @nivel3, @desc3, @n"& _ 
                "ivel4, @desc4, @nivel5, @desc5, @nivel6, @desc6, @formula, @porcen, @traslados, "& _ 
                "@ajustes, @entradas, @salidas, @codbar, @contable, @cuenta1, @cuenta2, @cuenta3,"& _ 
                " @cuenta4, @cuenta5, @cuenta6)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@longitud"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "longitud"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nivel1"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "nivel1"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@desc1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "desc1"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nivel2"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "nivel2"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@desc2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "desc2"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nivel3"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "nivel3"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@desc3"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "desc3"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nivel4"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "nivel4"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@desc4"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "desc4"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nivel5"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "nivel5"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@desc5"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "desc5"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nivel6"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "nivel6"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@desc6"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "desc6"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@formula"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "formula"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@porcen"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "porcen"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@traslados"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "traslados"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ajustes"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ajustes"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@entradas"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "entradas"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@salidas"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "salidas"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@codbar"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "codbar"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@contable"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "contable"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cuenta1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cuenta1"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cuenta2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cuenta2"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cuenta3"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cuenta3"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cuenta4"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cuenta4"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cuenta5"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cuenta5"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cuenta6"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cuenta6"
            Me._adapter.InsertCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection
            Me._connection.ConnectionString = Global.SAE.My.MySettings.Default.saeosteomaterial2012ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `longitud`, `nivel1`, `desc1`, `nivel2`, `desc2`, `nivel3`, `desc3`, `nive"& _ 
                "l4`, `desc4`, `nivel5`, `desc5`, `nivel6`, `desc6`, `formula`, `porcen`, `trasla"& _ 
                "dos`, `ajustes`, `entradas`, `salidas`, `codbar`, `contable`, `cuenta1`, `cuenta"& _ 
                "2`, `cuenta3`, `cuenta4`, `cuenta5`, `cuenta6` FROM `saeosteomaterial2012`.`pari"& _ 
                "nven`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As saeosteomaterial2012DataSet.parinvenDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As saeosteomaterial2012DataSet.parinvenDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As saeosteomaterial2012DataSet.parinvenDataTable = New saeosteomaterial2012DataSet.parinvenDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As saeosteomaterial2012DataSet.parinvenDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As saeosteomaterial2012DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "parinven")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal longitud As Integer,  _
                    ByVal nivel1 As Integer,  _
                    ByVal desc1 As String,  _
                    ByVal nivel2 As Integer,  _
                    ByVal desc2 As String,  _
                    ByVal nivel3 As Integer,  _
                    ByVal desc3 As String,  _
                    ByVal nivel4 As Integer,  _
                    ByVal desc4 As String,  _
                    ByVal nivel5 As Integer,  _
                    ByVal desc5 As String,  _
                    ByVal nivel6 As Integer,  _
                    ByVal desc6 As String,  _
                    ByVal formula As String,  _
                    ByVal porcen As Integer,  _
                    ByVal traslados As String,  _
                    ByVal ajustes As String,  _
                    ByVal entradas As String,  _
                    ByVal salidas As String,  _
                    ByVal codbar As String,  _
                    ByVal contable As String,  _
                    ByVal cuenta1 As String,  _
                    ByVal cuenta2 As String,  _
                    ByVal cuenta3 As String,  _
                    ByVal cuenta4 As String,  _
                    ByVal cuenta5 As String,  _
                    ByVal cuenta6 As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(longitud,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(nivel1,Integer)
            If (desc1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("desc1")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(desc1,String)
            End If
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(nivel2,Integer)
            If (desc2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("desc2")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(desc2,String)
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(nivel3,Integer)
            If (desc3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("desc3")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(desc3,String)
            End If
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(nivel4,Integer)
            If (desc4 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("desc4")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(desc4,String)
            End If
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(nivel5,Integer)
            If (desc5 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("desc5")
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(desc5,String)
            End If
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(nivel6,Integer)
            If (desc6 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("desc6")
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(desc6,String)
            End If
            If (formula Is Nothing) Then
                Throw New Global.System.ArgumentNullException("formula")
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(formula,String)
            End If
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(porcen,Integer)
            If (traslados Is Nothing) Then
                Throw New Global.System.ArgumentNullException("traslados")
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(traslados,String)
            End If
            If (ajustes Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ajustes")
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(ajustes,String)
            End If
            If (entradas Is Nothing) Then
                Throw New Global.System.ArgumentNullException("entradas")
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(entradas,String)
            End If
            If (salidas Is Nothing) Then
                Throw New Global.System.ArgumentNullException("salidas")
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(salidas,String)
            End If
            If (codbar Is Nothing) Then
                Throw New Global.System.ArgumentNullException("codbar")
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(codbar,String)
            End If
            If (contable Is Nothing) Then
                Throw New Global.System.ArgumentNullException("contable")
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(contable,String)
            End If
            If (cuenta1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cuenta1")
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(cuenta1,String)
            End If
            If (cuenta2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cuenta2")
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(cuenta2,String)
            End If
            If (cuenta3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cuenta3")
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(cuenta3,String)
            End If
            If (cuenta4 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cuenta4")
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(cuenta4,String)
            End If
            If (cuenta5 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cuenta5")
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(cuenta5,String)
            End If
            If (cuenta6 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cuenta6")
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(cuenta6,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class detafac01TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "detafac01"
            tableMapping.ColumnMappings.Add("doc", "doc")
            tableMapping.ColumnMappings.Add("item", "item")
            tableMapping.ColumnMappings.Add("tipo_it", "tipo_it")
            tableMapping.ColumnMappings.Add("codart", "codart")
            tableMapping.ColumnMappings.Add("nomart", "nomart")
            tableMapping.ColumnMappings.Add("numbod", "numbod")
            tableMapping.ColumnMappings.Add("cantidad", "cantidad")
            tableMapping.ColumnMappings.Add("valor", "valor")
            tableMapping.ColumnMappings.Add("vtotal", "vtotal")
            tableMapping.ColumnMappings.Add("iva_d", "iva_d")
            tableMapping.ColumnMappings.Add("cta_inv", "cta_inv")
            tableMapping.ColumnMappings.Add("cta_cos", "cta_cos")
            tableMapping.ColumnMappings.Add("cta_ing", "cta_ing")
            tableMapping.ColumnMappings.Add("cta_iva", "cta_iva")
            tableMapping.ColumnMappings.Add("costo", "costo")
            tableMapping.ColumnMappings.Add("concep", "concep")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `saeosteomaterial2012`.`detafac01` (`doc`, `item`, `tipo_it`, `codart"& _ 
                "`, `nomart`, `numbod`, `cantidad`, `valor`, `vtotal`, `iva_d`, `cta_inv`, `cta_c"& _ 
                "os`, `cta_ing`, `cta_iva`, `costo`, `concep`) VALUES (@doc, @item, @tipo_it, @co"& _ 
                "dart, @nomart, @numbod, @cantidad, @valor, @vtotal, @iva_d, @cta_inv, @cta_cos, "& _ 
                "@cta_ing, @cta_iva, @costo, @concep)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@doc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "doc"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@item"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "item"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipo_it"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "tipo_it"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@codart"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "codart"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nomart"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Text
            param.IsNullable = true
            param.SourceColumn = "nomart"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@numbod"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "numbod"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cantidad"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "cantidad"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@valor"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "valor"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@vtotal"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "vtotal"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@iva_d"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "iva_d"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta_inv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_inv"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta_cos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_cos"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta_ing"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_ing"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta_iva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_iva"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@costo"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "costo"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@concep"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "concep"
            Me._adapter.InsertCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection
            Me._connection.ConnectionString = Global.SAE.My.MySettings.Default.saeosteomaterial2012ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `doc`, `item`, `tipo_it`, `codart`, `nomart`, `numbod`, `cantidad`, `valor"& _ 
                "`, `vtotal`, `iva_d`, `cta_inv`, `cta_cos`, `cta_ing`, `cta_iva`, `costo`, `conc"& _ 
                "ep` FROM `saeosteomaterial2012`.`detafac01`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As saeosteomaterial2012DataSet.detafac01DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As saeosteomaterial2012DataSet.detafac01DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As saeosteomaterial2012DataSet.detafac01DataTable = New saeosteomaterial2012DataSet.detafac01DataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As saeosteomaterial2012DataSet.detafac01DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As saeosteomaterial2012DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "detafac01")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal doc As String,  _
                    ByVal item As Integer,  _
                    ByVal tipo_it As String,  _
                    ByVal codart As String,  _
                    ByVal nomart As String,  _
                    ByVal numbod As Integer,  _
                    ByVal cantidad As Double,  _
                    ByVal valor As Double,  _
                    ByVal vtotal As Double,  _
                    ByVal iva_d As String,  _
                    ByVal cta_inv As String,  _
                    ByVal cta_cos As String,  _
                    ByVal cta_ing As String,  _
                    ByVal cta_iva As String,  _
                    ByVal costo As Double,  _
                    ByVal concep As String) As Integer
            If (doc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("doc")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(doc,String)
            End If
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(item,Integer)
            If (tipo_it Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipo_it")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(tipo_it,String)
            End If
            If (codart Is Nothing) Then
                Throw New Global.System.ArgumentNullException("codart")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(codart,String)
            End If
            If (nomart Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nomart")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(nomart,String)
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(numbod,Integer)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(cantidad,Double)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(valor,Double)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(vtotal,Double)
            If (iva_d Is Nothing) Then
                Throw New Global.System.ArgumentNullException("iva_d")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(iva_d,String)
            End If
            If (cta_inv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta_inv")
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(cta_inv,String)
            End If
            If (cta_cos Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta_cos")
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(cta_cos,String)
            End If
            If (cta_ing Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta_ing")
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(cta_ing,String)
            End If
            If (cta_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta_iva")
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(cta_iva,String)
            End If
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(costo,Double)
            If (concep Is Nothing) Then
                Throw New Global.System.ArgumentNullException("concep")
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(concep,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class facturas01TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "facturas01"
            tableMapping.ColumnMappings.Add("doc", "doc")
            tableMapping.ColumnMappings.Add("num", "num")
            tableMapping.ColumnMappings.Add("tipodoc", "tipodoc")
            tableMapping.ColumnMappings.Add("doc_de", "doc_de")
            tableMapping.ColumnMappings.Add("nitc", "nitc")
            tableMapping.ColumnMappings.Add("nitv", "nitv")
            tableMapping.ColumnMappings.Add("usuario", "usuario")
            tableMapping.ColumnMappings.Add("fecha", "fecha")
            tableMapping.ColumnMappings.Add("hora", "hora")
            tableMapping.ColumnMappings.Add("descrip", "descrip")
            tableMapping.ColumnMappings.Add("doc_afec", "doc_afec")
            tableMapping.ColumnMappings.Add("afecta", "afecta")
            tableMapping.ColumnMappings.Add("subtotal", "subtotal")
            tableMapping.ColumnMappings.Add("por_desc", "por_desc")
            tableMapping.ColumnMappings.Add("descuento", "descuento")
            tableMapping.ColumnMappings.Add("cta_desc", "cta_desc")
            tableMapping.ColumnMappings.Add("por_ret_f", "por_ret_f")
            tableMapping.ColumnMappings.Add("ret_f", "ret_f")
            tableMapping.ColumnMappings.Add("cta_ret_f", "cta_ret_f")
            tableMapping.ColumnMappings.Add("por_iva", "por_iva")
            tableMapping.ColumnMappings.Add("iva", "iva")
            tableMapping.ColumnMappings.Add("cta_iva", "cta_iva")
            tableMapping.ColumnMappings.Add("por_ret_iva", "por_ret_iva")
            tableMapping.ColumnMappings.Add("ret_iva", "ret_iva")
            tableMapping.ColumnMappings.Add("cta_ret_iva", "cta_ret_iva")
            tableMapping.ColumnMappings.Add("por_ret_ica", "por_ret_ica")
            tableMapping.ColumnMappings.Add("ret_ica", "ret_ica")
            tableMapping.ColumnMappings.Add("cta_ret_ica", "cta_ret_ica")
            tableMapping.ColumnMappings.Add("total", "total")
            tableMapping.ColumnMappings.Add("cta_total", "cta_total")
            tableMapping.ColumnMappings.Add("estado", "estado")
            tableMapping.ColumnMappings.Add("observ", "observ")
            tableMapping.ColumnMappings.Add("vmto", "vmto")
            tableMapping.ColumnMappings.Add("dir_ent", "dir_ent")
            tableMapping.ColumnMappings.Add("ciu_ent", "ciu_ent")
            tableMapping.ColumnMappings.Add("o_compra", "o_compra")
            tableMapping.ColumnMappings.Add("fecha_o", "fecha_o")
            tableMapping.ColumnMappings.Add("cc", "cc")
            tableMapping.ColumnMappings.Add("o_con", "o_con")
            tableMapping.ColumnMappings.Add("t1", "t1")
            tableMapping.ColumnMappings.Add("d1", "d1")
            tableMapping.ColumnMappings.Add("v1", "v1")
            tableMapping.ColumnMappings.Add("cta1", "cta1")
            tableMapping.ColumnMappings.Add("t2", "t2")
            tableMapping.ColumnMappings.Add("d2", "d2")
            tableMapping.ColumnMappings.Add("v2", "v2")
            tableMapping.ColumnMappings.Add("cta2", "cta2")
            tableMapping.ColumnMappings.Add("t3", "t3")
            tableMapping.ColumnMappings.Add("d3", "d3")
            tableMapping.ColumnMappings.Add("v3", "v3")
            tableMapping.ColumnMappings.Add("cta3", "cta3")
            tableMapping.ColumnMappings.Add("entregar", "entregar")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `saeosteomaterial2012`.`facturas01` WHERE ((`doc` = @Original_doc) AN"& _ 
                "D (`num` = @Original_num) AND (`tipodoc` = @Original_tipodoc) AND (`doc_de` = @O"& _ 
                "riginal_doc_de) AND (`nitc` = @Original_nitc) AND (`nitv` = @Original_nitv) AND "& _ 
                "(`usuario` = @Original_usuario) AND (`fecha` = @Original_fecha) AND (`hora` = @O"& _ 
                "riginal_hora) AND (`doc_afec` = @Original_doc_afec) AND (`afecta` = @Original_af"& _ 
                "ecta) AND (`subtotal` = @Original_subtotal) AND (`por_desc` = @Original_por_desc"& _ 
                ") AND (`descuento` = @Original_descuento) AND (`cta_desc` = @Original_cta_desc) "& _ 
                "AND (`por_ret_f` = @Original_por_ret_f) AND (`ret_f` = @Original_ret_f) AND (`ct"& _ 
                "a_ret_f` = @Original_cta_ret_f) AND (`por_iva` = @Original_por_iva) AND (`iva` ="& _ 
                " @Original_iva) AND (`cta_iva` = @Original_cta_iva) AND (`por_ret_iva` = @Origin"& _ 
                "al_por_ret_iva) AND (`ret_iva` = @Original_ret_iva) AND (`cta_ret_iva` = @Origin"& _ 
                "al_cta_ret_iva) AND (`por_ret_ica` = @Original_por_ret_ica) AND (`ret_ica` = @Or"& _ 
                "iginal_ret_ica) AND (`cta_ret_ica` = @Original_cta_ret_ica) AND (`total` = @Orig"& _ 
                "inal_total) AND (`cta_total` = @Original_cta_total) AND (`estado` = @Original_es"& _ 
                "tado) AND (`vmto` = @Original_vmto) AND (`dir_ent` = @Original_dir_ent) AND (`ci"& _ 
                "u_ent` = @Original_ciu_ent) AND (`o_compra` = @Original_o_compra) AND (`fecha_o`"& _ 
                " = @Original_fecha_o) AND (`cc` = @Original_cc) AND (`o_con` = @Original_o_con) "& _ 
                "AND (`t1` = @Original_t1) AND (`d1` = @Original_d1) AND (`v1` = @Original_v1) AN"& _ 
                "D (`cta1` = @Original_cta1) AND (`t2` = @Original_t2) AND (`d2` = @Original_d2) "& _ 
                "AND (`v2` = @Original_v2) AND (`cta2` = @Original_cta2) AND (`t3` = @Original_t3"& _ 
                ") AND (`d3` = @Original_d3) AND (`v3` = @Original_v3) AND (`cta3` = @Original_ct"& _ 
                "a3))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_doc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "doc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_num"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int64
            param.IsNullable = true
            param.SourceColumn = "num"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tipodoc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipodoc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_doc_de"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "doc_de"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nitc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nitv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitv"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_usuario"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "usuario"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_fecha"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fecha"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_hora"
            param.DbType = Global.System.Data.DbType.Time
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Time
            param.IsNullable = true
            param.SourceColumn = "hora"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_doc_afec"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "doc_afec"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_afecta"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "afecta"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_subtotal"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "subtotal"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_por_desc"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_desc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_descuento"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "descuento"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cta_desc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_desc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_por_ret_f"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_ret_f"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ret_f"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "ret_f"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cta_ret_f"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_ret_f"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_por_iva"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_iva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_iva"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "iva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cta_iva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_iva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_por_ret_iva"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_ret_iva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ret_iva"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "ret_iva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cta_ret_iva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_ret_iva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_por_ret_ica"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_ret_ica"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ret_ica"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "ret_ica"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cta_ret_ica"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_ret_ica"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_total"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "total"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cta_total"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_total"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_estado"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_vmto"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "vmto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_dir_ent"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dir_ent"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ciu_ent"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ciu_ent"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_o_compra"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "o_compra"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_fecha_o"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "fecha_o"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_o_con"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "o_con"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_t1"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "t1"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_d1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "d1"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_v1"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "v1"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cta1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta1"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_t2"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "t2"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_d2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "d2"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_v2"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "v2"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cta2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta2"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_t3"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "t3"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_d3"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "d3"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_v3"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "v3"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cta3"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta3"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `saeosteomaterial2012`.`facturas01` (`doc`, `num`, `tipodoc`, `doc_de"& _ 
                "`, `nitc`, `nitv`, `usuario`, `fecha`, `hora`, `descrip`, `doc_afec`, `afecta`, "& _ 
                "`subtotal`, `por_desc`, `descuento`, `cta_desc`, `por_ret_f`, `ret_f`, `cta_ret_"& _ 
                "f`, `por_iva`, `iva`, `cta_iva`, `por_ret_iva`, `ret_iva`, `cta_ret_iva`, `por_r"& _ 
                "et_ica`, `ret_ica`, `cta_ret_ica`, `total`, `cta_total`, `estado`, `observ`, `vm"& _ 
                "to`, `entregar`, `dir_ent`, `ciu_ent`, `o_compra`, `fecha_o`, `cc`, `o_con`, `t1"& _ 
                "`, `d1`, `v1`, `cta1`, `t2`, `d2`, `v2`, `cta2`, `t3`, `d3`, `v3`, `cta3`) VALUE"& _ 
                "S (@doc, @num, @tipodoc, @doc_de, @nitc, @nitv, @usuario, @fecha, @hora, @descri"& _ 
                "p, @doc_afec, @afecta, @subtotal, @por_desc, @descuento, @cta_desc, @por_ret_f, "& _ 
                "@ret_f, @cta_ret_f, @por_iva, @iva, @cta_iva, @por_ret_iva, @ret_iva, @cta_ret_i"& _ 
                "va, @por_ret_ica, @ret_ica, @cta_ret_ica, @total, @cta_total, @estado, @observ, "& _ 
                "@vmto, @entregar, @dir_ent, @ciu_ent, @o_compra, @fecha_o, @cc, @o_con, @t1, @d1"& _ 
                ", @v1, @cta1, @t2, @d2, @v2, @cta2, @t3, @d3, @v3, @cta3)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@doc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "doc"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@num"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int64
            param.IsNullable = true
            param.SourceColumn = "num"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipodoc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipodoc"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@doc_de"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "doc_de"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nitc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitc"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nitv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitv"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@usuario"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "usuario"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@fecha"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fecha"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@hora"
            param.DbType = Global.System.Data.DbType.Time
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Time
            param.IsNullable = true
            param.SourceColumn = "hora"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@descrip"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Text
            param.IsNullable = true
            param.SourceColumn = "descrip"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@doc_afec"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "doc_afec"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@afecta"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "afecta"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@subtotal"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "subtotal"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@por_desc"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_desc"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@descuento"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "descuento"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta_desc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_desc"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@por_ret_f"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_ret_f"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ret_f"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "ret_f"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta_ret_f"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_ret_f"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@por_iva"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_iva"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@iva"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "iva"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta_iva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_iva"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@por_ret_iva"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_ret_iva"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ret_iva"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "ret_iva"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta_ret_iva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_ret_iva"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@por_ret_ica"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_ret_ica"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ret_ica"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "ret_ica"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta_ret_ica"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_ret_ica"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@total"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "total"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta_total"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_total"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@estado"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@observ"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Text
            param.IsNullable = true
            param.SourceColumn = "observ"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@vmto"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "vmto"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@entregar"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "entregar"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@dir_ent"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dir_ent"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ciu_ent"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ciu_ent"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@o_compra"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "o_compra"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@fecha_o"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "fecha_o"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cc"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@o_con"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "o_con"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@t1"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "t1"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@d1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "d1"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@v1"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "v1"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta1"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@t2"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "t2"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@d2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "d2"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@v2"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "v2"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta2"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@t3"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "t3"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@d3"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "d3"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@v3"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "v3"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta3"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta3"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `saeosteomaterial2012`.`facturas01` SET `doc` = @doc, `num` = @num, `tipod"& _ 
                "oc` = @tipodoc, `doc_de` = @doc_de, `nitc` = @nitc, `nitv` = @nitv, `usuario` = "& _ 
                "@usuario, `fecha` = @fecha, `hora` = @hora, `descrip` = @descrip, `doc_afec` = @"& _ 
                "doc_afec, `afecta` = @afecta, `subtotal` = @subtotal, `por_desc` = @por_desc, `d"& _ 
                "escuento` = @descuento, `cta_desc` = @cta_desc, `por_ret_f` = @por_ret_f, `ret_f"& _ 
                "` = @ret_f, `cta_ret_f` = @cta_ret_f, `por_iva` = @por_iva, `iva` = @iva, `cta_i"& _ 
                "va` = @cta_iva, `por_ret_iva` = @por_ret_iva, `ret_iva` = @ret_iva, `cta_ret_iva"& _ 
                "` = @cta_ret_iva, `por_ret_ica` = @por_ret_ica, `ret_ica` = @ret_ica, `cta_ret_i"& _ 
                "ca` = @cta_ret_ica, `total` = @total, `cta_total` = @cta_total, `estado` = @esta"& _ 
                "do, `observ` = @observ, `vmto` = @vmto, `dir_ent` = @dir_ent, `ciu_ent` = @ciu_e"& _ 
                "nt, `o_compra` = @o_compra, `fecha_o` = @fecha_o, `cc` = @cc, `o_con` = @o_con, "& _ 
                "`t1` = @t1, `d1` = @d1, `v1` = @v1, `cta1` = @cta1, `t2` = @t2, `d2` = @d2, `v2`"& _ 
                " = @v2, `cta2` = @cta2, `t3` = @t3, `d3` = @d3, `v3` = @v3, `cta3` = @cta3, `ent"& _ 
                "regar` = @entregar WHERE ((`doc` = @Original_doc) AND (`num` = @Original_num) AN"& _ 
                "D (`tipodoc` = @Original_tipodoc) AND (`doc_de` = @Original_doc_de) AND (`nitc` "& _ 
                "= @Original_nitc) AND (`nitv` = @Original_nitv) AND (`usuario` = @Original_usuar"& _ 
                "io) AND (`fecha` = @Original_fecha) AND (`hora` = @Original_hora) AND (`doc_afec"& _ 
                "` = @Original_doc_afec) AND (`afecta` = @Original_afecta) AND (`subtotal` = @Ori"& _ 
                "ginal_subtotal) AND (`por_desc` = @Original_por_desc) AND (`descuento` = @Origin"& _ 
                "al_descuento) AND (`cta_desc` = @Original_cta_desc) AND (`por_ret_f` = @Original"& _ 
                "_por_ret_f) AND (`ret_f` = @Original_ret_f) AND (`cta_ret_f` = @Original_cta_ret"& _ 
                "_f) AND (`por_iva` = @Original_por_iva) AND (`iva` = @Original_iva) AND (`cta_iv"& _ 
                "a` = @Original_cta_iva) AND (`por_ret_iva` = @Original_por_ret_iva) AND (`ret_iv"& _ 
                "a` = @Original_ret_iva) AND (`cta_ret_iva` = @Original_cta_ret_iva) AND (`por_re"& _ 
                "t_ica` = @Original_por_ret_ica) AND (`ret_ica` = @Original_ret_ica) AND (`cta_re"& _ 
                "t_ica` = @Original_cta_ret_ica) AND (`total` = @Original_total) AND (`cta_total`"& _ 
                " = @Original_cta_total) AND (`estado` = @Original_estado) AND (`vmto` = @Origina"& _ 
                "l_vmto) AND (`dir_ent` = @Original_dir_ent) AND (`ciu_ent` = @Original_ciu_ent) "& _ 
                "AND (`o_compra` = @Original_o_compra) AND (`fecha_o` = @Original_fecha_o) AND (`"& _ 
                "cc` = @Original_cc) AND (`o_con` = @Original_o_con) AND (`t1` = @Original_t1) AN"& _ 
                "D (`d1` = @Original_d1) AND (`v1` = @Original_v1) AND (`cta1` = @Original_cta1) "& _ 
                "AND (`t2` = @Original_t2) AND (`d2` = @Original_d2) AND (`v2` = @Original_v2) AN"& _ 
                "D (`cta2` = @Original_cta2) AND (`t3` = @Original_t3) AND (`d3` = @Original_d3) "& _ 
                "AND (`v3` = @Original_v3) AND (`cta3` = @Original_cta3))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@doc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "doc"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@num"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int64
            param.IsNullable = true
            param.SourceColumn = "num"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipodoc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipodoc"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@doc_de"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "doc_de"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nitc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitc"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nitv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitv"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@usuario"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "usuario"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@fecha"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fecha"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@hora"
            param.DbType = Global.System.Data.DbType.Time
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Time
            param.IsNullable = true
            param.SourceColumn = "hora"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@descrip"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Text
            param.IsNullable = true
            param.SourceColumn = "descrip"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@doc_afec"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "doc_afec"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@afecta"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "afecta"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@subtotal"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "subtotal"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@por_desc"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_desc"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@descuento"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "descuento"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta_desc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_desc"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@por_ret_f"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_ret_f"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ret_f"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "ret_f"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta_ret_f"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_ret_f"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@por_iva"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_iva"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@iva"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "iva"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta_iva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_iva"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@por_ret_iva"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_ret_iva"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ret_iva"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "ret_iva"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta_ret_iva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_ret_iva"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@por_ret_ica"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_ret_ica"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ret_ica"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "ret_ica"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta_ret_ica"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_ret_ica"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@total"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "total"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta_total"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_total"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@estado"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@observ"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Text
            param.IsNullable = true
            param.SourceColumn = "observ"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@vmto"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "vmto"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@dir_ent"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dir_ent"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ciu_ent"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ciu_ent"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@o_compra"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "o_compra"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@fecha_o"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "fecha_o"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cc"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@o_con"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "o_con"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@t1"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "t1"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@d1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "d1"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@v1"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "v1"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta1"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@t2"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "t2"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@d2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "d2"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@v2"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "v2"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta2"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@t3"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "t3"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@d3"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "d3"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@v3"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "v3"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta3"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta3"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@entregar"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Text
            param.IsNullable = true
            param.SourceColumn = "entregar"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_doc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "doc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_num"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int64
            param.IsNullable = true
            param.SourceColumn = "num"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tipodoc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipodoc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_doc_de"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "doc_de"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nitc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nitv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitv"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_usuario"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "usuario"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_fecha"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fecha"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_hora"
            param.DbType = Global.System.Data.DbType.Time
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Time
            param.IsNullable = true
            param.SourceColumn = "hora"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_doc_afec"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "doc_afec"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_afecta"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "afecta"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_subtotal"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "subtotal"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_por_desc"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_desc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_descuento"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "descuento"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cta_desc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_desc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_por_ret_f"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_ret_f"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ret_f"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "ret_f"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cta_ret_f"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_ret_f"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_por_iva"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_iva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_iva"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "iva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cta_iva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_iva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_por_ret_iva"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_ret_iva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ret_iva"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "ret_iva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cta_ret_iva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_ret_iva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_por_ret_ica"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_ret_ica"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ret_ica"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "ret_ica"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cta_ret_ica"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_ret_ica"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_total"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "total"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cta_total"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_total"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_estado"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_vmto"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "vmto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_dir_ent"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dir_ent"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ciu_ent"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ciu_ent"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_o_compra"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "o_compra"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_fecha_o"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "fecha_o"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_o_con"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "o_con"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_t1"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "t1"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_d1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "d1"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_v1"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "v1"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cta1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta1"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_t2"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "t2"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_d2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "d2"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_v2"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "v2"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cta2"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta2"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_t3"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "t3"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_d3"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "d3"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_v3"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "v3"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cta3"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta3"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection
            Me._connection.ConnectionString = Global.SAE.My.MySettings.Default.saeosteomaterial2012ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT doc, num, tipodoc, doc_de, nitc, nitv, usuario, fecha, hora, descrip, doc_"& _ 
                "afec, afecta, subtotal, por_desc, descuento, cta_desc, por_ret_f, ret_f, cta_ret"& _ 
                "_f, por_iva, iva, cta_iva, por_ret_iva, ret_iva, cta_ret_iva, por_ret_ica, ret_i"& _ 
                "ca, cta_ret_ica, total, cta_total, estado, observ, vmto, dir_ent, ciu_ent, o_com"& _ 
                "pra, fecha_o, cc, o_con, t1, d1, v1, cta1, t2, d2, v2, cta2, t3, d3, v3, cta3, e"& _ 
                "ntregar FROM facturas01"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As saeosteomaterial2012DataSet.facturas01DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As saeosteomaterial2012DataSet.facturas01DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As saeosteomaterial2012DataSet.facturas01DataTable = New saeosteomaterial2012DataSet.facturas01DataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As saeosteomaterial2012DataSet.facturas01DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As saeosteomaterial2012DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "facturas01")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_doc As String,  _
                    ByVal Original_num As Long,  _
                    ByVal Original_tipodoc As String,  _
                    ByVal Original_doc_de As String,  _
                    ByVal Original_nitc As String,  _
                    ByVal Original_nitv As String,  _
                    ByVal Original_usuario As String,  _
                    ByVal Original_fecha As Date,  _
                    ByVal Original_hora As Date,  _
                    ByVal Original_doc_afec As String,  _
                    ByVal Original_afecta As String,  _
                    ByVal Original_subtotal As Double,  _
                    ByVal Original_por_desc As String,  _
                    ByVal Original_descuento As Double,  _
                    ByVal Original_cta_desc As String,  _
                    ByVal Original_por_ret_f As String,  _
                    ByVal Original_ret_f As Double,  _
                    ByVal Original_cta_ret_f As String,  _
                    ByVal Original_por_iva As String,  _
                    ByVal Original_iva As Double,  _
                    ByVal Original_cta_iva As String,  _
                    ByVal Original_por_ret_iva As String,  _
                    ByVal Original_ret_iva As Double,  _
                    ByVal Original_cta_ret_iva As String,  _
                    ByVal Original_por_ret_ica As String,  _
                    ByVal Original_ret_ica As Double,  _
                    ByVal Original_cta_ret_ica As String,  _
                    ByVal Original_total As Double,  _
                    ByVal Original_cta_total As String,  _
                    ByVal Original_estado As String,  _
                    ByVal Original_vmto As Integer,  _
                    ByVal Original_dir_ent As String,  _
                    ByVal Original_ciu_ent As String,  _
                    ByVal Original_o_compra As String,  _
                    ByVal Original_fecha_o As String,  _
                    ByVal Original_cc As String,  _
                    ByVal Original_o_con As String,  _
                    ByVal Original_t1 As String,  _
                    ByVal Original_d1 As String,  _
                    ByVal Original_v1 As Double,  _
                    ByVal Original_cta1 As String,  _
                    ByVal Original_t2 As String,  _
                    ByVal Original_d2 As String,  _
                    ByVal Original_v2 As Double,  _
                    ByVal Original_cta2 As String,  _
                    ByVal Original_t3 As String,  _
                    ByVal Original_d3 As String,  _
                    ByVal Original_v3 As Double,  _
                    ByVal Original_cta3 As String) As Integer
            If (Original_doc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_doc")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_doc,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_num,Long)
            If (Original_tipodoc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_tipodoc")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_tipodoc,String)
            End If
            If (Original_doc_de Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_doc_de")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_doc_de,String)
            End If
            If (Original_nitc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nitc")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_nitc,String)
            End If
            If (Original_nitv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nitv")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_nitv,String)
            End If
            If (Original_usuario Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_usuario")
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_usuario,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_fecha,Date)
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_hora,Date)
            If (Original_doc_afec Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_doc_afec")
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_doc_afec,String)
            End If
            If (Original_afecta Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_afecta")
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_afecta,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_subtotal,Double)
            If (Original_por_desc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_por_desc")
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_por_desc,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_descuento,Double)
            If (Original_cta_desc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cta_desc")
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_cta_desc,String)
            End If
            If (Original_por_ret_f Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_por_ret_f")
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_por_ret_f,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_ret_f,Double)
            If (Original_cta_ret_f Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cta_ret_f")
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_cta_ret_f,String)
            End If
            If (Original_por_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_por_iva")
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_por_iva,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_iva,Double)
            If (Original_cta_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cta_iva")
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_cta_iva,String)
            End If
            If (Original_por_ret_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_por_ret_iva")
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_por_ret_iva,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_ret_iva,Double)
            If (Original_cta_ret_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cta_ret_iva")
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_cta_ret_iva,String)
            End If
            If (Original_por_ret_ica Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_por_ret_ica")
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_por_ret_ica,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_ret_ica,Double)
            If (Original_cta_ret_ica Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cta_ret_ica")
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_cta_ret_ica,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_total,Double)
            If (Original_cta_total Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cta_total")
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_cta_total,String)
            End If
            If (Original_estado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_estado")
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_estado,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_vmto,Integer)
            If (Original_dir_ent Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_dir_ent")
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_dir_ent,String)
            End If
            If (Original_ciu_ent Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ciu_ent")
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_ciu_ent,String)
            End If
            If (Original_o_compra Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_o_compra")
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_o_compra,String)
            End If
            If (Original_fecha_o Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_fecha_o")
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_fecha_o,String)
            End If
            If (Original_cc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cc")
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_cc,String)
            End If
            If (Original_o_con Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_o_con")
            Else
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_o_con,String)
            End If
            If (Original_t1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_t1")
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_t1,String)
            End If
            If (Original_d1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_d1")
            Else
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_d1,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_v1,Double)
            If (Original_cta1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cta1")
            Else
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_cta1,String)
            End If
            If (Original_t2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_t2")
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_t2,String)
            End If
            If (Original_d2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_d2")
            Else
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_d2,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(43).Value = CType(Original_v2,Double)
            If (Original_cta2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cta2")
            Else
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_cta2,String)
            End If
            If (Original_t3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_t3")
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(Original_t3,String)
            End If
            If (Original_d3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_d3")
            Else
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_d3,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(47).Value = CType(Original_v3,Double)
            If (Original_cta3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cta3")
            Else
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_cta3,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal doc As String,  _
                    ByVal num As Long,  _
                    ByVal tipodoc As String,  _
                    ByVal doc_de As String,  _
                    ByVal nitc As String,  _
                    ByVal nitv As String,  _
                    ByVal usuario As String,  _
                    ByVal fecha As Date,  _
                    ByVal hora As Date,  _
                    ByVal descrip As String,  _
                    ByVal doc_afec As String,  _
                    ByVal afecta As String,  _
                    ByVal subtotal As Double,  _
                    ByVal por_desc As String,  _
                    ByVal descuento As Double,  _
                    ByVal cta_desc As String,  _
                    ByVal por_ret_f As String,  _
                    ByVal ret_f As Double,  _
                    ByVal cta_ret_f As String,  _
                    ByVal por_iva As String,  _
                    ByVal iva As Double,  _
                    ByVal cta_iva As String,  _
                    ByVal por_ret_iva As String,  _
                    ByVal ret_iva As Double,  _
                    ByVal cta_ret_iva As String,  _
                    ByVal por_ret_ica As String,  _
                    ByVal ret_ica As Double,  _
                    ByVal cta_ret_ica As String,  _
                    ByVal total As Double,  _
                    ByVal cta_total As String,  _
                    ByVal estado As String,  _
                    ByVal observ As String,  _
                    ByVal vmto As Integer,  _
                    ByVal entregar As String,  _
                    ByVal dir_ent As String,  _
                    ByVal ciu_ent As String,  _
                    ByVal o_compra As String,  _
                    ByVal fecha_o As String,  _
                    ByVal cc As String,  _
                    ByVal o_con As String,  _
                    ByVal t1 As String,  _
                    ByVal d1 As String,  _
                    ByVal v1 As Double,  _
                    ByVal cta1 As String,  _
                    ByVal t2 As String,  _
                    ByVal d2 As String,  _
                    ByVal v2 As Double,  _
                    ByVal cta2 As String,  _
                    ByVal t3 As String,  _
                    ByVal d3 As String,  _
                    ByVal v3 As Double,  _
                    ByVal cta3 As String) As Integer
            If (doc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("doc")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(doc,String)
            End If
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(num,Long)
            If (tipodoc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipodoc")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(tipodoc,String)
            End If
            If (doc_de Is Nothing) Then
                Throw New Global.System.ArgumentNullException("doc_de")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(doc_de,String)
            End If
            If (nitc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nitc")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(nitc,String)
            End If
            If (nitv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nitv")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(nitv,String)
            End If
            If (usuario Is Nothing) Then
                Throw New Global.System.ArgumentNullException("usuario")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(usuario,String)
            End If
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(fecha,Date)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(hora,Date)
            If (descrip Is Nothing) Then
                Throw New Global.System.ArgumentNullException("descrip")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(descrip,String)
            End If
            If (doc_afec Is Nothing) Then
                Throw New Global.System.ArgumentNullException("doc_afec")
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(doc_afec,String)
            End If
            If (afecta Is Nothing) Then
                Throw New Global.System.ArgumentNullException("afecta")
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(afecta,String)
            End If
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(subtotal,Double)
            If (por_desc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("por_desc")
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(por_desc,String)
            End If
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(descuento,Double)
            If (cta_desc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta_desc")
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(cta_desc,String)
            End If
            If (por_ret_f Is Nothing) Then
                Throw New Global.System.ArgumentNullException("por_ret_f")
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(por_ret_f,String)
            End If
            Me.Adapter.InsertCommand.Parameters(17).Value = CType(ret_f,Double)
            If (cta_ret_f Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta_ret_f")
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(cta_ret_f,String)
            End If
            If (por_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("por_iva")
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(por_iva,String)
            End If
            Me.Adapter.InsertCommand.Parameters(20).Value = CType(iva,Double)
            If (cta_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta_iva")
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(cta_iva,String)
            End If
            If (por_ret_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("por_ret_iva")
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(por_ret_iva,String)
            End If
            Me.Adapter.InsertCommand.Parameters(23).Value = CType(ret_iva,Double)
            If (cta_ret_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta_ret_iva")
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(cta_ret_iva,String)
            End If
            If (por_ret_ica Is Nothing) Then
                Throw New Global.System.ArgumentNullException("por_ret_ica")
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(por_ret_ica,String)
            End If
            Me.Adapter.InsertCommand.Parameters(26).Value = CType(ret_ica,Double)
            If (cta_ret_ica Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta_ret_ica")
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(cta_ret_ica,String)
            End If
            Me.Adapter.InsertCommand.Parameters(28).Value = CType(total,Double)
            If (cta_total Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta_total")
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(cta_total,String)
            End If
            If (estado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("estado")
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(estado,String)
            End If
            If (observ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("observ")
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(observ,String)
            End If
            Me.Adapter.InsertCommand.Parameters(32).Value = CType(vmto,Integer)
            If (entregar Is Nothing) Then
                Throw New Global.System.ArgumentNullException("entregar")
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(entregar,String)
            End If
            If (dir_ent Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dir_ent")
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(dir_ent,String)
            End If
            If (ciu_ent Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ciu_ent")
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(ciu_ent,String)
            End If
            If (o_compra Is Nothing) Then
                Throw New Global.System.ArgumentNullException("o_compra")
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(o_compra,String)
            End If
            If (fecha_o Is Nothing) Then
                Throw New Global.System.ArgumentNullException("fecha_o")
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(fecha_o,String)
            End If
            If (cc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cc")
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(cc,String)
            End If
            If (o_con Is Nothing) Then
                Throw New Global.System.ArgumentNullException("o_con")
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(o_con,String)
            End If
            If (t1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("t1")
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(t1,String)
            End If
            If (d1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("d1")
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(d1,String)
            End If
            Me.Adapter.InsertCommand.Parameters(42).Value = CType(v1,Double)
            If (cta1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta1")
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(cta1,String)
            End If
            If (t2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("t2")
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(t2,String)
            End If
            If (d2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("d2")
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(d2,String)
            End If
            Me.Adapter.InsertCommand.Parameters(46).Value = CType(v2,Double)
            If (cta2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta2")
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(cta2,String)
            End If
            If (t3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("t3")
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(t3,String)
            End If
            If (d3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("d3")
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(d3,String)
            End If
            Me.Adapter.InsertCommand.Parameters(50).Value = CType(v3,Double)
            If (cta3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta3")
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(cta3,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal doc As String,  _
                    ByVal num As Long,  _
                    ByVal tipodoc As String,  _
                    ByVal doc_de As String,  _
                    ByVal nitc As String,  _
                    ByVal nitv As String,  _
                    ByVal usuario As String,  _
                    ByVal fecha As Date,  _
                    ByVal hora As Date,  _
                    ByVal descrip As String,  _
                    ByVal doc_afec As String,  _
                    ByVal afecta As String,  _
                    ByVal subtotal As Double,  _
                    ByVal por_desc As String,  _
                    ByVal descuento As Double,  _
                    ByVal cta_desc As String,  _
                    ByVal por_ret_f As String,  _
                    ByVal ret_f As Double,  _
                    ByVal cta_ret_f As String,  _
                    ByVal por_iva As String,  _
                    ByVal iva As Double,  _
                    ByVal cta_iva As String,  _
                    ByVal por_ret_iva As String,  _
                    ByVal ret_iva As Double,  _
                    ByVal cta_ret_iva As String,  _
                    ByVal por_ret_ica As String,  _
                    ByVal ret_ica As Double,  _
                    ByVal cta_ret_ica As String,  _
                    ByVal total As Double,  _
                    ByVal cta_total As String,  _
                    ByVal estado As String,  _
                    ByVal observ As String,  _
                    ByVal vmto As Integer,  _
                    ByVal dir_ent As String,  _
                    ByVal ciu_ent As String,  _
                    ByVal o_compra As String,  _
                    ByVal fecha_o As String,  _
                    ByVal cc As String,  _
                    ByVal o_con As String,  _
                    ByVal t1 As String,  _
                    ByVal d1 As String,  _
                    ByVal v1 As Double,  _
                    ByVal cta1 As String,  _
                    ByVal t2 As String,  _
                    ByVal d2 As String,  _
                    ByVal v2 As Double,  _
                    ByVal cta2 As String,  _
                    ByVal t3 As String,  _
                    ByVal d3 As String,  _
                    ByVal v3 As Double,  _
                    ByVal cta3 As String,  _
                    ByVal entregar As String,  _
                    ByVal Original_doc As String,  _
                    ByVal Original_num As Long,  _
                    ByVal Original_tipodoc As String,  _
                    ByVal Original_doc_de As String,  _
                    ByVal Original_nitc As String,  _
                    ByVal Original_nitv As String,  _
                    ByVal Original_usuario As String,  _
                    ByVal Original_fecha As Date,  _
                    ByVal Original_hora As Date,  _
                    ByVal Original_doc_afec As String,  _
                    ByVal Original_afecta As String,  _
                    ByVal Original_subtotal As Double,  _
                    ByVal Original_por_desc As String,  _
                    ByVal Original_descuento As Double,  _
                    ByVal Original_cta_desc As String,  _
                    ByVal Original_por_ret_f As String,  _
                    ByVal Original_ret_f As Double,  _
                    ByVal Original_cta_ret_f As String,  _
                    ByVal Original_por_iva As String,  _
                    ByVal Original_iva As Double,  _
                    ByVal Original_cta_iva As String,  _
                    ByVal Original_por_ret_iva As String,  _
                    ByVal Original_ret_iva As Double,  _
                    ByVal Original_cta_ret_iva As String,  _
                    ByVal Original_por_ret_ica As String,  _
                    ByVal Original_ret_ica As Double,  _
                    ByVal Original_cta_ret_ica As String,  _
                    ByVal Original_total As Double,  _
                    ByVal Original_cta_total As String,  _
                    ByVal Original_estado As String,  _
                    ByVal Original_vmto As Integer,  _
                    ByVal Original_dir_ent As String,  _
                    ByVal Original_ciu_ent As String,  _
                    ByVal Original_o_compra As String,  _
                    ByVal Original_fecha_o As String,  _
                    ByVal Original_cc As String,  _
                    ByVal Original_o_con As String,  _
                    ByVal Original_t1 As String,  _
                    ByVal Original_d1 As String,  _
                    ByVal Original_v1 As Double,  _
                    ByVal Original_cta1 As String,  _
                    ByVal Original_t2 As String,  _
                    ByVal Original_d2 As String,  _
                    ByVal Original_v2 As Double,  _
                    ByVal Original_cta2 As String,  _
                    ByVal Original_t3 As String,  _
                    ByVal Original_d3 As String,  _
                    ByVal Original_v3 As Double,  _
                    ByVal Original_cta3 As String) As Integer
            If (doc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("doc")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(doc,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(num,Long)
            If (tipodoc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipodoc")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(tipodoc,String)
            End If
            If (doc_de Is Nothing) Then
                Throw New Global.System.ArgumentNullException("doc_de")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(doc_de,String)
            End If
            If (nitc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nitc")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(nitc,String)
            End If
            If (nitv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nitv")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(nitv,String)
            End If
            If (usuario Is Nothing) Then
                Throw New Global.System.ArgumentNullException("usuario")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(usuario,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(fecha,Date)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(hora,Date)
            If (descrip Is Nothing) Then
                Throw New Global.System.ArgumentNullException("descrip")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(descrip,String)
            End If
            If (doc_afec Is Nothing) Then
                Throw New Global.System.ArgumentNullException("doc_afec")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(doc_afec,String)
            End If
            If (afecta Is Nothing) Then
                Throw New Global.System.ArgumentNullException("afecta")
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(afecta,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(subtotal,Double)
            If (por_desc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("por_desc")
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(por_desc,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(descuento,Double)
            If (cta_desc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta_desc")
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(cta_desc,String)
            End If
            If (por_ret_f Is Nothing) Then
                Throw New Global.System.ArgumentNullException("por_ret_f")
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(por_ret_f,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(ret_f,Double)
            If (cta_ret_f Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta_ret_f")
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(cta_ret_f,String)
            End If
            If (por_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("por_iva")
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(por_iva,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(iva,Double)
            If (cta_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta_iva")
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(cta_iva,String)
            End If
            If (por_ret_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("por_ret_iva")
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(por_ret_iva,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(ret_iva,Double)
            If (cta_ret_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta_ret_iva")
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(cta_ret_iva,String)
            End If
            If (por_ret_ica Is Nothing) Then
                Throw New Global.System.ArgumentNullException("por_ret_ica")
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(por_ret_ica,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(26).Value = CType(ret_ica,Double)
            If (cta_ret_ica Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta_ret_ica")
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(cta_ret_ica,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(28).Value = CType(total,Double)
            If (cta_total Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta_total")
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(cta_total,String)
            End If
            If (estado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("estado")
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(estado,String)
            End If
            If (observ Is Nothing) Then
                Throw New Global.System.ArgumentNullException("observ")
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(observ,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(32).Value = CType(vmto,Integer)
            If (dir_ent Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dir_ent")
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(dir_ent,String)
            End If
            If (ciu_ent Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ciu_ent")
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(ciu_ent,String)
            End If
            If (o_compra Is Nothing) Then
                Throw New Global.System.ArgumentNullException("o_compra")
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(o_compra,String)
            End If
            If (fecha_o Is Nothing) Then
                Throw New Global.System.ArgumentNullException("fecha_o")
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(fecha_o,String)
            End If
            If (cc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cc")
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(cc,String)
            End If
            If (o_con Is Nothing) Then
                Throw New Global.System.ArgumentNullException("o_con")
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(o_con,String)
            End If
            If (t1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("t1")
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(t1,String)
            End If
            If (d1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("d1")
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(d1,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(41).Value = CType(v1,Double)
            If (cta1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta1")
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(cta1,String)
            End If
            If (t2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("t2")
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(t2,String)
            End If
            If (d2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("d2")
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(d2,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(45).Value = CType(v2,Double)
            If (cta2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta2")
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(cta2,String)
            End If
            If (t3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("t3")
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(t3,String)
            End If
            If (d3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("d3")
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(d3,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(49).Value = CType(v3,Double)
            If (cta3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta3")
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(cta3,String)
            End If
            If (entregar Is Nothing) Then
                Throw New Global.System.ArgumentNullException("entregar")
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(entregar,String)
            End If
            If (Original_doc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_doc")
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_doc,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_num,Long)
            If (Original_tipodoc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_tipodoc")
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_tipodoc,String)
            End If
            If (Original_doc_de Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_doc_de")
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_doc_de,String)
            End If
            If (Original_nitc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nitc")
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_nitc,String)
            End If
            If (Original_nitv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nitv")
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_nitv,String)
            End If
            If (Original_usuario Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_usuario")
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_usuario,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_fecha,Date)
            Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_hora,Date)
            If (Original_doc_afec Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_doc_afec")
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_doc_afec,String)
            End If
            If (Original_afecta Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_afecta")
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_afecta,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_subtotal,Double)
            If (Original_por_desc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_por_desc")
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_por_desc,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_descuento,Double)
            If (Original_cta_desc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cta_desc")
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_cta_desc,String)
            End If
            If (Original_por_ret_f Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_por_ret_f")
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_por_ret_f,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_ret_f,Double)
            If (Original_cta_ret_f Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cta_ret_f")
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_cta_ret_f,String)
            End If
            If (Original_por_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_por_iva")
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_por_iva,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_iva,Double)
            If (Original_cta_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cta_iva")
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_cta_iva,String)
            End If
            If (Original_por_ret_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_por_ret_iva")
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_por_ret_iva,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_ret_iva,Double)
            If (Original_cta_ret_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cta_ret_iva")
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_cta_ret_iva,String)
            End If
            If (Original_por_ret_ica Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_por_ret_ica")
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_por_ret_ica,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_ret_ica,Double)
            If (Original_cta_ret_ica Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cta_ret_ica")
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_cta_ret_ica,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_total,Double)
            If (Original_cta_total Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cta_total")
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_cta_total,String)
            End If
            If (Original_estado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_estado")
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_estado,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_vmto,Integer)
            If (Original_dir_ent Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_dir_ent")
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_dir_ent,String)
            End If
            If (Original_ciu_ent Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ciu_ent")
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_ciu_ent,String)
            End If
            If (Original_o_compra Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_o_compra")
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_o_compra,String)
            End If
            If (Original_fecha_o Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_fecha_o")
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_fecha_o,String)
            End If
            If (Original_cc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cc")
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_cc,String)
            End If
            If (Original_o_con Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_o_con")
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_o_con,String)
            End If
            If (Original_t1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_t1")
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Original_t1,String)
            End If
            If (Original_d1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_d1")
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_d1,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(91).Value = CType(Original_v1,Double)
            If (Original_cta1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cta1")
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(Original_cta1,String)
            End If
            If (Original_t2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_t2")
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(Original_t2,String)
            End If
            If (Original_d2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_d2")
            Else
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(Original_d2,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(95).Value = CType(Original_v2,Double)
            If (Original_cta2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cta2")
            Else
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(Original_cta2,String)
            End If
            If (Original_t3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_t3")
            Else
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(Original_t3,String)
            End If
            If (Original_d3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_d3")
            Else
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(Original_d3,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(99).Value = CType(Original_v3,Double)
            If (Original_cta3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cta3")
            Else
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(Original_cta3,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal num As Long,  _
                    ByVal tipodoc As String,  _
                    ByVal doc_de As String,  _
                    ByVal nitc As String,  _
                    ByVal nitv As String,  _
                    ByVal usuario As String,  _
                    ByVal fecha As Date,  _
                    ByVal hora As Date,  _
                    ByVal descrip As String,  _
                    ByVal doc_afec As String,  _
                    ByVal afecta As String,  _
                    ByVal subtotal As Double,  _
                    ByVal por_desc As String,  _
                    ByVal descuento As Double,  _
                    ByVal cta_desc As String,  _
                    ByVal por_ret_f As String,  _
                    ByVal ret_f As Double,  _
                    ByVal cta_ret_f As String,  _
                    ByVal por_iva As String,  _
                    ByVal iva As Double,  _
                    ByVal cta_iva As String,  _
                    ByVal por_ret_iva As String,  _
                    ByVal ret_iva As Double,  _
                    ByVal cta_ret_iva As String,  _
                    ByVal por_ret_ica As String,  _
                    ByVal ret_ica As Double,  _
                    ByVal cta_ret_ica As String,  _
                    ByVal total As Double,  _
                    ByVal cta_total As String,  _
                    ByVal estado As String,  _
                    ByVal observ As String,  _
                    ByVal vmto As Integer,  _
                    ByVal dir_ent As String,  _
                    ByVal ciu_ent As String,  _
                    ByVal o_compra As String,  _
                    ByVal fecha_o As String,  _
                    ByVal cc As String,  _
                    ByVal o_con As String,  _
                    ByVal t1 As String,  _
                    ByVal d1 As String,  _
                    ByVal v1 As Double,  _
                    ByVal cta1 As String,  _
                    ByVal t2 As String,  _
                    ByVal d2 As String,  _
                    ByVal v2 As Double,  _
                    ByVal cta2 As String,  _
                    ByVal t3 As String,  _
                    ByVal d3 As String,  _
                    ByVal v3 As Double,  _
                    ByVal cta3 As String,  _
                    ByVal entregar As String,  _
                    ByVal Original_doc As String,  _
                    ByVal Original_num As Long,  _
                    ByVal Original_tipodoc As String,  _
                    ByVal Original_doc_de As String,  _
                    ByVal Original_nitc As String,  _
                    ByVal Original_nitv As String,  _
                    ByVal Original_usuario As String,  _
                    ByVal Original_fecha As Date,  _
                    ByVal Original_hora As Date,  _
                    ByVal Original_doc_afec As String,  _
                    ByVal Original_afecta As String,  _
                    ByVal Original_subtotal As Double,  _
                    ByVal Original_por_desc As String,  _
                    ByVal Original_descuento As Double,  _
                    ByVal Original_cta_desc As String,  _
                    ByVal Original_por_ret_f As String,  _
                    ByVal Original_ret_f As Double,  _
                    ByVal Original_cta_ret_f As String,  _
                    ByVal Original_por_iva As String,  _
                    ByVal Original_iva As Double,  _
                    ByVal Original_cta_iva As String,  _
                    ByVal Original_por_ret_iva As String,  _
                    ByVal Original_ret_iva As Double,  _
                    ByVal Original_cta_ret_iva As String,  _
                    ByVal Original_por_ret_ica As String,  _
                    ByVal Original_ret_ica As Double,  _
                    ByVal Original_cta_ret_ica As String,  _
                    ByVal Original_total As Double,  _
                    ByVal Original_cta_total As String,  _
                    ByVal Original_estado As String,  _
                    ByVal Original_vmto As Integer,  _
                    ByVal Original_dir_ent As String,  _
                    ByVal Original_ciu_ent As String,  _
                    ByVal Original_o_compra As String,  _
                    ByVal Original_fecha_o As String,  _
                    ByVal Original_cc As String,  _
                    ByVal Original_o_con As String,  _
                    ByVal Original_t1 As String,  _
                    ByVal Original_d1 As String,  _
                    ByVal Original_v1 As Double,  _
                    ByVal Original_cta1 As String,  _
                    ByVal Original_t2 As String,  _
                    ByVal Original_d2 As String,  _
                    ByVal Original_v2 As Double,  _
                    ByVal Original_cta2 As String,  _
                    ByVal Original_t3 As String,  _
                    ByVal Original_d3 As String,  _
                    ByVal Original_v3 As Double,  _
                    ByVal Original_cta3 As String) As Integer
            Return Me.Update(Original_doc, num, tipodoc, doc_de, nitc, nitv, usuario, fecha, hora, descrip, doc_afec, afecta, subtotal, por_desc, descuento, cta_desc, por_ret_f, ret_f, cta_ret_f, por_iva, iva, cta_iva, por_ret_iva, ret_iva, cta_ret_iva, por_ret_ica, ret_ica, cta_ret_ica, total, cta_total, estado, observ, vmto, dir_ent, ciu_ent, o_compra, fecha_o, cc, o_con, t1, d1, v1, cta1, t2, d2, v2, cta2, t3, d3, v3, cta3, entregar, Original_doc, Original_num, Original_tipodoc, Original_doc_de, Original_nitc, Original_nitv, Original_usuario, Original_fecha, Original_hora, Original_doc_afec, Original_afecta, Original_subtotal, Original_por_desc, Original_descuento, Original_cta_desc, Original_por_ret_f, Original_ret_f, Original_cta_ret_f, Original_por_iva, Original_iva, Original_cta_iva, Original_por_ret_iva, Original_ret_iva, Original_cta_ret_iva, Original_por_ret_ica, Original_ret_ica, Original_cta_ret_ica, Original_total, Original_cta_total, Original_estado, Original_vmto, Original_dir_ent, Original_ciu_ent, Original_o_compra, Original_fecha_o, Original_cc, Original_o_con, Original_t1, Original_d1, Original_v1, Original_cta1, Original_t2, Original_d2, Original_v2, Original_cta2, Original_t3, Original_d3, Original_v3, Original_cta3)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class facpagos01TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "facpagos01"
            tableMapping.ColumnMappings.Add("doc", "doc")
            tableMapping.ColumnMappings.Add("tipo", "tipo")
            tableMapping.ColumnMappings.Add("descrip", "descrip")
            tableMapping.ColumnMappings.Add("tt", "tt")
            tableMapping.ColumnMappings.Add("banco", "banco")
            tableMapping.ColumnMappings.Add("numero", "numero")
            tableMapping.ColumnMappings.Add("valor", "valor")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `saeosteomaterial2012`.`facpagos01` (`doc`, `tipo`, `descrip`, `tt`, "& _ 
                "`banco`, `numero`, `valor`) VALUES (@doc, @tipo, @descrip, @tt, @banco, @numero,"& _ 
                " @valor)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@doc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "doc"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipo"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@descrip"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "descrip"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tt"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tt"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@banco"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "banco"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@numero"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "numero"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@valor"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "valor"
            Me._adapter.InsertCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection
            Me._connection.ConnectionString = Global.SAE.My.MySettings.Default.saeosteomaterial2012ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `doc`, `tipo`, `descrip`, `tt`, `banco`, `numero`, `valor` FROM `saeosteom"& _ 
                "aterial2012`.`facpagos01`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As saeosteomaterial2012DataSet.facpagos01DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As saeosteomaterial2012DataSet.facpagos01DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As saeosteomaterial2012DataSet.facpagos01DataTable = New saeosteomaterial2012DataSet.facpagos01DataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As saeosteomaterial2012DataSet.facpagos01DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As saeosteomaterial2012DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "facpagos01")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal doc As String, ByVal tipo As String, ByVal descrip As String, ByVal tt As String, ByVal banco As String, ByVal numero As String, ByVal valor As Double) As Integer
            If (doc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("doc")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(doc,String)
            End If
            If (tipo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipo")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(tipo,String)
            End If
            If (descrip Is Nothing) Then
                Throw New Global.System.ArgumentNullException("descrip")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(descrip,String)
            End If
            If (tt Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tt")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(tt,String)
            End If
            If (banco Is Nothing) Then
                Throw New Global.System.ArgumentNullException("banco")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(banco,String)
            End If
            If (numero Is Nothing) Then
                Throw New Global.System.ArgumentNullException("numero")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(numero,String)
            End If
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(valor,Double)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class cobdpenTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "cobdpen"
            tableMapping.ColumnMappings.Add("doc", "doc")
            tableMapping.ColumnMappings.Add("tipo", "tipo")
            tableMapping.ColumnMappings.Add("num", "num")
            tableMapping.ColumnMappings.Add("descrip", "descrip")
            tableMapping.ColumnMappings.Add("tipafec", "tipafec")
            tableMapping.ColumnMappings.Add("clasaju", "clasaju")
            tableMapping.ColumnMappings.Add("nitc", "nitc")
            tableMapping.ColumnMappings.Add("nomnit", "nomnit")
            tableMapping.ColumnMappings.Add("nitcod", "nitcod")
            tableMapping.ColumnMappings.Add("nitv", "nitv")
            tableMapping.ColumnMappings.Add("fecha", "fecha")
            tableMapping.ColumnMappings.Add("vmto", "vmto")
            tableMapping.ColumnMappings.Add("concepto", "concepto")
            tableMapping.ColumnMappings.Add("subtotal", "subtotal")
            tableMapping.ColumnMappings.Add("descto", "descto")
            tableMapping.ColumnMappings.Add("ret", "ret")
            tableMapping.ColumnMappings.Add("iva", "iva")
            tableMapping.ColumnMappings.Add("v_viva", "v_viva")
            tableMapping.ColumnMappings.Add("total", "total")
            tableMapping.ColumnMappings.Add("ctasubtotal", "ctasubtotal")
            tableMapping.ColumnMappings.Add("ctaret", "ctaret")
            tableMapping.ColumnMappings.Add("ctaiva", "ctaiva")
            tableMapping.ColumnMappings.Add("ctatotal", "ctatotal")
            tableMapping.ColumnMappings.Add("ccosto", "ccosto")
            tableMapping.ColumnMappings.Add("otroimp", "otroimp")
            tableMapping.ColumnMappings.Add("retiva", "retiva")
            tableMapping.ColumnMappings.Add("ctaretiva", "ctaretiva")
            tableMapping.ColumnMappings.Add("retica", "retica")
            tableMapping.ColumnMappings.Add("ctaretica", "ctaretica")
            tableMapping.ColumnMappings.Add("pagado", "pagado")
            tableMapping.ColumnMappings.Add("rcpos", "rcpos")
            tableMapping.ColumnMappings.Add("fechpos", "fechpos")
            tableMapping.ColumnMappings.Add("vpos", "vpos")
            tableMapping.ColumnMappings.Add("tasa", "tasa")
            tableMapping.ColumnMappings.Add("moneda", "moneda")
            tableMapping.ColumnMappings.Add("monloex", "monloex")
            tableMapping.ColumnMappings.Add("estado", "estado")
            tableMapping.ColumnMappings.Add("salmov", "salmov")
            tableMapping.ColumnMappings.Add("pagare", "pagare")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `saeosteomaterial2012`.`cobdpen` WHERE ((`doc` = @Original_doc) AND ("& _ 
                "`tipo` = @Original_tipo) AND (`num` = @Original_num) AND (`descrip` = @Original_"& _ 
                "descrip) AND (`tipafec` = @Original_tipafec) AND (`clasaju` = @Original_clasaju)"& _ 
                " AND (`nitc` = @Original_nitc) AND (`nomnit` = @Original_nomnit) AND (`nitcod` ="& _ 
                " @Original_nitcod) AND (`nitv` = @Original_nitv) AND (`fecha` = @Original_fecha)"& _ 
                " AND (`vmto` = @Original_vmto) AND (`concepto` = @Original_concepto) AND (`subto"& _ 
                "tal` = @Original_subtotal) AND (`descto` = @Original_descto) AND (`ret` = @Origi"& _ 
                "nal_ret) AND (`iva` = @Original_iva) AND (`v_viva` = @Original_v_viva) AND (`tot"& _ 
                "al` = @Original_total) AND (`ctasubtotal` = @Original_ctasubtotal) AND (`ctaret`"& _ 
                " = @Original_ctaret) AND (`ctaiva` = @Original_ctaiva) AND (`ctatotal` = @Origin"& _ 
                "al_ctatotal) AND (`ccosto` = @Original_ccosto) AND (`otroimp` = @Original_otroim"& _ 
                "p) AND (`retiva` = @Original_retiva) AND (`ctaretiva` = @Original_ctaretiva) AND"& _ 
                " (`retica` = @Original_retica) AND (`ctaretica` = @Original_ctaretica) AND (`pag"& _ 
                "ado` = @Original_pagado) AND (`rcpos` = @Original_rcpos) AND (`fechpos` = @Origi"& _ 
                "nal_fechpos) AND (`vpos` = @Original_vpos) AND (`tasa` = @Original_tasa) AND (`m"& _ 
                "oneda` = @Original_moneda) AND (`monloex` = @Original_monloex) AND (`estado` = @"& _ 
                "Original_estado) AND (`salmov` = @Original_salmov) AND (`pagare` = @Original_pag"& _ 
                "are))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_doc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "doc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tipo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_num"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int64
            param.IsNullable = true
            param.SourceColumn = "num"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_descrip"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "descrip"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tipafec"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipafec"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_clasaju"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "clasaju"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nitc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nomnit"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nomnit"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nitcod"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitcod"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nitv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitv"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_fecha"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fecha"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_vmto"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "vmto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_concepto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "concepto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_subtotal"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "subtotal"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_descto"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "descto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ret"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "ret"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_iva"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "iva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_v_viva"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "v_viva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_total"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "total"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ctasubtotal"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctasubtotal"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ctaret"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaret"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ctaiva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaiva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ctatotal"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctatotal"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ccosto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ccosto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_otroimp"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "otroimp"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_retiva"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "retiva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ctaretiva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaretiva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_retica"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "retica"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ctaretica"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaretica"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_pagado"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "pagado"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_rcpos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "rcpos"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_fechpos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "fechpos"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_vpos"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "vpos"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tasa"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "tasa"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_moneda"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "moneda"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_monloex"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "monloex"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_estado"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_salmov"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "salmov"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_pagare"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "pagare"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `saeosteomaterial2012`.`cobdpen` (`doc`, `tipo`, `num`, `descrip`, `t"& _ 
                "ipafec`, `clasaju`, `nitc`, `nomnit`, `nitcod`, `nitv`, `fecha`, `vmto`, `concep"& _ 
                "to`, `subtotal`, `descto`, `ret`, `iva`, `v_viva`, `total`, `ctasubtotal`, `ctar"& _ 
                "et`, `ctaiva`, `ctatotal`, `ccosto`, `otroimp`, `retiva`, `ctaretiva`, `retica`,"& _ 
                " `ctaretica`, `pagado`, `rcpos`, `fechpos`, `vpos`, `tasa`, `moneda`, `monloex`,"& _ 
                " `estado`, `salmov`, `pagare`) VALUES (@doc, @tipo, @num, @descrip, @tipafec, @c"& _ 
                "lasaju, @nitc, @nomnit, @nitcod, @nitv, @fecha, @vmto, @concepto, @subtotal, @de"& _ 
                "scto, @ret, @iva, @v_viva, @total, @ctasubtotal, @ctaret, @ctaiva, @ctatotal, @c"& _ 
                "costo, @otroimp, @retiva, @ctaretiva, @retica, @ctaretica, @pagado, @rcpos, @fec"& _ 
                "hpos, @vpos, @tasa, @moneda, @monloex, @estado, @salmov, @pagare)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@doc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "doc"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipo"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@num"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int64
            param.IsNullable = true
            param.SourceColumn = "num"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@descrip"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "descrip"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipafec"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipafec"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@clasaju"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "clasaju"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nitc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitc"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nomnit"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nomnit"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nitcod"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitcod"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nitv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitv"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@fecha"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fecha"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@vmto"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "vmto"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@concepto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "concepto"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@subtotal"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "subtotal"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@descto"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "descto"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ret"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "ret"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@iva"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "iva"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@v_viva"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "v_viva"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@total"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "total"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ctasubtotal"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctasubtotal"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ctaret"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaret"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ctaiva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaiva"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ctatotal"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctatotal"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ccosto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ccosto"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@otroimp"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "otroimp"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@retiva"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "retiva"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ctaretiva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaretiva"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@retica"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "retica"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ctaretica"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaretica"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@pagado"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "pagado"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@rcpos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "rcpos"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@fechpos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "fechpos"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@vpos"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "vpos"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tasa"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "tasa"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@moneda"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "moneda"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@monloex"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "monloex"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@estado"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@salmov"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "salmov"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@pagare"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "pagare"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `saeosteomaterial2012`.`cobdpen` SET `doc` = @doc, `tipo` = @tipo, `num` ="& _ 
                " @num, `descrip` = @descrip, `tipafec` = @tipafec, `clasaju` = @clasaju, `nitc` "& _ 
                "= @nitc, `nomnit` = @nomnit, `nitcod` = @nitcod, `nitv` = @nitv, `fecha` = @fech"& _ 
                "a, `vmto` = @vmto, `concepto` = @concepto, `subtotal` = @subtotal, `descto` = @d"& _ 
                "escto, `ret` = @ret, `iva` = @iva, `v_viva` = @v_viva, `total` = @total, `ctasub"& _ 
                "total` = @ctasubtotal, `ctaret` = @ctaret, `ctaiva` = @ctaiva, `ctatotal` = @cta"& _ 
                "total, `ccosto` = @ccosto, `otroimp` = @otroimp, `retiva` = @retiva, `ctaretiva`"& _ 
                " = @ctaretiva, `retica` = @retica, `ctaretica` = @ctaretica, `pagado` = @pagado,"& _ 
                " `rcpos` = @rcpos, `fechpos` = @fechpos, `vpos` = @vpos, `tasa` = @tasa, `moneda"& _ 
                "` = @moneda, `monloex` = @monloex, `estado` = @estado, `salmov` = @salmov, `paga"& _ 
                "re` = @pagare WHERE ((`doc` = @Original_doc) AND (`tipo` = @Original_tipo) AND ("& _ 
                "`num` = @Original_num) AND (`descrip` = @Original_descrip) AND (`tipafec` = @Ori"& _ 
                "ginal_tipafec) AND (`clasaju` = @Original_clasaju) AND (`nitc` = @Original_nitc)"& _ 
                " AND (`nomnit` = @Original_nomnit) AND (`nitcod` = @Original_nitcod) AND (`nitv`"& _ 
                " = @Original_nitv) AND (`fecha` = @Original_fecha) AND (`vmto` = @Original_vmto)"& _ 
                " AND (`concepto` = @Original_concepto) AND (`subtotal` = @Original_subtotal) AND"& _ 
                " (`descto` = @Original_descto) AND (`ret` = @Original_ret) AND (`iva` = @Origina"& _ 
                "l_iva) AND (`v_viva` = @Original_v_viva) AND (`total` = @Original_total) AND (`c"& _ 
                "tasubtotal` = @Original_ctasubtotal) AND (`ctaret` = @Original_ctaret) AND (`cta"& _ 
                "iva` = @Original_ctaiva) AND (`ctatotal` = @Original_ctatotal) AND (`ccosto` = @"& _ 
                "Original_ccosto) AND (`otroimp` = @Original_otroimp) AND (`retiva` = @Original_r"& _ 
                "etiva) AND (`ctaretiva` = @Original_ctaretiva) AND (`retica` = @Original_retica)"& _ 
                " AND (`ctaretica` = @Original_ctaretica) AND (`pagado` = @Original_pagado) AND ("& _ 
                "`rcpos` = @Original_rcpos) AND (`fechpos` = @Original_fechpos) AND (`vpos` = @Or"& _ 
                "iginal_vpos) AND (`tasa` = @Original_tasa) AND (`moneda` = @Original_moneda) AND"& _ 
                " (`monloex` = @Original_monloex) AND (`estado` = @Original_estado) AND (`salmov`"& _ 
                " = @Original_salmov) AND (`pagare` = @Original_pagare))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@doc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "doc"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipo"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@num"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int64
            param.IsNullable = true
            param.SourceColumn = "num"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@descrip"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "descrip"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipafec"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipafec"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@clasaju"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "clasaju"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nitc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitc"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nomnit"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nomnit"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nitcod"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitcod"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nitv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitv"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@fecha"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fecha"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@vmto"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "vmto"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@concepto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "concepto"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@subtotal"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "subtotal"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@descto"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "descto"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ret"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "ret"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@iva"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "iva"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@v_viva"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "v_viva"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@total"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "total"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ctasubtotal"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctasubtotal"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ctaret"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaret"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ctaiva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaiva"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ctatotal"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctatotal"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ccosto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ccosto"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@otroimp"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "otroimp"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@retiva"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "retiva"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ctaretiva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaretiva"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@retica"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "retica"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ctaretica"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaretica"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@pagado"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "pagado"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@rcpos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "rcpos"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@fechpos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "fechpos"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@vpos"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "vpos"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tasa"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "tasa"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@moneda"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "moneda"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@monloex"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "monloex"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@estado"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@salmov"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "salmov"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@pagare"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "pagare"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_doc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "doc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tipo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_num"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int64
            param.IsNullable = true
            param.SourceColumn = "num"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_descrip"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "descrip"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tipafec"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipafec"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_clasaju"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "clasaju"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nitc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nomnit"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nomnit"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nitcod"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitcod"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nitv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitv"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_fecha"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fecha"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_vmto"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "vmto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_concepto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "concepto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_subtotal"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "subtotal"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_descto"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "descto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ret"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "ret"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_iva"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "iva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_v_viva"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "v_viva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_total"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "total"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ctasubtotal"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctasubtotal"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ctaret"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaret"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ctaiva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaiva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ctatotal"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctatotal"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ccosto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ccosto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_otroimp"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "otroimp"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_retiva"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "retiva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ctaretiva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaretiva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_retica"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "retica"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ctaretica"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaretica"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_pagado"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "pagado"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_rcpos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "rcpos"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_fechpos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "fechpos"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_vpos"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "vpos"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tasa"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "tasa"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_moneda"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "moneda"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_monloex"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "monloex"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_estado"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_salmov"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "salmov"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_pagare"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "pagare"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection
            Me._connection.ConnectionString = Global.SAE.My.MySettings.Default.saeosteomaterial2012ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `doc`, `tipo`, `num`, `descrip`, `tipafec`, `clasaju`, `nitc`, `nomnit`, `"& _ 
                "nitcod`, `nitv`, `fecha`, `vmto`, `concepto`, `subtotal`, `descto`, `ret`, `iva`"& _ 
                ", `v_viva`, `total`, `ctasubtotal`, `ctaret`, `ctaiva`, `ctatotal`, `ccosto`, `o"& _ 
                "troimp`, `retiva`, `ctaretiva`, `retica`, `ctaretica`, `pagado`, `rcpos`, `fechp"& _ 
                "os`, `vpos`, `tasa`, `moneda`, `monloex`, `estado`, `salmov`, `pagare` FROM `sae"& _ 
                "osteomaterial2012`.`cobdpen`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As saeosteomaterial2012DataSet.cobdpenDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As saeosteomaterial2012DataSet.cobdpenDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As saeosteomaterial2012DataSet.cobdpenDataTable = New saeosteomaterial2012DataSet.cobdpenDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As saeosteomaterial2012DataSet.cobdpenDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As saeosteomaterial2012DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "cobdpen")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_doc As String,  _
                    ByVal Original_tipo As String,  _
                    ByVal Original_num As Long,  _
                    ByVal Original_descrip As String,  _
                    ByVal Original_tipafec As String,  _
                    ByVal Original_clasaju As String,  _
                    ByVal Original_nitc As String,  _
                    ByVal Original_nomnit As String,  _
                    ByVal Original_nitcod As String,  _
                    ByVal Original_nitv As String,  _
                    ByVal Original_fecha As Date,  _
                    ByVal Original_vmto As Integer,  _
                    ByVal Original_concepto As String,  _
                    ByVal Original_subtotal As Double,  _
                    ByVal Original_descto As Double,  _
                    ByVal Original_ret As Double,  _
                    ByVal Original_iva As String,  _
                    ByVal Original_v_viva As Double,  _
                    ByVal Original_total As Double,  _
                    ByVal Original_ctasubtotal As String,  _
                    ByVal Original_ctaret As String,  _
                    ByVal Original_ctaiva As String,  _
                    ByVal Original_ctatotal As String,  _
                    ByVal Original_ccosto As String,  _
                    ByVal Original_otroimp As String,  _
                    ByVal Original_retiva As Double,  _
                    ByVal Original_ctaretiva As String,  _
                    ByVal Original_retica As Double,  _
                    ByVal Original_ctaretica As String,  _
                    ByVal Original_pagado As Double,  _
                    ByVal Original_rcpos As String,  _
                    ByVal Original_fechpos As String,  _
                    ByVal Original_vpos As Double,  _
                    ByVal Original_tasa As Double,  _
                    ByVal Original_moneda As String,  _
                    ByVal Original_monloex As String,  _
                    ByVal Original_estado As String,  _
                    ByVal Original_salmov As String,  _
                    ByVal Original_pagare As String) As Integer
            If (Original_doc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_doc")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_doc,String)
            End If
            If (Original_tipo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_tipo")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_tipo,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_num,Long)
            If (Original_descrip Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_descrip")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_descrip,String)
            End If
            If (Original_tipafec Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_tipafec")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_tipafec,String)
            End If
            If (Original_clasaju Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_clasaju")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_clasaju,String)
            End If
            If (Original_nitc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nitc")
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_nitc,String)
            End If
            If (Original_nomnit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nomnit")
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_nomnit,String)
            End If
            If (Original_nitcod Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nitcod")
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_nitcod,String)
            End If
            If (Original_nitv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nitv")
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_nitv,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_fecha,Date)
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_vmto,Integer)
            If (Original_concepto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_concepto")
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_concepto,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_subtotal,Double)
            Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_descto,Double)
            Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_ret,Double)
            If (Original_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_iva")
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_iva,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_v_viva,Double)
            Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_total,Double)
            If (Original_ctasubtotal Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ctasubtotal")
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_ctasubtotal,String)
            End If
            If (Original_ctaret Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ctaret")
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_ctaret,String)
            End If
            If (Original_ctaiva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ctaiva")
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_ctaiva,String)
            End If
            If (Original_ctatotal Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ctatotal")
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_ctatotal,String)
            End If
            If (Original_ccosto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ccosto")
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_ccosto,String)
            End If
            If (Original_otroimp Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_otroimp")
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_otroimp,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_retiva,Double)
            If (Original_ctaretiva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ctaretiva")
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_ctaretiva,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_retica,Double)
            If (Original_ctaretica Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ctaretica")
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_ctaretica,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_pagado,Double)
            If (Original_rcpos Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_rcpos")
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_rcpos,String)
            End If
            If (Original_fechpos Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_fechpos")
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_fechpos,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_vpos,Double)
            Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_tasa,Double)
            If (Original_moneda Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_moneda")
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_moneda,String)
            End If
            If (Original_monloex Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_monloex")
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_monloex,String)
            End If
            If (Original_estado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_estado")
            Else
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_estado,String)
            End If
            If (Original_salmov Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_salmov")
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_salmov,String)
            End If
            If (Original_pagare Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_pagare")
            Else
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_pagare,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal doc As String,  _
                    ByVal tipo As String,  _
                    ByVal num As Long,  _
                    ByVal descrip As String,  _
                    ByVal tipafec As String,  _
                    ByVal clasaju As String,  _
                    ByVal nitc As String,  _
                    ByVal nomnit As String,  _
                    ByVal nitcod As String,  _
                    ByVal nitv As String,  _
                    ByVal fecha As Date,  _
                    ByVal vmto As Integer,  _
                    ByVal concepto As String,  _
                    ByVal subtotal As Double,  _
                    ByVal descto As Double,  _
                    ByVal ret As Double,  _
                    ByVal iva As String,  _
                    ByVal v_viva As Double,  _
                    ByVal total As Double,  _
                    ByVal ctasubtotal As String,  _
                    ByVal ctaret As String,  _
                    ByVal ctaiva As String,  _
                    ByVal ctatotal As String,  _
                    ByVal ccosto As String,  _
                    ByVal otroimp As String,  _
                    ByVal retiva As Double,  _
                    ByVal ctaretiva As String,  _
                    ByVal retica As Double,  _
                    ByVal ctaretica As String,  _
                    ByVal pagado As Double,  _
                    ByVal rcpos As String,  _
                    ByVal fechpos As String,  _
                    ByVal vpos As Double,  _
                    ByVal tasa As Double,  _
                    ByVal moneda As String,  _
                    ByVal monloex As String,  _
                    ByVal estado As String,  _
                    ByVal salmov As String,  _
                    ByVal pagare As String) As Integer
            If (doc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("doc")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(doc,String)
            End If
            If (tipo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipo")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(tipo,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(num,Long)
            If (descrip Is Nothing) Then
                Throw New Global.System.ArgumentNullException("descrip")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(descrip,String)
            End If
            If (tipafec Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipafec")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(tipafec,String)
            End If
            If (clasaju Is Nothing) Then
                Throw New Global.System.ArgumentNullException("clasaju")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(clasaju,String)
            End If
            If (nitc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nitc")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(nitc,String)
            End If
            If (nomnit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nomnit")
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(nomnit,String)
            End If
            If (nitcod Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nitcod")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(nitcod,String)
            End If
            If (nitv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nitv")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(nitv,String)
            End If
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(fecha,Date)
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(vmto,Integer)
            If (concepto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("concepto")
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(concepto,String)
            End If
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(subtotal,Double)
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(descto,Double)
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(ret,Double)
            If (iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("iva")
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(iva,String)
            End If
            Me.Adapter.InsertCommand.Parameters(17).Value = CType(v_viva,Double)
            Me.Adapter.InsertCommand.Parameters(18).Value = CType(total,Double)
            If (ctasubtotal Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctasubtotal")
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(ctasubtotal,String)
            End If
            If (ctaret Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctaret")
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(ctaret,String)
            End If
            If (ctaiva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctaiva")
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(ctaiva,String)
            End If
            If (ctatotal Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctatotal")
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(ctatotal,String)
            End If
            If (ccosto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ccosto")
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(ccosto,String)
            End If
            If (otroimp Is Nothing) Then
                Throw New Global.System.ArgumentNullException("otroimp")
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(otroimp,String)
            End If
            Me.Adapter.InsertCommand.Parameters(25).Value = CType(retiva,Double)
            If (ctaretiva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctaretiva")
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(ctaretiva,String)
            End If
            Me.Adapter.InsertCommand.Parameters(27).Value = CType(retica,Double)
            If (ctaretica Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctaretica")
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(ctaretica,String)
            End If
            Me.Adapter.InsertCommand.Parameters(29).Value = CType(pagado,Double)
            If (rcpos Is Nothing) Then
                Throw New Global.System.ArgumentNullException("rcpos")
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(rcpos,String)
            End If
            If (fechpos Is Nothing) Then
                Throw New Global.System.ArgumentNullException("fechpos")
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(fechpos,String)
            End If
            Me.Adapter.InsertCommand.Parameters(32).Value = CType(vpos,Double)
            Me.Adapter.InsertCommand.Parameters(33).Value = CType(tasa,Double)
            If (moneda Is Nothing) Then
                Throw New Global.System.ArgumentNullException("moneda")
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(moneda,String)
            End If
            If (monloex Is Nothing) Then
                Throw New Global.System.ArgumentNullException("monloex")
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(monloex,String)
            End If
            If (estado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("estado")
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(estado,String)
            End If
            If (salmov Is Nothing) Then
                Throw New Global.System.ArgumentNullException("salmov")
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(salmov,String)
            End If
            If (pagare Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pagare")
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(pagare,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal doc As String,  _
                    ByVal tipo As String,  _
                    ByVal num As Long,  _
                    ByVal descrip As String,  _
                    ByVal tipafec As String,  _
                    ByVal clasaju As String,  _
                    ByVal nitc As String,  _
                    ByVal nomnit As String,  _
                    ByVal nitcod As String,  _
                    ByVal nitv As String,  _
                    ByVal fecha As Date,  _
                    ByVal vmto As Integer,  _
                    ByVal concepto As String,  _
                    ByVal subtotal As Double,  _
                    ByVal descto As Double,  _
                    ByVal ret As Double,  _
                    ByVal iva As String,  _
                    ByVal v_viva As Double,  _
                    ByVal total As Double,  _
                    ByVal ctasubtotal As String,  _
                    ByVal ctaret As String,  _
                    ByVal ctaiva As String,  _
                    ByVal ctatotal As String,  _
                    ByVal ccosto As String,  _
                    ByVal otroimp As String,  _
                    ByVal retiva As Double,  _
                    ByVal ctaretiva As String,  _
                    ByVal retica As Double,  _
                    ByVal ctaretica As String,  _
                    ByVal pagado As Double,  _
                    ByVal rcpos As String,  _
                    ByVal fechpos As String,  _
                    ByVal vpos As Double,  _
                    ByVal tasa As Double,  _
                    ByVal moneda As String,  _
                    ByVal monloex As String,  _
                    ByVal estado As String,  _
                    ByVal salmov As String,  _
                    ByVal pagare As String,  _
                    ByVal Original_doc As String,  _
                    ByVal Original_tipo As String,  _
                    ByVal Original_num As Long,  _
                    ByVal Original_descrip As String,  _
                    ByVal Original_tipafec As String,  _
                    ByVal Original_clasaju As String,  _
                    ByVal Original_nitc As String,  _
                    ByVal Original_nomnit As String,  _
                    ByVal Original_nitcod As String,  _
                    ByVal Original_nitv As String,  _
                    ByVal Original_fecha As Date,  _
                    ByVal Original_vmto As Integer,  _
                    ByVal Original_concepto As String,  _
                    ByVal Original_subtotal As Double,  _
                    ByVal Original_descto As Double,  _
                    ByVal Original_ret As Double,  _
                    ByVal Original_iva As String,  _
                    ByVal Original_v_viva As Double,  _
                    ByVal Original_total As Double,  _
                    ByVal Original_ctasubtotal As String,  _
                    ByVal Original_ctaret As String,  _
                    ByVal Original_ctaiva As String,  _
                    ByVal Original_ctatotal As String,  _
                    ByVal Original_ccosto As String,  _
                    ByVal Original_otroimp As String,  _
                    ByVal Original_retiva As Double,  _
                    ByVal Original_ctaretiva As String,  _
                    ByVal Original_retica As Double,  _
                    ByVal Original_ctaretica As String,  _
                    ByVal Original_pagado As Double,  _
                    ByVal Original_rcpos As String,  _
                    ByVal Original_fechpos As String,  _
                    ByVal Original_vpos As Double,  _
                    ByVal Original_tasa As Double,  _
                    ByVal Original_moneda As String,  _
                    ByVal Original_monloex As String,  _
                    ByVal Original_estado As String,  _
                    ByVal Original_salmov As String,  _
                    ByVal Original_pagare As String) As Integer
            If (doc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("doc")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(doc,String)
            End If
            If (tipo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipo")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(tipo,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(num,Long)
            If (descrip Is Nothing) Then
                Throw New Global.System.ArgumentNullException("descrip")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(descrip,String)
            End If
            If (tipafec Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipafec")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(tipafec,String)
            End If
            If (clasaju Is Nothing) Then
                Throw New Global.System.ArgumentNullException("clasaju")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(clasaju,String)
            End If
            If (nitc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nitc")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(nitc,String)
            End If
            If (nomnit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nomnit")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(nomnit,String)
            End If
            If (nitcod Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nitcod")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(nitcod,String)
            End If
            If (nitv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nitv")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(nitv,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(fecha,Date)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(vmto,Integer)
            If (concepto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("concepto")
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(concepto,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(subtotal,Double)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(descto,Double)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(ret,Double)
            If (iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("iva")
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(iva,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(v_viva,Double)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(total,Double)
            If (ctasubtotal Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctasubtotal")
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(ctasubtotal,String)
            End If
            If (ctaret Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctaret")
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(ctaret,String)
            End If
            If (ctaiva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctaiva")
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(ctaiva,String)
            End If
            If (ctatotal Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctatotal")
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(ctatotal,String)
            End If
            If (ccosto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ccosto")
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(ccosto,String)
            End If
            If (otroimp Is Nothing) Then
                Throw New Global.System.ArgumentNullException("otroimp")
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(otroimp,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(retiva,Double)
            If (ctaretiva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctaretiva")
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(ctaretiva,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(retica,Double)
            If (ctaretica Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctaretica")
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(ctaretica,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(29).Value = CType(pagado,Double)
            If (rcpos Is Nothing) Then
                Throw New Global.System.ArgumentNullException("rcpos")
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(rcpos,String)
            End If
            If (fechpos Is Nothing) Then
                Throw New Global.System.ArgumentNullException("fechpos")
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(fechpos,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(32).Value = CType(vpos,Double)
            Me.Adapter.UpdateCommand.Parameters(33).Value = CType(tasa,Double)
            If (moneda Is Nothing) Then
                Throw New Global.System.ArgumentNullException("moneda")
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(moneda,String)
            End If
            If (monloex Is Nothing) Then
                Throw New Global.System.ArgumentNullException("monloex")
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(monloex,String)
            End If
            If (estado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("estado")
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(estado,String)
            End If
            If (salmov Is Nothing) Then
                Throw New Global.System.ArgumentNullException("salmov")
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(salmov,String)
            End If
            If (pagare Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pagare")
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(pagare,String)
            End If
            If (Original_doc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_doc")
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_doc,String)
            End If
            If (Original_tipo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_tipo")
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_tipo,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_num,Long)
            If (Original_descrip Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_descrip")
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_descrip,String)
            End If
            If (Original_tipafec Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_tipafec")
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_tipafec,String)
            End If
            If (Original_clasaju Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_clasaju")
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_clasaju,String)
            End If
            If (Original_nitc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nitc")
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_nitc,String)
            End If
            If (Original_nomnit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nomnit")
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_nomnit,String)
            End If
            If (Original_nitcod Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nitcod")
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_nitcod,String)
            End If
            If (Original_nitv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nitv")
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_nitv,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_fecha,Date)
            Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_vmto,Integer)
            If (Original_concepto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_concepto")
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_concepto,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_subtotal,Double)
            Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_descto,Double)
            Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_ret,Double)
            If (Original_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_iva")
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_iva,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_v_viva,Double)
            Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_total,Double)
            If (Original_ctasubtotal Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ctasubtotal")
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_ctasubtotal,String)
            End If
            If (Original_ctaret Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ctaret")
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_ctaret,String)
            End If
            If (Original_ctaiva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ctaiva")
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_ctaiva,String)
            End If
            If (Original_ctatotal Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ctatotal")
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_ctatotal,String)
            End If
            If (Original_ccosto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ccosto")
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_ccosto,String)
            End If
            If (Original_otroimp Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_otroimp")
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_otroimp,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_retiva,Double)
            If (Original_ctaretiva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ctaretiva")
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_ctaretiva,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_retica,Double)
            If (Original_ctaretica Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ctaretica")
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_ctaretica,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_pagado,Double)
            If (Original_rcpos Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_rcpos")
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_rcpos,String)
            End If
            If (Original_fechpos Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_fechpos")
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_fechpos,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_vpos,Double)
            Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_tasa,Double)
            If (Original_moneda Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_moneda")
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_moneda,String)
            End If
            If (Original_monloex Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_monloex")
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_monloex,String)
            End If
            If (Original_estado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_estado")
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_estado,String)
            End If
            If (Original_salmov Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_salmov")
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_salmov,String)
            End If
            If (Original_pagare Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_pagare")
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_pagare,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal tipo As String,  _
                    ByVal num As Long,  _
                    ByVal descrip As String,  _
                    ByVal tipafec As String,  _
                    ByVal clasaju As String,  _
                    ByVal nitc As String,  _
                    ByVal nomnit As String,  _
                    ByVal nitcod As String,  _
                    ByVal nitv As String,  _
                    ByVal fecha As Date,  _
                    ByVal vmto As Integer,  _
                    ByVal concepto As String,  _
                    ByVal subtotal As Double,  _
                    ByVal descto As Double,  _
                    ByVal ret As Double,  _
                    ByVal iva As String,  _
                    ByVal v_viva As Double,  _
                    ByVal total As Double,  _
                    ByVal ctasubtotal As String,  _
                    ByVal ctaret As String,  _
                    ByVal ctaiva As String,  _
                    ByVal ctatotal As String,  _
                    ByVal ccosto As String,  _
                    ByVal otroimp As String,  _
                    ByVal retiva As Double,  _
                    ByVal ctaretiva As String,  _
                    ByVal retica As Double,  _
                    ByVal ctaretica As String,  _
                    ByVal pagado As Double,  _
                    ByVal rcpos As String,  _
                    ByVal fechpos As String,  _
                    ByVal vpos As Double,  _
                    ByVal tasa As Double,  _
                    ByVal moneda As String,  _
                    ByVal monloex As String,  _
                    ByVal estado As String,  _
                    ByVal salmov As String,  _
                    ByVal pagare As String,  _
                    ByVal Original_doc As String,  _
                    ByVal Original_tipo As String,  _
                    ByVal Original_num As Long,  _
                    ByVal Original_descrip As String,  _
                    ByVal Original_tipafec As String,  _
                    ByVal Original_clasaju As String,  _
                    ByVal Original_nitc As String,  _
                    ByVal Original_nomnit As String,  _
                    ByVal Original_nitcod As String,  _
                    ByVal Original_nitv As String,  _
                    ByVal Original_fecha As Date,  _
                    ByVal Original_vmto As Integer,  _
                    ByVal Original_concepto As String,  _
                    ByVal Original_subtotal As Double,  _
                    ByVal Original_descto As Double,  _
                    ByVal Original_ret As Double,  _
                    ByVal Original_iva As String,  _
                    ByVal Original_v_viva As Double,  _
                    ByVal Original_total As Double,  _
                    ByVal Original_ctasubtotal As String,  _
                    ByVal Original_ctaret As String,  _
                    ByVal Original_ctaiva As String,  _
                    ByVal Original_ctatotal As String,  _
                    ByVal Original_ccosto As String,  _
                    ByVal Original_otroimp As String,  _
                    ByVal Original_retiva As Double,  _
                    ByVal Original_ctaretiva As String,  _
                    ByVal Original_retica As Double,  _
                    ByVal Original_ctaretica As String,  _
                    ByVal Original_pagado As Double,  _
                    ByVal Original_rcpos As String,  _
                    ByVal Original_fechpos As String,  _
                    ByVal Original_vpos As Double,  _
                    ByVal Original_tasa As Double,  _
                    ByVal Original_moneda As String,  _
                    ByVal Original_monloex As String,  _
                    ByVal Original_estado As String,  _
                    ByVal Original_salmov As String,  _
                    ByVal Original_pagare As String) As Integer
            Return Me.Update(Original_doc, tipo, num, descrip, tipafec, clasaju, nitc, nomnit, nitcod, nitv, fecha, vmto, concepto, subtotal, descto, ret, iva, v_viva, total, ctasubtotal, ctaret, ctaiva, ctatotal, ccosto, otroimp, retiva, ctaretiva, retica, ctaretica, pagado, rcpos, fechpos, vpos, tasa, moneda, monloex, estado, salmov, pagare, Original_doc, Original_tipo, Original_num, Original_descrip, Original_tipafec, Original_clasaju, Original_nitc, Original_nomnit, Original_nitcod, Original_nitv, Original_fecha, Original_vmto, Original_concepto, Original_subtotal, Original_descto, Original_ret, Original_iva, Original_v_viva, Original_total, Original_ctasubtotal, Original_ctaret, Original_ctaiva, Original_ctatotal, Original_ccosto, Original_otroimp, Original_retiva, Original_ctaretiva, Original_retica, Original_ctaretica, Original_pagado, Original_rcpos, Original_fechpos, Original_vpos, Original_tasa, Original_moneda, Original_monloex, Original_estado, Original_salmov, Original_pagare)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ctas_x_pagarTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ctas_x_pagar"
            tableMapping.ColumnMappings.Add("doc", "doc")
            tableMapping.ColumnMappings.Add("tipo", "tipo")
            tableMapping.ColumnMappings.Add("num", "num")
            tableMapping.ColumnMappings.Add("doc_ext", "doc_ext")
            tableMapping.ColumnMappings.Add("descrip", "descrip")
            tableMapping.ColumnMappings.Add("tipafec", "tipafec")
            tableMapping.ColumnMappings.Add("clasaju", "clasaju")
            tableMapping.ColumnMappings.Add("nitc", "nitc")
            tableMapping.ColumnMappings.Add("nomnit", "nomnit")
            tableMapping.ColumnMappings.Add("nitcod", "nitcod")
            tableMapping.ColumnMappings.Add("fecha", "fecha")
            tableMapping.ColumnMappings.Add("vmto", "vmto")
            tableMapping.ColumnMappings.Add("concepto", "concepto")
            tableMapping.ColumnMappings.Add("subtotal", "subtotal")
            tableMapping.ColumnMappings.Add("descto", "descto")
            tableMapping.ColumnMappings.Add("ret", "ret")
            tableMapping.ColumnMappings.Add("iva", "iva")
            tableMapping.ColumnMappings.Add("v_viva", "v_viva")
            tableMapping.ColumnMappings.Add("total", "total")
            tableMapping.ColumnMappings.Add("ctasubtotal", "ctasubtotal")
            tableMapping.ColumnMappings.Add("ctaret", "ctaret")
            tableMapping.ColumnMappings.Add("ctaiva", "ctaiva")
            tableMapping.ColumnMappings.Add("ctatotal", "ctatotal")
            tableMapping.ColumnMappings.Add("ccosto", "ccosto")
            tableMapping.ColumnMappings.Add("otroimp", "otroimp")
            tableMapping.ColumnMappings.Add("retiva", "retiva")
            tableMapping.ColumnMappings.Add("ctaretiva", "ctaretiva")
            tableMapping.ColumnMappings.Add("retica", "retica")
            tableMapping.ColumnMappings.Add("ctaretica", "ctaretica")
            tableMapping.ColumnMappings.Add("pagado", "pagado")
            tableMapping.ColumnMappings.Add("rcpos", "rcpos")
            tableMapping.ColumnMappings.Add("fechpos", "fechpos")
            tableMapping.ColumnMappings.Add("vpos", "vpos")
            tableMapping.ColumnMappings.Add("tasa", "tasa")
            tableMapping.ColumnMappings.Add("moneda", "moneda")
            tableMapping.ColumnMappings.Add("monloex", "monloex")
            tableMapping.ColumnMappings.Add("estado", "estado")
            tableMapping.ColumnMappings.Add("salmov", "salmov")
            tableMapping.ColumnMappings.Add("pagare", "pagare")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `saeosteomaterial2012`.`ctas_x_pagar` WHERE ((`doc` = @Original_doc) "& _ 
                "AND (`tipo` = @Original_tipo) AND (`num` = @Original_num) AND (`doc_ext` = @Orig"& _ 
                "inal_doc_ext) AND (`descrip` = @Original_descrip) AND (`tipafec` = @Original_tip"& _ 
                "afec) AND (`clasaju` = @Original_clasaju) AND (`nitc` = @Original_nitc) AND (`no"& _ 
                "mnit` = @Original_nomnit) AND (`nitcod` = @Original_nitcod) AND (`fecha` = @Orig"& _ 
                "inal_fecha) AND (`vmto` = @Original_vmto) AND (`concepto` = @Original_concepto) "& _ 
                "AND (`subtotal` = @Original_subtotal) AND (`descto` = @Original_descto) AND (`re"& _ 
                "t` = @Original_ret) AND (`iva` = @Original_iva) AND (`v_viva` = @Original_v_viva"& _ 
                ") AND (`total` = @Original_total) AND (`ctasubtotal` = @Original_ctasubtotal) AN"& _ 
                "D (`ctaret` = @Original_ctaret) AND (`ctaiva` = @Original_ctaiva) AND (`ctatotal"& _ 
                "` = @Original_ctatotal) AND (`ccosto` = @Original_ccosto) AND (`otroimp` = @Orig"& _ 
                "inal_otroimp) AND (`retiva` = @Original_retiva) AND (`ctaretiva` = @Original_cta"& _ 
                "retiva) AND (`retica` = @Original_retica) AND (`ctaretica` = @Original_ctaretica"& _ 
                ") AND (`pagado` = @Original_pagado) AND (`rcpos` = @Original_rcpos) AND (`fechpo"& _ 
                "s` = @Original_fechpos) AND (`vpos` = @Original_vpos) AND (`tasa` = @Original_ta"& _ 
                "sa) AND (`moneda` = @Original_moneda) AND (`monloex` = @Original_monloex) AND (`"& _ 
                "estado` = @Original_estado) AND (`salmov` = @Original_salmov) AND (`pagare` = @O"& _ 
                "riginal_pagare))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_doc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "doc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tipo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_num"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int64
            param.IsNullable = true
            param.SourceColumn = "num"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_doc_ext"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "doc_ext"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_descrip"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "descrip"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tipafec"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipafec"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_clasaju"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "clasaju"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nitc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nomnit"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nomnit"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nitcod"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitcod"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_fecha"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fecha"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_vmto"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "vmto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_concepto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "concepto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_subtotal"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "subtotal"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_descto"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "descto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ret"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "ret"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_iva"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "iva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_v_viva"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "v_viva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_total"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "total"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ctasubtotal"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctasubtotal"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ctaret"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaret"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ctaiva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaiva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ctatotal"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctatotal"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ccosto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ccosto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_otroimp"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "otroimp"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_retiva"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "retiva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ctaretiva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaretiva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_retica"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "retica"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ctaretica"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaretica"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_pagado"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "pagado"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_rcpos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "rcpos"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_fechpos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "fechpos"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_vpos"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "vpos"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tasa"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "tasa"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_moneda"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "moneda"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_monloex"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "monloex"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_estado"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_salmov"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "salmov"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_pagare"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "pagare"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `saeosteomaterial2012`.`ctas_x_pagar` (`doc`, `tipo`, `num`, `doc_ext"& _ 
                "`, `descrip`, `tipafec`, `clasaju`, `nitc`, `nomnit`, `nitcod`, `fecha`, `vmto`,"& _ 
                " `concepto`, `subtotal`, `descto`, `ret`, `iva`, `v_viva`, `total`, `ctasubtotal"& _ 
                "`, `ctaret`, `ctaiva`, `ctatotal`, `ccosto`, `otroimp`, `retiva`, `ctaretiva`, `"& _ 
                "retica`, `ctaretica`, `pagado`, `rcpos`, `fechpos`, `vpos`, `tasa`, `moneda`, `m"& _ 
                "onloex`, `estado`, `salmov`, `pagare`) VALUES (@doc, @tipo, @num, @doc_ext, @des"& _ 
                "crip, @tipafec, @clasaju, @nitc, @nomnit, @nitcod, @fecha, @vmto, @concepto, @su"& _ 
                "btotal, @descto, @ret, @iva, @v_viva, @total, @ctasubtotal, @ctaret, @ctaiva, @c"& _ 
                "tatotal, @ccosto, @otroimp, @retiva, @ctaretiva, @retica, @ctaretica, @pagado, @"& _ 
                "rcpos, @fechpos, @vpos, @tasa, @moneda, @monloex, @estado, @salmov, @pagare)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@doc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "doc"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipo"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@num"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int64
            param.IsNullable = true
            param.SourceColumn = "num"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@doc_ext"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "doc_ext"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@descrip"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "descrip"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipafec"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipafec"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@clasaju"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "clasaju"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nitc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitc"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nomnit"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nomnit"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nitcod"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitcod"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@fecha"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fecha"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@vmto"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "vmto"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@concepto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "concepto"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@subtotal"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "subtotal"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@descto"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "descto"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ret"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "ret"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@iva"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "iva"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@v_viva"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "v_viva"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@total"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "total"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ctasubtotal"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctasubtotal"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ctaret"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaret"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ctaiva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaiva"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ctatotal"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctatotal"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ccosto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ccosto"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@otroimp"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "otroimp"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@retiva"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "retiva"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ctaretiva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaretiva"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@retica"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "retica"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ctaretica"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaretica"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@pagado"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "pagado"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@rcpos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "rcpos"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@fechpos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "fechpos"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@vpos"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "vpos"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tasa"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "tasa"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@moneda"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "moneda"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@monloex"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "monloex"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@estado"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@salmov"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "salmov"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@pagare"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "pagare"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `saeosteomaterial2012`.`ctas_x_pagar` SET `doc` = @doc, `tipo` = @tipo, `n"& _ 
                "um` = @num, `doc_ext` = @doc_ext, `descrip` = @descrip, `tipafec` = @tipafec, `c"& _ 
                "lasaju` = @clasaju, `nitc` = @nitc, `nomnit` = @nomnit, `nitcod` = @nitcod, `fec"& _ 
                "ha` = @fecha, `vmto` = @vmto, `concepto` = @concepto, `subtotal` = @subtotal, `d"& _ 
                "escto` = @descto, `ret` = @ret, `iva` = @iva, `v_viva` = @v_viva, `total` = @tot"& _ 
                "al, `ctasubtotal` = @ctasubtotal, `ctaret` = @ctaret, `ctaiva` = @ctaiva, `ctato"& _ 
                "tal` = @ctatotal, `ccosto` = @ccosto, `otroimp` = @otroimp, `retiva` = @retiva, "& _ 
                "`ctaretiva` = @ctaretiva, `retica` = @retica, `ctaretica` = @ctaretica, `pagado`"& _ 
                " = @pagado, `rcpos` = @rcpos, `fechpos` = @fechpos, `vpos` = @vpos, `tasa` = @ta"& _ 
                "sa, `moneda` = @moneda, `monloex` = @monloex, `estado` = @estado, `salmov` = @sa"& _ 
                "lmov, `pagare` = @pagare WHERE ((`doc` = @Original_doc) AND (`tipo` = @Original_"& _ 
                "tipo) AND (`num` = @Original_num) AND (`doc_ext` = @Original_doc_ext) AND (`desc"& _ 
                "rip` = @Original_descrip) AND (`tipafec` = @Original_tipafec) AND (`clasaju` = @"& _ 
                "Original_clasaju) AND (`nitc` = @Original_nitc) AND (`nomnit` = @Original_nomnit"& _ 
                ") AND (`nitcod` = @Original_nitcod) AND (`fecha` = @Original_fecha) AND (`vmto` "& _ 
                "= @Original_vmto) AND (`concepto` = @Original_concepto) AND (`subtotal` = @Origi"& _ 
                "nal_subtotal) AND (`descto` = @Original_descto) AND (`ret` = @Original_ret) AND "& _ 
                "(`iva` = @Original_iva) AND (`v_viva` = @Original_v_viva) AND (`total` = @Origin"& _ 
                "al_total) AND (`ctasubtotal` = @Original_ctasubtotal) AND (`ctaret` = @Original_"& _ 
                "ctaret) AND (`ctaiva` = @Original_ctaiva) AND (`ctatotal` = @Original_ctatotal) "& _ 
                "AND (`ccosto` = @Original_ccosto) AND (`otroimp` = @Original_otroimp) AND (`reti"& _ 
                "va` = @Original_retiva) AND (`ctaretiva` = @Original_ctaretiva) AND (`retica` = "& _ 
                "@Original_retica) AND (`ctaretica` = @Original_ctaretica) AND (`pagado` = @Origi"& _ 
                "nal_pagado) AND (`rcpos` = @Original_rcpos) AND (`fechpos` = @Original_fechpos) "& _ 
                "AND (`vpos` = @Original_vpos) AND (`tasa` = @Original_tasa) AND (`moneda` = @Ori"& _ 
                "ginal_moneda) AND (`monloex` = @Original_monloex) AND (`estado` = @Original_esta"& _ 
                "do) AND (`salmov` = @Original_salmov) AND (`pagare` = @Original_pagare))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@doc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "doc"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipo"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@num"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int64
            param.IsNullable = true
            param.SourceColumn = "num"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@doc_ext"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "doc_ext"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@descrip"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "descrip"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipafec"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipafec"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@clasaju"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "clasaju"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nitc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitc"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nomnit"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nomnit"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nitcod"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitcod"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@fecha"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fecha"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@vmto"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "vmto"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@concepto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "concepto"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@subtotal"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "subtotal"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@descto"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "descto"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ret"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "ret"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@iva"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "iva"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@v_viva"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "v_viva"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@total"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "total"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ctasubtotal"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctasubtotal"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ctaret"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaret"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ctaiva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaiva"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ctatotal"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctatotal"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ccosto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ccosto"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@otroimp"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "otroimp"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@retiva"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "retiva"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ctaretiva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaretiva"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@retica"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "retica"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ctaretica"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaretica"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@pagado"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "pagado"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@rcpos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "rcpos"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@fechpos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "fechpos"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@vpos"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "vpos"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tasa"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "tasa"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@moneda"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "moneda"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@monloex"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "monloex"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@estado"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@salmov"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "salmov"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@pagare"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "pagare"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_doc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "doc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tipo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_num"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int64
            param.IsNullable = true
            param.SourceColumn = "num"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_doc_ext"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "doc_ext"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_descrip"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "descrip"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tipafec"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipafec"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_clasaju"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "clasaju"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nitc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nomnit"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nomnit"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nitcod"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitcod"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_fecha"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fecha"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_vmto"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "vmto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_concepto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "concepto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_subtotal"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "subtotal"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_descto"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "descto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ret"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "ret"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_iva"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "iva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_v_viva"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "v_viva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_total"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "total"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ctasubtotal"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctasubtotal"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ctaret"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaret"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ctaiva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaiva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ctatotal"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctatotal"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ccosto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ccosto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_otroimp"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "otroimp"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_retiva"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "retiva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ctaretiva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaretiva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_retica"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "retica"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ctaretica"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaretica"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_pagado"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "pagado"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_rcpos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "rcpos"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_fechpos"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "fechpos"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_vpos"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "vpos"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tasa"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "tasa"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_moneda"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "moneda"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_monloex"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "monloex"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_estado"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_salmov"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "salmov"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_pagare"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "pagare"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection
            Me._connection.ConnectionString = Global.SAE.My.MySettings.Default.saeosteomaterial2012ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `doc`, `tipo`, `num`, `doc_ext`, `descrip`, `tipafec`, `clasaju`, `nitc`, "& _ 
                "`nomnit`, `nitcod`, `fecha`, `vmto`, `concepto`, `subtotal`, `descto`, `ret`, `i"& _ 
                "va`, `v_viva`, `total`, `ctasubtotal`, `ctaret`, `ctaiva`, `ctatotal`, `ccosto`,"& _ 
                " `otroimp`, `retiva`, `ctaretiva`, `retica`, `ctaretica`, `pagado`, `rcpos`, `fe"& _ 
                "chpos`, `vpos`, `tasa`, `moneda`, `monloex`, `estado`, `salmov`, `pagare` FROM `"& _ 
                "saeosteomaterial2012`.`ctas_x_pagar`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As saeosteomaterial2012DataSet.ctas_x_pagarDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As saeosteomaterial2012DataSet.ctas_x_pagarDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As saeosteomaterial2012DataSet.ctas_x_pagarDataTable = New saeosteomaterial2012DataSet.ctas_x_pagarDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As saeosteomaterial2012DataSet.ctas_x_pagarDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As saeosteomaterial2012DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "ctas_x_pagar")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_doc As String,  _
                    ByVal Original_tipo As String,  _
                    ByVal Original_num As Long,  _
                    ByVal Original_doc_ext As String,  _
                    ByVal Original_descrip As String,  _
                    ByVal Original_tipafec As String,  _
                    ByVal Original_clasaju As String,  _
                    ByVal Original_nitc As String,  _
                    ByVal Original_nomnit As String,  _
                    ByVal Original_nitcod As String,  _
                    ByVal Original_fecha As Date,  _
                    ByVal Original_vmto As Integer,  _
                    ByVal Original_concepto As String,  _
                    ByVal Original_subtotal As Double,  _
                    ByVal Original_descto As Double,  _
                    ByVal Original_ret As Double,  _
                    ByVal Original_iva As String,  _
                    ByVal Original_v_viva As Double,  _
                    ByVal Original_total As Double,  _
                    ByVal Original_ctasubtotal As String,  _
                    ByVal Original_ctaret As String,  _
                    ByVal Original_ctaiva As String,  _
                    ByVal Original_ctatotal As String,  _
                    ByVal Original_ccosto As String,  _
                    ByVal Original_otroimp As String,  _
                    ByVal Original_retiva As Double,  _
                    ByVal Original_ctaretiva As String,  _
                    ByVal Original_retica As Double,  _
                    ByVal Original_ctaretica As String,  _
                    ByVal Original_pagado As Double,  _
                    ByVal Original_rcpos As String,  _
                    ByVal Original_fechpos As String,  _
                    ByVal Original_vpos As Double,  _
                    ByVal Original_tasa As Double,  _
                    ByVal Original_moneda As String,  _
                    ByVal Original_monloex As String,  _
                    ByVal Original_estado As String,  _
                    ByVal Original_salmov As String,  _
                    ByVal Original_pagare As String) As Integer
            If (Original_doc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_doc")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_doc,String)
            End If
            If (Original_tipo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_tipo")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_tipo,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_num,Long)
            If (Original_doc_ext Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_doc_ext")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_doc_ext,String)
            End If
            If (Original_descrip Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_descrip")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_descrip,String)
            End If
            If (Original_tipafec Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_tipafec")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_tipafec,String)
            End If
            If (Original_clasaju Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_clasaju")
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_clasaju,String)
            End If
            If (Original_nitc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nitc")
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_nitc,String)
            End If
            If (Original_nomnit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nomnit")
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_nomnit,String)
            End If
            If (Original_nitcod Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nitcod")
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_nitcod,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_fecha,Date)
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_vmto,Integer)
            If (Original_concepto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_concepto")
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_concepto,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_subtotal,Double)
            Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_descto,Double)
            Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_ret,Double)
            If (Original_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_iva")
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_iva,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_v_viva,Double)
            Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_total,Double)
            If (Original_ctasubtotal Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ctasubtotal")
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_ctasubtotal,String)
            End If
            If (Original_ctaret Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ctaret")
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_ctaret,String)
            End If
            If (Original_ctaiva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ctaiva")
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_ctaiva,String)
            End If
            If (Original_ctatotal Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ctatotal")
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_ctatotal,String)
            End If
            If (Original_ccosto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ccosto")
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_ccosto,String)
            End If
            If (Original_otroimp Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_otroimp")
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_otroimp,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_retiva,Double)
            If (Original_ctaretiva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ctaretiva")
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_ctaretiva,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_retica,Double)
            If (Original_ctaretica Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ctaretica")
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_ctaretica,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_pagado,Double)
            If (Original_rcpos Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_rcpos")
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_rcpos,String)
            End If
            If (Original_fechpos Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_fechpos")
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_fechpos,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_vpos,Double)
            Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_tasa,Double)
            If (Original_moneda Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_moneda")
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_moneda,String)
            End If
            If (Original_monloex Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_monloex")
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_monloex,String)
            End If
            If (Original_estado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_estado")
            Else
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_estado,String)
            End If
            If (Original_salmov Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_salmov")
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_salmov,String)
            End If
            If (Original_pagare Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_pagare")
            Else
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_pagare,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal doc As String,  _
                    ByVal tipo As String,  _
                    ByVal num As Long,  _
                    ByVal doc_ext As String,  _
                    ByVal descrip As String,  _
                    ByVal tipafec As String,  _
                    ByVal clasaju As String,  _
                    ByVal nitc As String,  _
                    ByVal nomnit As String,  _
                    ByVal nitcod As String,  _
                    ByVal fecha As Date,  _
                    ByVal vmto As Integer,  _
                    ByVal concepto As String,  _
                    ByVal subtotal As Double,  _
                    ByVal descto As Double,  _
                    ByVal ret As Double,  _
                    ByVal iva As String,  _
                    ByVal v_viva As Double,  _
                    ByVal total As Double,  _
                    ByVal ctasubtotal As String,  _
                    ByVal ctaret As String,  _
                    ByVal ctaiva As String,  _
                    ByVal ctatotal As String,  _
                    ByVal ccosto As String,  _
                    ByVal otroimp As String,  _
                    ByVal retiva As Double,  _
                    ByVal ctaretiva As String,  _
                    ByVal retica As Double,  _
                    ByVal ctaretica As String,  _
                    ByVal pagado As Double,  _
                    ByVal rcpos As String,  _
                    ByVal fechpos As String,  _
                    ByVal vpos As Double,  _
                    ByVal tasa As Double,  _
                    ByVal moneda As String,  _
                    ByVal monloex As String,  _
                    ByVal estado As String,  _
                    ByVal salmov As String,  _
                    ByVal pagare As String) As Integer
            If (doc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("doc")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(doc,String)
            End If
            If (tipo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipo")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(tipo,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(num,Long)
            If (doc_ext Is Nothing) Then
                Throw New Global.System.ArgumentNullException("doc_ext")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(doc_ext,String)
            End If
            If (descrip Is Nothing) Then
                Throw New Global.System.ArgumentNullException("descrip")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(descrip,String)
            End If
            If (tipafec Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipafec")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(tipafec,String)
            End If
            If (clasaju Is Nothing) Then
                Throw New Global.System.ArgumentNullException("clasaju")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(clasaju,String)
            End If
            If (nitc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nitc")
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(nitc,String)
            End If
            If (nomnit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nomnit")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(nomnit,String)
            End If
            If (nitcod Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nitcod")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(nitcod,String)
            End If
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(fecha,Date)
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(vmto,Integer)
            If (concepto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("concepto")
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(concepto,String)
            End If
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(subtotal,Double)
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(descto,Double)
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(ret,Double)
            If (iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("iva")
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(iva,String)
            End If
            Me.Adapter.InsertCommand.Parameters(17).Value = CType(v_viva,Double)
            Me.Adapter.InsertCommand.Parameters(18).Value = CType(total,Double)
            If (ctasubtotal Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctasubtotal")
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(ctasubtotal,String)
            End If
            If (ctaret Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctaret")
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(ctaret,String)
            End If
            If (ctaiva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctaiva")
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(ctaiva,String)
            End If
            If (ctatotal Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctatotal")
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(ctatotal,String)
            End If
            If (ccosto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ccosto")
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(ccosto,String)
            End If
            If (otroimp Is Nothing) Then
                Throw New Global.System.ArgumentNullException("otroimp")
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(otroimp,String)
            End If
            Me.Adapter.InsertCommand.Parameters(25).Value = CType(retiva,Double)
            If (ctaretiva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctaretiva")
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(ctaretiva,String)
            End If
            Me.Adapter.InsertCommand.Parameters(27).Value = CType(retica,Double)
            If (ctaretica Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctaretica")
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(ctaretica,String)
            End If
            Me.Adapter.InsertCommand.Parameters(29).Value = CType(pagado,Double)
            If (rcpos Is Nothing) Then
                Throw New Global.System.ArgumentNullException("rcpos")
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(rcpos,String)
            End If
            If (fechpos Is Nothing) Then
                Throw New Global.System.ArgumentNullException("fechpos")
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(fechpos,String)
            End If
            Me.Adapter.InsertCommand.Parameters(32).Value = CType(vpos,Double)
            Me.Adapter.InsertCommand.Parameters(33).Value = CType(tasa,Double)
            If (moneda Is Nothing) Then
                Throw New Global.System.ArgumentNullException("moneda")
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(moneda,String)
            End If
            If (monloex Is Nothing) Then
                Throw New Global.System.ArgumentNullException("monloex")
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(monloex,String)
            End If
            If (estado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("estado")
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(estado,String)
            End If
            If (salmov Is Nothing) Then
                Throw New Global.System.ArgumentNullException("salmov")
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(salmov,String)
            End If
            If (pagare Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pagare")
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(pagare,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal doc As String,  _
                    ByVal tipo As String,  _
                    ByVal num As Long,  _
                    ByVal doc_ext As String,  _
                    ByVal descrip As String,  _
                    ByVal tipafec As String,  _
                    ByVal clasaju As String,  _
                    ByVal nitc As String,  _
                    ByVal nomnit As String,  _
                    ByVal nitcod As String,  _
                    ByVal fecha As Date,  _
                    ByVal vmto As Integer,  _
                    ByVal concepto As String,  _
                    ByVal subtotal As Double,  _
                    ByVal descto As Double,  _
                    ByVal ret As Double,  _
                    ByVal iva As String,  _
                    ByVal v_viva As Double,  _
                    ByVal total As Double,  _
                    ByVal ctasubtotal As String,  _
                    ByVal ctaret As String,  _
                    ByVal ctaiva As String,  _
                    ByVal ctatotal As String,  _
                    ByVal ccosto As String,  _
                    ByVal otroimp As String,  _
                    ByVal retiva As Double,  _
                    ByVal ctaretiva As String,  _
                    ByVal retica As Double,  _
                    ByVal ctaretica As String,  _
                    ByVal pagado As Double,  _
                    ByVal rcpos As String,  _
                    ByVal fechpos As String,  _
                    ByVal vpos As Double,  _
                    ByVal tasa As Double,  _
                    ByVal moneda As String,  _
                    ByVal monloex As String,  _
                    ByVal estado As String,  _
                    ByVal salmov As String,  _
                    ByVal pagare As String,  _
                    ByVal Original_doc As String,  _
                    ByVal Original_tipo As String,  _
                    ByVal Original_num As Long,  _
                    ByVal Original_doc_ext As String,  _
                    ByVal Original_descrip As String,  _
                    ByVal Original_tipafec As String,  _
                    ByVal Original_clasaju As String,  _
                    ByVal Original_nitc As String,  _
                    ByVal Original_nomnit As String,  _
                    ByVal Original_nitcod As String,  _
                    ByVal Original_fecha As Date,  _
                    ByVal Original_vmto As Integer,  _
                    ByVal Original_concepto As String,  _
                    ByVal Original_subtotal As Double,  _
                    ByVal Original_descto As Double,  _
                    ByVal Original_ret As Double,  _
                    ByVal Original_iva As String,  _
                    ByVal Original_v_viva As Double,  _
                    ByVal Original_total As Double,  _
                    ByVal Original_ctasubtotal As String,  _
                    ByVal Original_ctaret As String,  _
                    ByVal Original_ctaiva As String,  _
                    ByVal Original_ctatotal As String,  _
                    ByVal Original_ccosto As String,  _
                    ByVal Original_otroimp As String,  _
                    ByVal Original_retiva As Double,  _
                    ByVal Original_ctaretiva As String,  _
                    ByVal Original_retica As Double,  _
                    ByVal Original_ctaretica As String,  _
                    ByVal Original_pagado As Double,  _
                    ByVal Original_rcpos As String,  _
                    ByVal Original_fechpos As String,  _
                    ByVal Original_vpos As Double,  _
                    ByVal Original_tasa As Double,  _
                    ByVal Original_moneda As String,  _
                    ByVal Original_monloex As String,  _
                    ByVal Original_estado As String,  _
                    ByVal Original_salmov As String,  _
                    ByVal Original_pagare As String) As Integer
            If (doc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("doc")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(doc,String)
            End If
            If (tipo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipo")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(tipo,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(num,Long)
            If (doc_ext Is Nothing) Then
                Throw New Global.System.ArgumentNullException("doc_ext")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(doc_ext,String)
            End If
            If (descrip Is Nothing) Then
                Throw New Global.System.ArgumentNullException("descrip")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(descrip,String)
            End If
            If (tipafec Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipafec")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(tipafec,String)
            End If
            If (clasaju Is Nothing) Then
                Throw New Global.System.ArgumentNullException("clasaju")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(clasaju,String)
            End If
            If (nitc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nitc")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(nitc,String)
            End If
            If (nomnit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nomnit")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(nomnit,String)
            End If
            If (nitcod Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nitcod")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(nitcod,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(fecha,Date)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(vmto,Integer)
            If (concepto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("concepto")
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(concepto,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(subtotal,Double)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(descto,Double)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(ret,Double)
            If (iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("iva")
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(iva,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(v_viva,Double)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(total,Double)
            If (ctasubtotal Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctasubtotal")
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(ctasubtotal,String)
            End If
            If (ctaret Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctaret")
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(ctaret,String)
            End If
            If (ctaiva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctaiva")
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(ctaiva,String)
            End If
            If (ctatotal Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctatotal")
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(ctatotal,String)
            End If
            If (ccosto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ccosto")
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(ccosto,String)
            End If
            If (otroimp Is Nothing) Then
                Throw New Global.System.ArgumentNullException("otroimp")
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(otroimp,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(retiva,Double)
            If (ctaretiva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctaretiva")
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(ctaretiva,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(retica,Double)
            If (ctaretica Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctaretica")
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(ctaretica,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(29).Value = CType(pagado,Double)
            If (rcpos Is Nothing) Then
                Throw New Global.System.ArgumentNullException("rcpos")
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(rcpos,String)
            End If
            If (fechpos Is Nothing) Then
                Throw New Global.System.ArgumentNullException("fechpos")
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(fechpos,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(32).Value = CType(vpos,Double)
            Me.Adapter.UpdateCommand.Parameters(33).Value = CType(tasa,Double)
            If (moneda Is Nothing) Then
                Throw New Global.System.ArgumentNullException("moneda")
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(moneda,String)
            End If
            If (monloex Is Nothing) Then
                Throw New Global.System.ArgumentNullException("monloex")
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(monloex,String)
            End If
            If (estado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("estado")
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(estado,String)
            End If
            If (salmov Is Nothing) Then
                Throw New Global.System.ArgumentNullException("salmov")
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(salmov,String)
            End If
            If (pagare Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pagare")
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(pagare,String)
            End If
            If (Original_doc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_doc")
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_doc,String)
            End If
            If (Original_tipo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_tipo")
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_tipo,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_num,Long)
            If (Original_doc_ext Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_doc_ext")
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_doc_ext,String)
            End If
            If (Original_descrip Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_descrip")
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_descrip,String)
            End If
            If (Original_tipafec Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_tipafec")
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_tipafec,String)
            End If
            If (Original_clasaju Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_clasaju")
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_clasaju,String)
            End If
            If (Original_nitc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nitc")
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_nitc,String)
            End If
            If (Original_nomnit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nomnit")
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_nomnit,String)
            End If
            If (Original_nitcod Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nitcod")
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_nitcod,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_fecha,Date)
            Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_vmto,Integer)
            If (Original_concepto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_concepto")
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_concepto,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_subtotal,Double)
            Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_descto,Double)
            Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_ret,Double)
            If (Original_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_iva")
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_iva,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_v_viva,Double)
            Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_total,Double)
            If (Original_ctasubtotal Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ctasubtotal")
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_ctasubtotal,String)
            End If
            If (Original_ctaret Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ctaret")
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_ctaret,String)
            End If
            If (Original_ctaiva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ctaiva")
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_ctaiva,String)
            End If
            If (Original_ctatotal Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ctatotal")
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_ctatotal,String)
            End If
            If (Original_ccosto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ccosto")
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_ccosto,String)
            End If
            If (Original_otroimp Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_otroimp")
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_otroimp,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_retiva,Double)
            If (Original_ctaretiva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ctaretiva")
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_ctaretiva,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_retica,Double)
            If (Original_ctaretica Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ctaretica")
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_ctaretica,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_pagado,Double)
            If (Original_rcpos Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_rcpos")
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_rcpos,String)
            End If
            If (Original_fechpos Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_fechpos")
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_fechpos,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_vpos,Double)
            Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_tasa,Double)
            If (Original_moneda Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_moneda")
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_moneda,String)
            End If
            If (Original_monloex Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_monloex")
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_monloex,String)
            End If
            If (Original_estado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_estado")
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_estado,String)
            End If
            If (Original_salmov Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_salmov")
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_salmov,String)
            End If
            If (Original_pagare Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_pagare")
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_pagare,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal tipo As String,  _
                    ByVal num As Long,  _
                    ByVal doc_ext As String,  _
                    ByVal descrip As String,  _
                    ByVal tipafec As String,  _
                    ByVal clasaju As String,  _
                    ByVal nitc As String,  _
                    ByVal nomnit As String,  _
                    ByVal nitcod As String,  _
                    ByVal fecha As Date,  _
                    ByVal vmto As Integer,  _
                    ByVal concepto As String,  _
                    ByVal subtotal As Double,  _
                    ByVal descto As Double,  _
                    ByVal ret As Double,  _
                    ByVal iva As String,  _
                    ByVal v_viva As Double,  _
                    ByVal total As Double,  _
                    ByVal ctasubtotal As String,  _
                    ByVal ctaret As String,  _
                    ByVal ctaiva As String,  _
                    ByVal ctatotal As String,  _
                    ByVal ccosto As String,  _
                    ByVal otroimp As String,  _
                    ByVal retiva As Double,  _
                    ByVal ctaretiva As String,  _
                    ByVal retica As Double,  _
                    ByVal ctaretica As String,  _
                    ByVal pagado As Double,  _
                    ByVal rcpos As String,  _
                    ByVal fechpos As String,  _
                    ByVal vpos As Double,  _
                    ByVal tasa As Double,  _
                    ByVal moneda As String,  _
                    ByVal monloex As String,  _
                    ByVal estado As String,  _
                    ByVal salmov As String,  _
                    ByVal pagare As String,  _
                    ByVal Original_doc As String,  _
                    ByVal Original_tipo As String,  _
                    ByVal Original_num As Long,  _
                    ByVal Original_doc_ext As String,  _
                    ByVal Original_descrip As String,  _
                    ByVal Original_tipafec As String,  _
                    ByVal Original_clasaju As String,  _
                    ByVal Original_nitc As String,  _
                    ByVal Original_nomnit As String,  _
                    ByVal Original_nitcod As String,  _
                    ByVal Original_fecha As Date,  _
                    ByVal Original_vmto As Integer,  _
                    ByVal Original_concepto As String,  _
                    ByVal Original_subtotal As Double,  _
                    ByVal Original_descto As Double,  _
                    ByVal Original_ret As Double,  _
                    ByVal Original_iva As String,  _
                    ByVal Original_v_viva As Double,  _
                    ByVal Original_total As Double,  _
                    ByVal Original_ctasubtotal As String,  _
                    ByVal Original_ctaret As String,  _
                    ByVal Original_ctaiva As String,  _
                    ByVal Original_ctatotal As String,  _
                    ByVal Original_ccosto As String,  _
                    ByVal Original_otroimp As String,  _
                    ByVal Original_retiva As Double,  _
                    ByVal Original_ctaretiva As String,  _
                    ByVal Original_retica As Double,  _
                    ByVal Original_ctaretica As String,  _
                    ByVal Original_pagado As Double,  _
                    ByVal Original_rcpos As String,  _
                    ByVal Original_fechpos As String,  _
                    ByVal Original_vpos As Double,  _
                    ByVal Original_tasa As Double,  _
                    ByVal Original_moneda As String,  _
                    ByVal Original_monloex As String,  _
                    ByVal Original_estado As String,  _
                    ByVal Original_salmov As String,  _
                    ByVal Original_pagare As String) As Integer
            Return Me.Update(Original_doc, tipo, num, doc_ext, descrip, tipafec, clasaju, nitc, nomnit, nitcod, fecha, vmto, concepto, subtotal, descto, ret, iva, v_viva, total, ctasubtotal, ctaret, ctaiva, ctatotal, ccosto, otroimp, retiva, ctaretiva, retica, ctaretica, pagado, rcpos, fechpos, vpos, tasa, moneda, monloex, estado, salmov, pagare, Original_doc, Original_tipo, Original_num, Original_doc_ext, Original_descrip, Original_tipafec, Original_clasaju, Original_nitc, Original_nomnit, Original_nitcod, Original_fecha, Original_vmto, Original_concepto, Original_subtotal, Original_descto, Original_ret, Original_iva, Original_v_viva, Original_total, Original_ctasubtotal, Original_ctaret, Original_ctaiva, Original_ctatotal, Original_ccosto, Original_otroimp, Original_retiva, Original_ctaretiva, Original_retica, Original_ctaretica, Original_pagado, Original_rcpos, Original_fechpos, Original_vpos, Original_tasa, Original_moneda, Original_monloex, Original_estado, Original_salmov, Original_pagare)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class parafactsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "parafacts"
            tableMapping.ColumnMappings.Add("factura", "factura")
            tableMapping.ColumnMappings.Add("doc", "doc")
            tableMapping.ColumnMappings.Add("tipodoc", "tipodoc")
            tableMapping.ColumnMappings.Add("numfact", "numfact")
            tableMapping.ColumnMappings.Add("afecinv", "afecinv")
            tableMapping.ColumnMappings.Add("fecha", "fecha")
            tableMapping.ColumnMappings.Add("nitcpre", "nitcpre")
            tableMapping.ColumnMappings.Add("nitc", "nitc")
            tableMapping.ColumnMappings.Add("nitvpre", "nitvpre")
            tableMapping.ColumnMappings.Add("nitv", "nitv")
            tableMapping.ColumnMappings.Add("codinv", "codinv")
            tableMapping.ColumnMappings.Add("centrocost", "centrocost")
            tableMapping.ColumnMappings.Add("facdifuniemp", "facdifuniemp")
            tableMapping.ColumnMappings.Add("precautcant", "precautcant")
            tableMapping.ColumnMappings.Add("bodpred", "bodpred")
            tableMapping.ColumnMappings.Add("idbod", "idbod")
            tableMapping.ColumnMappings.Add("margmin", "margmin")
            tableMapping.ColumnMappings.Add("margen", "margen")
            tableMapping.ColumnMappings.Add("concomipre", "concomipre")
            tableMapping.ColumnMappings.Add("concomi", "concomi")
            tableMapping.ColumnMappings.Add("fpagopre", "fpagopre")
            tableMapping.ColumnMappings.Add("cualfp", "cualfp")
            tableMapping.ColumnMappings.Add("formatfac", "formatfac")
            tableMapping.ColumnMappings.Add("logofac", "logofac")
            tableMapping.ColumnMappings.Add("formatped", "formatped")
            tableMapping.ColumnMappings.Add("logoped", "logoped")
            tableMapping.ColumnMappings.Add("formatcot", "formatcot")
            tableMapping.ColumnMappings.Add("logocot", "logocot")
            tableMapping.ColumnMappings.Add("tipocompa", "tipocompa")
            tableMapping.ColumnMappings.Add("comentario", "comentario")
            tableMapping.ColumnMappings.Add("imp_dec", "imp_dec")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `saeosteomaterial2012`.`parafacts` WHERE ((`factura` = @Original_fact"& _ 
                "ura) AND (`doc` = @Original_doc) AND (`tipodoc` = @Original_tipodoc) AND (`numfa"& _ 
                "ct` = @Original_numfact) AND (`afecinv` = @Original_afecinv) AND (`fecha` = @Ori"& _ 
                "ginal_fecha) AND (`nitcpre` = @Original_nitcpre) AND (`nitc` = @Original_nitc) A"& _ 
                "ND (`nitvpre` = @Original_nitvpre) AND (`nitv` = @Original_nitv) AND (`codinv` ="& _ 
                " @Original_codinv) AND (`centrocost` = @Original_centrocost) AND (`facdifuniemp`"& _ 
                " = @Original_facdifuniemp) AND (`precautcant` = @Original_precautcant) AND (`bod"& _ 
                "pred` = @Original_bodpred) AND (`idbod` = @Original_idbod) AND (`margmin` = @Ori"& _ 
                "ginal_margmin) AND (`margen` = @Original_margen) AND (`concomipre` = @Original_c"& _ 
                "oncomipre) AND (`concomi` = @Original_concomi) AND (`fpagopre` = @Original_fpago"& _ 
                "pre) AND (`cualfp` = @Original_cualfp) AND (`formatfac` = @Original_formatfac) A"& _ 
                "ND ((@IsNull_logofac = 1 AND `logofac` IS NULL) OR (`logofac` = @Original_logofa"& _ 
                "c)) AND (`formatped` = @Original_formatped) AND ((@IsNull_logoped = 1 AND `logop"& _ 
                "ed` IS NULL) OR (`logoped` = @Original_logoped)) AND (`formatcot` = @Original_fo"& _ 
                "rmatcot) AND ((@IsNull_logocot = 1 AND `logocot` IS NULL) OR (`logocot` = @Origi"& _ 
                "nal_logocot)) AND (`tipocompa` = @Original_tipocompa) AND (`imp_dec` = @Original"& _ 
                "_imp_dec))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_factura"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "factura"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_doc"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "doc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tipodoc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipodoc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_numfact"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "numfact"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_afecinv"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "afecinv"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_fecha"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "fecha"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nitcpre"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "nitcpre"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nitc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nitvpre"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "nitvpre"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nitv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitv"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_codinv"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "codinv"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_centrocost"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "centrocost"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_facdifuniemp"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "facdifuniemp"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_precautcant"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "precautcant"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_bodpred"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "bodpred"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_idbod"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "idbod"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_margmin"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "margmin"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_margen"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "margen"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_concomipre"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "concomipre"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_concomi"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "concomi"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_fpagopre"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "fpagopre"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cualfp"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cualfp"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_formatfac"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "formatfac"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@IsNull_logofac"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "logofac"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_logofac"
            param.DbType = Global.System.Data.DbType.[Object]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Blob
            param.IsNullable = true
            param.SourceColumn = "logofac"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_formatped"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "formatped"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@IsNull_logoped"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "logoped"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_logoped"
            param.DbType = Global.System.Data.DbType.[Object]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Blob
            param.IsNullable = true
            param.SourceColumn = "logoped"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_formatcot"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "formatcot"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@IsNull_logocot"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "logocot"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_logocot"
            param.DbType = Global.System.Data.DbType.[Object]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Blob
            param.IsNullable = true
            param.SourceColumn = "logocot"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tipocompa"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipocompa"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_imp_dec"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "imp_dec"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `saeosteomaterial2012`.`parafacts` (`factura`, `doc`, `tipodoc`, `num"& _ 
                "fact`, `afecinv`, `fecha`, `nitcpre`, `nitc`, `nitvpre`, `nitv`, `codinv`, `cent"& _ 
                "rocost`, `facdifuniemp`, `precautcant`, `bodpred`, `idbod`, `margmin`, `margen`,"& _ 
                " `concomipre`, `concomi`, `fpagopre`, `cualfp`, `formatfac`, `logofac`, `formatp"& _ 
                "ed`, `logoped`, `formatcot`, `logocot`, `tipocompa`, `comentario`, `imp_dec`) VA"& _ 
                "LUES (@factura, @doc, @tipodoc, @numfact, @afecinv, @fecha, @nitcpre, @nitc, @ni"& _ 
                "tvpre, @nitv, @codinv, @centrocost, @facdifuniemp, @precautcant, @bodpred, @idbo"& _ 
                "d, @margmin, @margen, @concomipre, @concomi, @fpagopre, @cualfp, @formatfac, @lo"& _ 
                "gofac, @formatped, @logoped, @formatcot, @logocot, @tipocompa, @comentario, @imp"& _ 
                "_dec)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@factura"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "factura"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@doc"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "doc"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipodoc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipodoc"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@numfact"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "numfact"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@afecinv"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "afecinv"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@fecha"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "fecha"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nitcpre"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "nitcpre"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nitc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitc"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nitvpre"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "nitvpre"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nitv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitv"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@codinv"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "codinv"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@centrocost"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "centrocost"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@facdifuniemp"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "facdifuniemp"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@precautcant"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "precautcant"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@bodpred"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "bodpred"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@idbod"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "idbod"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@margmin"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "margmin"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@margen"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "margen"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@concomipre"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "concomipre"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@concomi"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "concomi"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@fpagopre"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "fpagopre"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cualfp"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cualfp"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@formatfac"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "formatfac"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@logofac"
            param.DbType = Global.System.Data.DbType.[Object]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Blob
            param.IsNullable = true
            param.SourceColumn = "logofac"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@formatped"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "formatped"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@logoped"
            param.DbType = Global.System.Data.DbType.[Object]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Blob
            param.IsNullable = true
            param.SourceColumn = "logoped"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@formatcot"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "formatcot"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@logocot"
            param.DbType = Global.System.Data.DbType.[Object]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Blob
            param.IsNullable = true
            param.SourceColumn = "logocot"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipocompa"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipocompa"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@comentario"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Text
            param.IsNullable = true
            param.SourceColumn = "comentario"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@imp_dec"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "imp_dec"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `saeosteomaterial2012`.`parafacts` SET `factura` = @factura, `doc` = @doc,"& _ 
                " `tipodoc` = @tipodoc, `numfact` = @numfact, `afecinv` = @afecinv, `fecha` = @fe"& _ 
                "cha, `nitcpre` = @nitcpre, `nitc` = @nitc, `nitvpre` = @nitvpre, `nitv` = @nitv,"& _ 
                " `codinv` = @codinv, `centrocost` = @centrocost, `facdifuniemp` = @facdifuniemp,"& _ 
                " `precautcant` = @precautcant, `bodpred` = @bodpred, `idbod` = @idbod, `margmin`"& _ 
                " = @margmin, `margen` = @margen, `concomipre` = @concomipre, `concomi` = @concom"& _ 
                "i, `fpagopre` = @fpagopre, `cualfp` = @cualfp, `formatfac` = @formatfac, `logofa"& _ 
                "c` = @logofac, `formatped` = @formatped, `logoped` = @logoped, `formatcot` = @fo"& _ 
                "rmatcot, `logocot` = @logocot, `tipocompa` = @tipocompa, `comentario` = @comenta"& _ 
                "rio, `imp_dec` = @imp_dec WHERE ((`factura` = @Original_factura) AND (`doc` = @O"& _ 
                "riginal_doc) AND (`tipodoc` = @Original_tipodoc) AND (`numfact` = @Original_numf"& _ 
                "act) AND (`afecinv` = @Original_afecinv) AND (`fecha` = @Original_fecha) AND (`n"& _ 
                "itcpre` = @Original_nitcpre) AND (`nitc` = @Original_nitc) AND (`nitvpre` = @Ori"& _ 
                "ginal_nitvpre) AND (`nitv` = @Original_nitv) AND (`codinv` = @Original_codinv) A"& _ 
                "ND (`centrocost` = @Original_centrocost) AND (`facdifuniemp` = @Original_facdifu"& _ 
                "niemp) AND (`precautcant` = @Original_precautcant) AND (`bodpred` = @Original_bo"& _ 
                "dpred) AND (`idbod` = @Original_idbod) AND (`margmin` = @Original_margmin) AND ("& _ 
                "`margen` = @Original_margen) AND (`concomipre` = @Original_concomipre) AND (`con"& _ 
                "comi` = @Original_concomi) AND (`fpagopre` = @Original_fpagopre) AND (`cualfp` ="& _ 
                " @Original_cualfp) AND (`formatfac` = @Original_formatfac) AND ((@IsNull_logofac"& _ 
                " = 1 AND `logofac` IS NULL) OR (`logofac` = @Original_logofac)) AND (`formatped`"& _ 
                " = @Original_formatped) AND ((@IsNull_logoped = 1 AND `logoped` IS NULL) OR (`lo"& _ 
                "goped` = @Original_logoped)) AND (`formatcot` = @Original_formatcot) AND ((@IsNu"& _ 
                "ll_logocot = 1 AND `logocot` IS NULL) OR (`logocot` = @Original_logocot)) AND (`"& _ 
                "tipocompa` = @Original_tipocompa) AND (`imp_dec` = @Original_imp_dec))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@factura"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "factura"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@doc"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "doc"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipodoc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipodoc"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@numfact"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "numfact"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@afecinv"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "afecinv"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@fecha"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "fecha"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nitcpre"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "nitcpre"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nitc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitc"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nitvpre"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "nitvpre"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nitv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitv"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@codinv"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "codinv"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@centrocost"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "centrocost"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@facdifuniemp"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "facdifuniemp"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@precautcant"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "precautcant"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@bodpred"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "bodpred"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@idbod"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "idbod"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@margmin"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "margmin"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@margen"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "margen"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@concomipre"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "concomipre"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@concomi"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "concomi"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@fpagopre"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "fpagopre"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cualfp"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cualfp"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@formatfac"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "formatfac"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@logofac"
            param.DbType = Global.System.Data.DbType.[Object]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Blob
            param.IsNullable = true
            param.SourceColumn = "logofac"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@formatped"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "formatped"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@logoped"
            param.DbType = Global.System.Data.DbType.[Object]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Blob
            param.IsNullable = true
            param.SourceColumn = "logoped"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@formatcot"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "formatcot"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@logocot"
            param.DbType = Global.System.Data.DbType.[Object]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Blob
            param.IsNullable = true
            param.SourceColumn = "logocot"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipocompa"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipocompa"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@comentario"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Text
            param.IsNullable = true
            param.SourceColumn = "comentario"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@imp_dec"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "imp_dec"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_factura"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "factura"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_doc"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "doc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tipodoc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipodoc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_numfact"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "numfact"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_afecinv"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "afecinv"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_fecha"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "fecha"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nitcpre"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "nitcpre"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nitc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nitvpre"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "nitvpre"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nitv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitv"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_codinv"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "codinv"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_centrocost"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "centrocost"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_facdifuniemp"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "facdifuniemp"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_precautcant"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "precautcant"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_bodpred"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "bodpred"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_idbod"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "idbod"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_margmin"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "margmin"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_margen"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "margen"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_concomipre"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "concomipre"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_concomi"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "concomi"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_fpagopre"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "fpagopre"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cualfp"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cualfp"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_formatfac"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "formatfac"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@IsNull_logofac"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "logofac"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_logofac"
            param.DbType = Global.System.Data.DbType.[Object]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Blob
            param.IsNullable = true
            param.SourceColumn = "logofac"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_formatped"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "formatped"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@IsNull_logoped"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "logoped"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_logoped"
            param.DbType = Global.System.Data.DbType.[Object]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Blob
            param.IsNullable = true
            param.SourceColumn = "logoped"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_formatcot"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "formatcot"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@IsNull_logocot"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "logocot"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_logocot"
            param.DbType = Global.System.Data.DbType.[Object]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Blob
            param.IsNullable = true
            param.SourceColumn = "logocot"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tipocompa"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipocompa"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_imp_dec"
            param.DbType = Global.System.Data.DbType.StringFixedLength
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[String]
            param.IsNullable = true
            param.SourceColumn = "imp_dec"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection
            Me._connection.ConnectionString = Global.SAE.My.MySettings.Default.saeosteomaterial2012ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `factura`, `doc`, `tipodoc`, `numfact`, `afecinv`, `fecha`, `nitcpre`, `ni"& _ 
                "tc`, `nitvpre`, `nitv`, `codinv`, `centrocost`, `facdifuniemp`, `precautcant`, `"& _ 
                "bodpred`, `idbod`, `margmin`, `margen`, `concomipre`, `concomi`, `fpagopre`, `cu"& _ 
                "alfp`, `formatfac`, `logofac`, `formatped`, `logoped`, `formatcot`, `logocot`, `"& _ 
                "tipocompa`, `comentario`, `imp_dec` FROM `saeosteomaterial2012`.`parafacts`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As saeosteomaterial2012DataSet.parafactsDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As saeosteomaterial2012DataSet.parafactsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As saeosteomaterial2012DataSet.parafactsDataTable = New saeosteomaterial2012DataSet.parafactsDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As saeosteomaterial2012DataSet.parafactsDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As saeosteomaterial2012DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "parafacts")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_factura As String,  _
                    ByVal Original_doc As String,  _
                    ByVal Original_tipodoc As String,  _
                    ByVal Original_numfact As String,  _
                    ByVal Original_afecinv As String,  _
                    ByVal Original_fecha As String,  _
                    ByVal Original_nitcpre As String,  _
                    ByVal Original_nitc As String,  _
                    ByVal Original_nitvpre As String,  _
                    ByVal Original_nitv As String,  _
                    ByVal Original_codinv As String,  _
                    ByVal Original_centrocost As String,  _
                    ByVal Original_facdifuniemp As String,  _
                    ByVal Original_precautcant As String,  _
                    ByVal Original_bodpred As String,  _
                    ByVal Original_idbod As String,  _
                    ByVal Original_margmin As String,  _
                    ByVal Original_margen As String,  _
                    ByVal Original_concomipre As String,  _
                    ByVal Original_concomi As String,  _
                    ByVal Original_fpagopre As String,  _
                    ByVal Original_cualfp As String,  _
                    ByVal Original_formatfac As String,  _
                    ByVal Original_logofac As Object,  _
                    ByVal Original_formatped As String,  _
                    ByVal Original_logoped As Object,  _
                    ByVal Original_formatcot As String,  _
                    ByVal Original_logocot As Object,  _
                    ByVal Original_tipocompa As String,  _
                    ByVal Original_imp_dec As String) As Integer
            If (Original_factura Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_factura")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_factura,String)
            End If
            If (Original_doc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_doc")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_doc,String)
            End If
            If (Original_tipodoc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_tipodoc")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_tipodoc,String)
            End If
            If (Original_numfact Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_numfact")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_numfact,String)
            End If
            If (Original_afecinv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_afecinv")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_afecinv,String)
            End If
            If (Original_fecha Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_fecha")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_fecha,String)
            End If
            If (Original_nitcpre Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nitcpre")
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_nitcpre,String)
            End If
            If (Original_nitc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nitc")
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_nitc,String)
            End If
            If (Original_nitvpre Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nitvpre")
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_nitvpre,String)
            End If
            If (Original_nitv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nitv")
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_nitv,String)
            End If
            If (Original_codinv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_codinv")
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_codinv,String)
            End If
            If (Original_centrocost Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_centrocost")
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_centrocost,String)
            End If
            If (Original_facdifuniemp Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_facdifuniemp")
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_facdifuniemp,String)
            End If
            If (Original_precautcant Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_precautcant")
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_precautcant,String)
            End If
            If (Original_bodpred Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_bodpred")
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_bodpred,String)
            End If
            If (Original_idbod Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_idbod")
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_idbod,String)
            End If
            If (Original_margmin Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_margmin")
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_margmin,String)
            End If
            If (Original_margen Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_margen")
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_margen,String)
            End If
            If (Original_concomipre Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_concomipre")
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_concomipre,String)
            End If
            If (Original_concomi Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_concomi")
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_concomi,String)
            End If
            If (Original_fpagopre Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_fpagopre")
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_fpagopre,String)
            End If
            If (Original_cualfp Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cualfp")
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_cualfp,String)
            End If
            If (Original_formatfac Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_formatfac")
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_formatfac,String)
            End If
            If (Original_logofac Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_logofac,Object)
            End If
            If (Original_formatped Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_formatped")
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_formatped,String)
            End If
            If (Original_logoped Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_logoped,Object)
            End If
            If (Original_formatcot Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_formatcot")
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_formatcot,String)
            End If
            If (Original_logocot Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_logocot,Object)
            End If
            If (Original_tipocompa Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_tipocompa")
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_tipocompa,String)
            End If
            If (Original_imp_dec Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_imp_dec")
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_imp_dec,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal factura As String,  _
                    ByVal doc As String,  _
                    ByVal tipodoc As String,  _
                    ByVal numfact As String,  _
                    ByVal afecinv As String,  _
                    ByVal fecha As String,  _
                    ByVal nitcpre As String,  _
                    ByVal nitc As String,  _
                    ByVal nitvpre As String,  _
                    ByVal nitv As String,  _
                    ByVal codinv As String,  _
                    ByVal centrocost As String,  _
                    ByVal facdifuniemp As String,  _
                    ByVal precautcant As String,  _
                    ByVal bodpred As String,  _
                    ByVal idbod As String,  _
                    ByVal margmin As String,  _
                    ByVal margen As String,  _
                    ByVal concomipre As String,  _
                    ByVal concomi As String,  _
                    ByVal fpagopre As String,  _
                    ByVal cualfp As String,  _
                    ByVal formatfac As String,  _
                    ByVal logofac As Object,  _
                    ByVal formatped As String,  _
                    ByVal logoped As Object,  _
                    ByVal formatcot As String,  _
                    ByVal logocot As Object,  _
                    ByVal tipocompa As String,  _
                    ByVal comentario As String,  _
                    ByVal imp_dec As String) As Integer
            If (factura Is Nothing) Then
                Throw New Global.System.ArgumentNullException("factura")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(factura,String)
            End If
            If (doc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("doc")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(doc,String)
            End If
            If (tipodoc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipodoc")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(tipodoc,String)
            End If
            If (numfact Is Nothing) Then
                Throw New Global.System.ArgumentNullException("numfact")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(numfact,String)
            End If
            If (afecinv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("afecinv")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(afecinv,String)
            End If
            If (fecha Is Nothing) Then
                Throw New Global.System.ArgumentNullException("fecha")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(fecha,String)
            End If
            If (nitcpre Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nitcpre")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(nitcpre,String)
            End If
            If (nitc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nitc")
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(nitc,String)
            End If
            If (nitvpre Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nitvpre")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(nitvpre,String)
            End If
            If (nitv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nitv")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(nitv,String)
            End If
            If (codinv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("codinv")
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(codinv,String)
            End If
            If (centrocost Is Nothing) Then
                Throw New Global.System.ArgumentNullException("centrocost")
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(centrocost,String)
            End If
            If (facdifuniemp Is Nothing) Then
                Throw New Global.System.ArgumentNullException("facdifuniemp")
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(facdifuniemp,String)
            End If
            If (precautcant Is Nothing) Then
                Throw New Global.System.ArgumentNullException("precautcant")
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(precautcant,String)
            End If
            If (bodpred Is Nothing) Then
                Throw New Global.System.ArgumentNullException("bodpred")
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(bodpred,String)
            End If
            If (idbod Is Nothing) Then
                Throw New Global.System.ArgumentNullException("idbod")
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(idbod,String)
            End If
            If (margmin Is Nothing) Then
                Throw New Global.System.ArgumentNullException("margmin")
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(margmin,String)
            End If
            If (margen Is Nothing) Then
                Throw New Global.System.ArgumentNullException("margen")
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(margen,String)
            End If
            If (concomipre Is Nothing) Then
                Throw New Global.System.ArgumentNullException("concomipre")
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(concomipre,String)
            End If
            If (concomi Is Nothing) Then
                Throw New Global.System.ArgumentNullException("concomi")
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(concomi,String)
            End If
            If (fpagopre Is Nothing) Then
                Throw New Global.System.ArgumentNullException("fpagopre")
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(fpagopre,String)
            End If
            If (cualfp Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cualfp")
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(cualfp,String)
            End If
            If (formatfac Is Nothing) Then
                Throw New Global.System.ArgumentNullException("formatfac")
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(formatfac,String)
            End If
            If (logofac Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(logofac,Object)
            End If
            If (formatped Is Nothing) Then
                Throw New Global.System.ArgumentNullException("formatped")
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(formatped,String)
            End If
            If (logoped Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(logoped,Object)
            End If
            If (formatcot Is Nothing) Then
                Throw New Global.System.ArgumentNullException("formatcot")
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(formatcot,String)
            End If
            If (logocot Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(logocot,Object)
            End If
            If (tipocompa Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipocompa")
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(tipocompa,String)
            End If
            If (comentario Is Nothing) Then
                Throw New Global.System.ArgumentNullException("comentario")
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(comentario,String)
            End If
            If (imp_dec Is Nothing) Then
                Throw New Global.System.ArgumentNullException("imp_dec")
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(imp_dec,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal factura As String,  _
                    ByVal doc As String,  _
                    ByVal tipodoc As String,  _
                    ByVal numfact As String,  _
                    ByVal afecinv As String,  _
                    ByVal fecha As String,  _
                    ByVal nitcpre As String,  _
                    ByVal nitc As String,  _
                    ByVal nitvpre As String,  _
                    ByVal nitv As String,  _
                    ByVal codinv As String,  _
                    ByVal centrocost As String,  _
                    ByVal facdifuniemp As String,  _
                    ByVal precautcant As String,  _
                    ByVal bodpred As String,  _
                    ByVal idbod As String,  _
                    ByVal margmin As String,  _
                    ByVal margen As String,  _
                    ByVal concomipre As String,  _
                    ByVal concomi As String,  _
                    ByVal fpagopre As String,  _
                    ByVal cualfp As String,  _
                    ByVal formatfac As String,  _
                    ByVal logofac As Object,  _
                    ByVal formatped As String,  _
                    ByVal logoped As Object,  _
                    ByVal formatcot As String,  _
                    ByVal logocot As Object,  _
                    ByVal tipocompa As String,  _
                    ByVal comentario As String,  _
                    ByVal imp_dec As String,  _
                    ByVal Original_factura As String,  _
                    ByVal Original_doc As String,  _
                    ByVal Original_tipodoc As String,  _
                    ByVal Original_numfact As String,  _
                    ByVal Original_afecinv As String,  _
                    ByVal Original_fecha As String,  _
                    ByVal Original_nitcpre As String,  _
                    ByVal Original_nitc As String,  _
                    ByVal Original_nitvpre As String,  _
                    ByVal Original_nitv As String,  _
                    ByVal Original_codinv As String,  _
                    ByVal Original_centrocost As String,  _
                    ByVal Original_facdifuniemp As String,  _
                    ByVal Original_precautcant As String,  _
                    ByVal Original_bodpred As String,  _
                    ByVal Original_idbod As String,  _
                    ByVal Original_margmin As String,  _
                    ByVal Original_margen As String,  _
                    ByVal Original_concomipre As String,  _
                    ByVal Original_concomi As String,  _
                    ByVal Original_fpagopre As String,  _
                    ByVal Original_cualfp As String,  _
                    ByVal Original_formatfac As String,  _
                    ByVal Original_logofac As Object,  _
                    ByVal Original_formatped As String,  _
                    ByVal Original_logoped As Object,  _
                    ByVal Original_formatcot As String,  _
                    ByVal Original_logocot As Object,  _
                    ByVal Original_tipocompa As String,  _
                    ByVal Original_imp_dec As String) As Integer
            If (factura Is Nothing) Then
                Throw New Global.System.ArgumentNullException("factura")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(factura,String)
            End If
            If (doc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("doc")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(doc,String)
            End If
            If (tipodoc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipodoc")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(tipodoc,String)
            End If
            If (numfact Is Nothing) Then
                Throw New Global.System.ArgumentNullException("numfact")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(numfact,String)
            End If
            If (afecinv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("afecinv")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(afecinv,String)
            End If
            If (fecha Is Nothing) Then
                Throw New Global.System.ArgumentNullException("fecha")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(fecha,String)
            End If
            If (nitcpre Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nitcpre")
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(nitcpre,String)
            End If
            If (nitc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nitc")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(nitc,String)
            End If
            If (nitvpre Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nitvpre")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(nitvpre,String)
            End If
            If (nitv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nitv")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(nitv,String)
            End If
            If (codinv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("codinv")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(codinv,String)
            End If
            If (centrocost Is Nothing) Then
                Throw New Global.System.ArgumentNullException("centrocost")
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(centrocost,String)
            End If
            If (facdifuniemp Is Nothing) Then
                Throw New Global.System.ArgumentNullException("facdifuniemp")
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(facdifuniemp,String)
            End If
            If (precautcant Is Nothing) Then
                Throw New Global.System.ArgumentNullException("precautcant")
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(precautcant,String)
            End If
            If (bodpred Is Nothing) Then
                Throw New Global.System.ArgumentNullException("bodpred")
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(bodpred,String)
            End If
            If (idbod Is Nothing) Then
                Throw New Global.System.ArgumentNullException("idbod")
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(idbod,String)
            End If
            If (margmin Is Nothing) Then
                Throw New Global.System.ArgumentNullException("margmin")
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(margmin,String)
            End If
            If (margen Is Nothing) Then
                Throw New Global.System.ArgumentNullException("margen")
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(margen,String)
            End If
            If (concomipre Is Nothing) Then
                Throw New Global.System.ArgumentNullException("concomipre")
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(concomipre,String)
            End If
            If (concomi Is Nothing) Then
                Throw New Global.System.ArgumentNullException("concomi")
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(concomi,String)
            End If
            If (fpagopre Is Nothing) Then
                Throw New Global.System.ArgumentNullException("fpagopre")
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(fpagopre,String)
            End If
            If (cualfp Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cualfp")
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(cualfp,String)
            End If
            If (formatfac Is Nothing) Then
                Throw New Global.System.ArgumentNullException("formatfac")
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(formatfac,String)
            End If
            If (logofac Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(logofac,Object)
            End If
            If (formatped Is Nothing) Then
                Throw New Global.System.ArgumentNullException("formatped")
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(formatped,String)
            End If
            If (logoped Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(logoped,Object)
            End If
            If (formatcot Is Nothing) Then
                Throw New Global.System.ArgumentNullException("formatcot")
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(formatcot,String)
            End If
            If (logocot Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(logocot,Object)
            End If
            If (tipocompa Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipocompa")
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(tipocompa,String)
            End If
            If (comentario Is Nothing) Then
                Throw New Global.System.ArgumentNullException("comentario")
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(comentario,String)
            End If
            If (imp_dec Is Nothing) Then
                Throw New Global.System.ArgumentNullException("imp_dec")
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(imp_dec,String)
            End If
            If (Original_factura Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_factura")
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_factura,String)
            End If
            If (Original_doc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_doc")
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_doc,String)
            End If
            If (Original_tipodoc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_tipodoc")
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_tipodoc,String)
            End If
            If (Original_numfact Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_numfact")
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_numfact,String)
            End If
            If (Original_afecinv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_afecinv")
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_afecinv,String)
            End If
            If (Original_fecha Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_fecha")
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_fecha,String)
            End If
            If (Original_nitcpre Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nitcpre")
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_nitcpre,String)
            End If
            If (Original_nitc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nitc")
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_nitc,String)
            End If
            If (Original_nitvpre Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nitvpre")
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_nitvpre,String)
            End If
            If (Original_nitv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nitv")
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_nitv,String)
            End If
            If (Original_codinv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_codinv")
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_codinv,String)
            End If
            If (Original_centrocost Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_centrocost")
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_centrocost,String)
            End If
            If (Original_facdifuniemp Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_facdifuniemp")
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_facdifuniemp,String)
            End If
            If (Original_precautcant Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_precautcant")
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_precautcant,String)
            End If
            If (Original_bodpred Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_bodpred")
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_bodpred,String)
            End If
            If (Original_idbod Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_idbod")
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_idbod,String)
            End If
            If (Original_margmin Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_margmin")
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_margmin,String)
            End If
            If (Original_margen Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_margen")
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_margen,String)
            End If
            If (Original_concomipre Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_concomipre")
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_concomipre,String)
            End If
            If (Original_concomi Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_concomi")
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_concomi,String)
            End If
            If (Original_fpagopre Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_fpagopre")
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_fpagopre,String)
            End If
            If (Original_cualfp Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cualfp")
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_cualfp,String)
            End If
            If (Original_formatfac Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_formatfac")
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_formatfac,String)
            End If
            If (Original_logofac Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_logofac,Object)
            End If
            If (Original_formatped Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_formatped")
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_formatped,String)
            End If
            If (Original_logoped Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_logoped,Object)
            End If
            If (Original_formatcot Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_formatcot")
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_formatcot,String)
            End If
            If (Original_logocot Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_logocot,Object)
            End If
            If (Original_tipocompa Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_tipocompa")
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_tipocompa,String)
            End If
            If (Original_imp_dec Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_imp_dec")
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_imp_dec,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal doc As String,  _
                    ByVal tipodoc As String,  _
                    ByVal numfact As String,  _
                    ByVal afecinv As String,  _
                    ByVal fecha As String,  _
                    ByVal nitcpre As String,  _
                    ByVal nitc As String,  _
                    ByVal nitvpre As String,  _
                    ByVal nitv As String,  _
                    ByVal codinv As String,  _
                    ByVal centrocost As String,  _
                    ByVal facdifuniemp As String,  _
                    ByVal precautcant As String,  _
                    ByVal bodpred As String,  _
                    ByVal idbod As String,  _
                    ByVal margmin As String,  _
                    ByVal margen As String,  _
                    ByVal concomipre As String,  _
                    ByVal concomi As String,  _
                    ByVal fpagopre As String,  _
                    ByVal cualfp As String,  _
                    ByVal formatfac As String,  _
                    ByVal logofac As Object,  _
                    ByVal formatped As String,  _
                    ByVal logoped As Object,  _
                    ByVal formatcot As String,  _
                    ByVal logocot As Object,  _
                    ByVal tipocompa As String,  _
                    ByVal comentario As String,  _
                    ByVal imp_dec As String,  _
                    ByVal Original_factura As String,  _
                    ByVal Original_doc As String,  _
                    ByVal Original_tipodoc As String,  _
                    ByVal Original_numfact As String,  _
                    ByVal Original_afecinv As String,  _
                    ByVal Original_fecha As String,  _
                    ByVal Original_nitcpre As String,  _
                    ByVal Original_nitc As String,  _
                    ByVal Original_nitvpre As String,  _
                    ByVal Original_nitv As String,  _
                    ByVal Original_codinv As String,  _
                    ByVal Original_centrocost As String,  _
                    ByVal Original_facdifuniemp As String,  _
                    ByVal Original_precautcant As String,  _
                    ByVal Original_bodpred As String,  _
                    ByVal Original_idbod As String,  _
                    ByVal Original_margmin As String,  _
                    ByVal Original_margen As String,  _
                    ByVal Original_concomipre As String,  _
                    ByVal Original_concomi As String,  _
                    ByVal Original_fpagopre As String,  _
                    ByVal Original_cualfp As String,  _
                    ByVal Original_formatfac As String,  _
                    ByVal Original_logofac As Object,  _
                    ByVal Original_formatped As String,  _
                    ByVal Original_logoped As Object,  _
                    ByVal Original_formatcot As String,  _
                    ByVal Original_logocot As Object,  _
                    ByVal Original_tipocompa As String,  _
                    ByVal Original_imp_dec As String) As Integer
            Return Me.Update(Original_factura, doc, tipodoc, numfact, afecinv, fecha, nitcpre, nitc, nitvpre, nitv, codinv, centrocost, facdifuniemp, precautcant, bodpred, idbod, margmin, margen, concomipre, concomi, fpagopre, cualfp, formatfac, logofac, formatped, logoped, formatcot, logocot, tipocompa, comentario, imp_dec, Original_factura, Original_doc, Original_tipodoc, Original_numfact, Original_afecinv, Original_fecha, Original_nitcpre, Original_nitc, Original_nitvpre, Original_nitv, Original_codinv, Original_centrocost, Original_facdifuniemp, Original_precautcant, Original_bodpred, Original_idbod, Original_margmin, Original_margen, Original_concomipre, Original_concomi, Original_fpagopre, Original_cualfp, Original_formatfac, Original_logofac, Original_formatped, Original_logoped, Original_formatcot, Original_logocot, Original_tipocompa, Original_imp_dec)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class selpucTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "selpuc"
            tableMapping.ColumnMappings.Add("codigo", "codigo")
            tableMapping.ColumnMappings.Add("descripcion", "descripcion")
            tableMapping.ColumnMappings.Add("naturaleza", "naturaleza")
            tableMapping.ColumnMappings.Add("nivel", "nivel")
            tableMapping.ColumnMappings.Add("tipo", "tipo")
            tableMapping.ColumnMappings.Add("saldo", "saldo")
            tableMapping.ColumnMappings.Add("saldo00", "saldo00")
            tableMapping.ColumnMappings.Add("debito00", "debito00")
            tableMapping.ColumnMappings.Add("credito00", "credito00")
            tableMapping.ColumnMappings.Add("debito01", "debito01")
            tableMapping.ColumnMappings.Add("credito01", "credito01")
            tableMapping.ColumnMappings.Add("saldo01", "saldo01")
            tableMapping.ColumnMappings.Add("debito02", "debito02")
            tableMapping.ColumnMappings.Add("credito02", "credito02")
            tableMapping.ColumnMappings.Add("saldo02", "saldo02")
            tableMapping.ColumnMappings.Add("debito03", "debito03")
            tableMapping.ColumnMappings.Add("credito03", "credito03")
            tableMapping.ColumnMappings.Add("saldo03", "saldo03")
            tableMapping.ColumnMappings.Add("debito04", "debito04")
            tableMapping.ColumnMappings.Add("credito04", "credito04")
            tableMapping.ColumnMappings.Add("saldo04", "saldo04")
            tableMapping.ColumnMappings.Add("debito05", "debito05")
            tableMapping.ColumnMappings.Add("credito05", "credito05")
            tableMapping.ColumnMappings.Add("saldo05", "saldo05")
            tableMapping.ColumnMappings.Add("debito06", "debito06")
            tableMapping.ColumnMappings.Add("credito06", "credito06")
            tableMapping.ColumnMappings.Add("saldo06", "saldo06")
            tableMapping.ColumnMappings.Add("debito07", "debito07")
            tableMapping.ColumnMappings.Add("credito07", "credito07")
            tableMapping.ColumnMappings.Add("saldo07", "saldo07")
            tableMapping.ColumnMappings.Add("debito08", "debito08")
            tableMapping.ColumnMappings.Add("credito08", "credito08")
            tableMapping.ColumnMappings.Add("saldo08", "saldo08")
            tableMapping.ColumnMappings.Add("debito09", "debito09")
            tableMapping.ColumnMappings.Add("credito09", "credito09")
            tableMapping.ColumnMappings.Add("saldo09", "saldo09")
            tableMapping.ColumnMappings.Add("debito10", "debito10")
            tableMapping.ColumnMappings.Add("credito10", "credito10")
            tableMapping.ColumnMappings.Add("saldo10", "saldo10")
            tableMapping.ColumnMappings.Add("debito11", "debito11")
            tableMapping.ColumnMappings.Add("credito11", "credito11")
            tableMapping.ColumnMappings.Add("saldo11", "saldo11")
            tableMapping.ColumnMappings.Add("debito12", "debito12")
            tableMapping.ColumnMappings.Add("credito12", "credito12")
            tableMapping.ColumnMappings.Add("saldo12", "saldo12")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `saeosteomaterial2012`.`selpuc` WHERE ((`codigo` = @Original_codigo) "& _ 
                "AND (`descripcion` = @Original_descripcion) AND (`naturaleza` = @Original_natura"& _ 
                "leza) AND (`nivel` = @Original_nivel) AND (`tipo` = @Original_tipo) AND (`saldo`"& _ 
                " = @Original_saldo) AND (`saldo00` = @Original_saldo00) AND (`debito00` = @Origi"& _ 
                "nal_debito00) AND (`credito00` = @Original_credito00) AND (`debito01` = @Origina"& _ 
                "l_debito01) AND (`credito01` = @Original_credito01) AND (`saldo01` = @Original_s"& _ 
                "aldo01) AND (`debito02` = @Original_debito02) AND (`credito02` = @Original_credi"& _ 
                "to02) AND (`saldo02` = @Original_saldo02) AND (`debito03` = @Original_debito03) "& _ 
                "AND (`credito03` = @Original_credito03) AND (`saldo03` = @Original_saldo03) AND "& _ 
                "(`debito04` = @Original_debito04) AND (`credito04` = @Original_credito04) AND (`"& _ 
                "saldo04` = @Original_saldo04) AND (`debito05` = @Original_debito05) AND (`credit"& _ 
                "o05` = @Original_credito05) AND (`saldo05` = @Original_saldo05) AND (`debito06` "& _ 
                "= @Original_debito06) AND (`credito06` = @Original_credito06) AND (`saldo06` = @"& _ 
                "Original_saldo06) AND (`debito07` = @Original_debito07) AND (`credito07` = @Orig"& _ 
                "inal_credito07) AND (`saldo07` = @Original_saldo07) AND (`debito08` = @Original_"& _ 
                "debito08) AND (`credito08` = @Original_credito08) AND (`saldo08` = @Original_sal"& _ 
                "do08) AND (`debito09` = @Original_debito09) AND (`credito09` = @Original_credito"& _ 
                "09) AND (`saldo09` = @Original_saldo09) AND (`debito10` = @Original_debito10) AN"& _ 
                "D (`credito10` = @Original_credito10) AND (`saldo10` = @Original_saldo10) AND (`"& _ 
                "debito11` = @Original_debito11) AND (`credito11` = @Original_credito11) AND (`sa"& _ 
                "ldo11` = @Original_saldo11) AND (`debito12` = @Original_debito12) AND (`credito1"& _ 
                "2` = @Original_credito12) AND (`saldo12` = @Original_saldo12))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_codigo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "codigo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_descripcion"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "descripcion"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_naturaleza"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "naturaleza"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nivel"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nivel"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tipo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_saldo"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_saldo00"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo00"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_debito00"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito00"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_credito00"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito00"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_debito01"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito01"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_credito01"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito01"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_saldo01"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo01"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_debito02"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito02"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_credito02"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito02"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_saldo02"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo02"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_debito03"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito03"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_credito03"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito03"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_saldo03"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo03"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_debito04"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito04"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_credito04"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito04"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_saldo04"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo04"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_debito05"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito05"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_credito05"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito05"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_saldo05"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo05"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_debito06"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito06"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_credito06"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito06"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_saldo06"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo06"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_debito07"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito07"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_credito07"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito07"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_saldo07"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo07"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_debito08"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito08"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_credito08"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito08"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_saldo08"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo08"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_debito09"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito09"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_credito09"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito09"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_saldo09"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo09"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_debito10"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito10"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_credito10"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito10"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_saldo10"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo10"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_debito11"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito11"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_credito11"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito11"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_saldo11"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo11"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_debito12"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito12"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_credito12"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito12"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_saldo12"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo12"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `saeosteomaterial2012`.`selpuc` (`codigo`, `descripcion`, `naturaleza"& _ 
                "`, `nivel`, `tipo`, `saldo`, `saldo00`, `debito00`, `credito00`, `debito01`, `cr"& _ 
                "edito01`, `saldo01`, `debito02`, `credito02`, `saldo02`, `debito03`, `credito03`"& _ 
                ", `saldo03`, `debito04`, `credito04`, `saldo04`, `debito05`, `credito05`, `saldo"& _ 
                "05`, `debito06`, `credito06`, `saldo06`, `debito07`, `credito07`, `saldo07`, `de"& _ 
                "bito08`, `credito08`, `saldo08`, `debito09`, `credito09`, `saldo09`, `debito10`,"& _ 
                " `credito10`, `saldo10`, `debito11`, `credito11`, `saldo11`, `debito12`, `credit"& _ 
                "o12`, `saldo12`) VALUES (@codigo, @descripcion, @naturaleza, @nivel, @tipo, @sal"& _ 
                "do, @saldo00, @debito00, @credito00, @debito01, @credito01, @saldo01, @debito02,"& _ 
                " @credito02, @saldo02, @debito03, @credito03, @saldo03, @debito04, @credito04, @"& _ 
                "saldo04, @debito05, @credito05, @saldo05, @debito06, @credito06, @saldo06, @debi"& _ 
                "to07, @credito07, @saldo07, @debito08, @credito08, @saldo08, @debito09, @credito"& _ 
                "09, @saldo09, @debito10, @credito10, @saldo10, @debito11, @credito11, @saldo11, "& _ 
                "@debito12, @credito12, @saldo12)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@codigo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "codigo"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@descripcion"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "descripcion"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@naturaleza"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "naturaleza"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nivel"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nivel"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipo"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@saldo"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@saldo00"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo00"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@debito00"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito00"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@credito00"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito00"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@debito01"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito01"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@credito01"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito01"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@saldo01"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo01"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@debito02"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito02"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@credito02"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito02"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@saldo02"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo02"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@debito03"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito03"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@credito03"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito03"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@saldo03"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo03"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@debito04"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito04"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@credito04"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito04"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@saldo04"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo04"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@debito05"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito05"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@credito05"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito05"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@saldo05"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo05"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@debito06"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito06"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@credito06"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito06"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@saldo06"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo06"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@debito07"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito07"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@credito07"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito07"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@saldo07"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo07"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@debito08"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito08"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@credito08"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito08"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@saldo08"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo08"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@debito09"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito09"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@credito09"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito09"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@saldo09"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo09"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@debito10"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito10"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@credito10"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito10"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@saldo10"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo10"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@debito11"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito11"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@credito11"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito11"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@saldo11"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo11"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@debito12"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito12"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@credito12"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito12"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@saldo12"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo12"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `saeosteomaterial2012`.`selpuc` SET `codigo` = @codigo, `descripcion` = @d"& _ 
                "escripcion, `naturaleza` = @naturaleza, `nivel` = @nivel, `tipo` = @tipo, `saldo"& _ 
                "` = @saldo, `saldo00` = @saldo00, `debito00` = @debito00, `credito00` = @credito"& _ 
                "00, `debito01` = @debito01, `credito01` = @credito01, `saldo01` = @saldo01, `deb"& _ 
                "ito02` = @debito02, `credito02` = @credito02, `saldo02` = @saldo02, `debito03` ="& _ 
                " @debito03, `credito03` = @credito03, `saldo03` = @saldo03, `debito04` = @debito"& _ 
                "04, `credito04` = @credito04, `saldo04` = @saldo04, `debito05` = @debito05, `cre"& _ 
                "dito05` = @credito05, `saldo05` = @saldo05, `debito06` = @debito06, `credito06` "& _ 
                "= @credito06, `saldo06` = @saldo06, `debito07` = @debito07, `credito07` = @credi"& _ 
                "to07, `saldo07` = @saldo07, `debito08` = @debito08, `credito08` = @credito08, `s"& _ 
                "aldo08` = @saldo08, `debito09` = @debito09, `credito09` = @credito09, `saldo09` "& _ 
                "= @saldo09, `debito10` = @debito10, `credito10` = @credito10, `saldo10` = @saldo"& _ 
                "10, `debito11` = @debito11, `credito11` = @credito11, `saldo11` = @saldo11, `deb"& _ 
                "ito12` = @debito12, `credito12` = @credito12, `saldo12` = @saldo12 WHERE ((`codi"& _ 
                "go` = @Original_codigo) AND (`descripcion` = @Original_descripcion) AND (`natura"& _ 
                "leza` = @Original_naturaleza) AND (`nivel` = @Original_nivel) AND (`tipo` = @Ori"& _ 
                "ginal_tipo) AND (`saldo` = @Original_saldo) AND (`saldo00` = @Original_saldo00) "& _ 
                "AND (`debito00` = @Original_debito00) AND (`credito00` = @Original_credito00) AN"& _ 
                "D (`debito01` = @Original_debito01) AND (`credito01` = @Original_credito01) AND "& _ 
                "(`saldo01` = @Original_saldo01) AND (`debito02` = @Original_debito02) AND (`cred"& _ 
                "ito02` = @Original_credito02) AND (`saldo02` = @Original_saldo02) AND (`debito03"& _ 
                "` = @Original_debito03) AND (`credito03` = @Original_credito03) AND (`saldo03` ="& _ 
                " @Original_saldo03) AND (`debito04` = @Original_debito04) AND (`credito04` = @Or"& _ 
                "iginal_credito04) AND (`saldo04` = @Original_saldo04) AND (`debito05` = @Origina"& _ 
                "l_debito05) AND (`credito05` = @Original_credito05) AND (`saldo05` = @Original_s"& _ 
                "aldo05) AND (`debito06` = @Original_debito06) AND (`credito06` = @Original_credi"& _ 
                "to06) AND (`saldo06` = @Original_saldo06) AND (`debito07` = @Original_debito07) "& _ 
                "AND (`credito07` = @Original_credito07) AND (`saldo07` = @Original_saldo07) AND "& _ 
                "(`debito08` = @Original_debito08) AND (`credito08` = @Original_credito08) AND (`"& _ 
                "saldo08` = @Original_saldo08) AND (`debito09` = @Original_debito09) AND (`credit"& _ 
                "o09` = @Original_credito09) AND (`saldo09` = @Original_saldo09) AND (`debito10` "& _ 
                "= @Original_debito10) AND (`credito10` = @Original_credito10) AND (`saldo10` = @"& _ 
                "Original_saldo10) AND (`debito11` = @Original_debito11) AND (`credito11` = @Orig"& _ 
                "inal_credito11) AND (`saldo11` = @Original_saldo11) AND (`debito12` = @Original_"& _ 
                "debito12) AND (`credito12` = @Original_credito12) AND (`saldo12` = @Original_sal"& _ 
                "do12))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@codigo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "codigo"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@descripcion"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "descripcion"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@naturaleza"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "naturaleza"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nivel"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nivel"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipo"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@saldo"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@saldo00"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo00"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@debito00"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito00"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@credito00"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito00"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@debito01"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito01"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@credito01"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito01"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@saldo01"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo01"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@debito02"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito02"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@credito02"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito02"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@saldo02"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo02"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@debito03"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito03"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@credito03"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito03"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@saldo03"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo03"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@debito04"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito04"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@credito04"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito04"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@saldo04"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo04"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@debito05"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito05"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@credito05"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito05"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@saldo05"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo05"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@debito06"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito06"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@credito06"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito06"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@saldo06"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo06"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@debito07"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito07"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@credito07"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito07"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@saldo07"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo07"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@debito08"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito08"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@credito08"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito08"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@saldo08"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo08"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@debito09"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito09"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@credito09"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito09"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@saldo09"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo09"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@debito10"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito10"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@credito10"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito10"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@saldo10"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo10"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@debito11"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito11"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@credito11"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito11"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@saldo11"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo11"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@debito12"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito12"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@credito12"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito12"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@saldo12"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo12"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_codigo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "codigo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_descripcion"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "descripcion"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_naturaleza"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "naturaleza"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nivel"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nivel"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tipo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_saldo"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_saldo00"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo00"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_debito00"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito00"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_credito00"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito00"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_debito01"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito01"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_credito01"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito01"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_saldo01"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo01"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_debito02"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito02"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_credito02"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito02"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_saldo02"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo02"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_debito03"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito03"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_credito03"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito03"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_saldo03"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo03"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_debito04"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito04"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_credito04"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito04"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_saldo04"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo04"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_debito05"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito05"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_credito05"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito05"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_saldo05"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo05"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_debito06"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito06"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_credito06"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito06"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_saldo06"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo06"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_debito07"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito07"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_credito07"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito07"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_saldo07"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo07"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_debito08"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito08"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_credito08"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito08"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_saldo08"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo08"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_debito09"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito09"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_credito09"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito09"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_saldo09"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo09"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_debito10"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito10"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_credito10"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito10"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_saldo10"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo10"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_debito11"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito11"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_credito11"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito11"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_saldo11"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo11"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_debito12"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito12"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_credito12"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito12"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_saldo12"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "saldo12"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection
            Me._connection.ConnectionString = Global.SAE.My.MySettings.Default.saeosteomaterial2012ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `codigo`, `descripcion`, `naturaleza`, `nivel`, `tipo`, `saldo`, `saldo00`"& _ 
                ", `debito00`, `credito00`, `debito01`, `credito01`, `saldo01`, `debito02`, `cred"& _ 
                "ito02`, `saldo02`, `debito03`, `credito03`, `saldo03`, `debito04`, `credito04`, "& _ 
                "`saldo04`, `debito05`, `credito05`, `saldo05`, `debito06`, `credito06`, `saldo06"& _ 
                "`, `debito07`, `credito07`, `saldo07`, `debito08`, `credito08`, `saldo08`, `debi"& _ 
                "to09`, `credito09`, `saldo09`, `debito10`, `credito10`, `saldo10`, `debito11`, `"& _ 
                "credito11`, `saldo11`, `debito12`, `credito12`, `saldo12` FROM `saeosteomaterial"& _ 
                "2012`.`selpuc`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As saeosteomaterial2012DataSet.selpucDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As saeosteomaterial2012DataSet.selpucDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As saeosteomaterial2012DataSet.selpucDataTable = New saeosteomaterial2012DataSet.selpucDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As saeosteomaterial2012DataSet.selpucDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As saeosteomaterial2012DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "selpuc")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_codigo As String,  _
                    ByVal Original_descripcion As String,  _
                    ByVal Original_naturaleza As String,  _
                    ByVal Original_nivel As String,  _
                    ByVal Original_tipo As String,  _
                    ByVal Original_saldo As Double,  _
                    ByVal Original_saldo00 As Double,  _
                    ByVal Original_debito00 As Double,  _
                    ByVal Original_credito00 As Double,  _
                    ByVal Original_debito01 As Double,  _
                    ByVal Original_credito01 As Double,  _
                    ByVal Original_saldo01 As Double,  _
                    ByVal Original_debito02 As Double,  _
                    ByVal Original_credito02 As Double,  _
                    ByVal Original_saldo02 As Double,  _
                    ByVal Original_debito03 As Double,  _
                    ByVal Original_credito03 As Double,  _
                    ByVal Original_saldo03 As Double,  _
                    ByVal Original_debito04 As Double,  _
                    ByVal Original_credito04 As Double,  _
                    ByVal Original_saldo04 As Double,  _
                    ByVal Original_debito05 As Double,  _
                    ByVal Original_credito05 As Double,  _
                    ByVal Original_saldo05 As Double,  _
                    ByVal Original_debito06 As Double,  _
                    ByVal Original_credito06 As Double,  _
                    ByVal Original_saldo06 As Double,  _
                    ByVal Original_debito07 As Double,  _
                    ByVal Original_credito07 As Double,  _
                    ByVal Original_saldo07 As Double,  _
                    ByVal Original_debito08 As Double,  _
                    ByVal Original_credito08 As Double,  _
                    ByVal Original_saldo08 As Double,  _
                    ByVal Original_debito09 As Double,  _
                    ByVal Original_credito09 As Double,  _
                    ByVal Original_saldo09 As Double,  _
                    ByVal Original_debito10 As Double,  _
                    ByVal Original_credito10 As Double,  _
                    ByVal Original_saldo10 As Double,  _
                    ByVal Original_debito11 As Double,  _
                    ByVal Original_credito11 As Double,  _
                    ByVal Original_saldo11 As Double,  _
                    ByVal Original_debito12 As Double,  _
                    ByVal Original_credito12 As Double,  _
                    ByVal Original_saldo12 As Double) As Integer
            If (Original_codigo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_codigo")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_codigo,String)
            End If
            If (Original_descripcion Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_descripcion")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_descripcion,String)
            End If
            If (Original_naturaleza Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_naturaleza")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_naturaleza,String)
            End If
            If (Original_nivel Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nivel")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_nivel,String)
            End If
            If (Original_tipo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_tipo")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_tipo,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_saldo,Double)
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_saldo00,Double)
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_debito00,Double)
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_credito00,Double)
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_debito01,Double)
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_credito01,Double)
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_saldo01,Double)
            Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_debito02,Double)
            Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_credito02,Double)
            Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_saldo02,Double)
            Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_debito03,Double)
            Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_credito03,Double)
            Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_saldo03,Double)
            Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_debito04,Double)
            Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_credito04,Double)
            Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_saldo04,Double)
            Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_debito05,Double)
            Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_credito05,Double)
            Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_saldo05,Double)
            Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_debito06,Double)
            Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_credito06,Double)
            Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_saldo06,Double)
            Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_debito07,Double)
            Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_credito07,Double)
            Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_saldo07,Double)
            Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_debito08,Double)
            Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_credito08,Double)
            Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_saldo08,Double)
            Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_debito09,Double)
            Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_credito09,Double)
            Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_saldo09,Double)
            Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_debito10,Double)
            Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_credito10,Double)
            Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_saldo10,Double)
            Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_debito11,Double)
            Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_credito11,Double)
            Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_saldo11,Double)
            Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_debito12,Double)
            Me.Adapter.DeleteCommand.Parameters(43).Value = CType(Original_credito12,Double)
            Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_saldo12,Double)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal codigo As String,  _
                    ByVal descripcion As String,  _
                    ByVal naturaleza As String,  _
                    ByVal nivel As String,  _
                    ByVal tipo As String,  _
                    ByVal saldo As Double,  _
                    ByVal saldo00 As Double,  _
                    ByVal debito00 As Double,  _
                    ByVal credito00 As Double,  _
                    ByVal debito01 As Double,  _
                    ByVal credito01 As Double,  _
                    ByVal saldo01 As Double,  _
                    ByVal debito02 As Double,  _
                    ByVal credito02 As Double,  _
                    ByVal saldo02 As Double,  _
                    ByVal debito03 As Double,  _
                    ByVal credito03 As Double,  _
                    ByVal saldo03 As Double,  _
                    ByVal debito04 As Double,  _
                    ByVal credito04 As Double,  _
                    ByVal saldo04 As Double,  _
                    ByVal debito05 As Double,  _
                    ByVal credito05 As Double,  _
                    ByVal saldo05 As Double,  _
                    ByVal debito06 As Double,  _
                    ByVal credito06 As Double,  _
                    ByVal saldo06 As Double,  _
                    ByVal debito07 As Double,  _
                    ByVal credito07 As Double,  _
                    ByVal saldo07 As Double,  _
                    ByVal debito08 As Double,  _
                    ByVal credito08 As Double,  _
                    ByVal saldo08 As Double,  _
                    ByVal debito09 As Double,  _
                    ByVal credito09 As Double,  _
                    ByVal saldo09 As Double,  _
                    ByVal debito10 As Double,  _
                    ByVal credito10 As Double,  _
                    ByVal saldo10 As Double,  _
                    ByVal debito11 As Double,  _
                    ByVal credito11 As Double,  _
                    ByVal saldo11 As Double,  _
                    ByVal debito12 As Double,  _
                    ByVal credito12 As Double,  _
                    ByVal saldo12 As Double) As Integer
            If (codigo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("codigo")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(codigo,String)
            End If
            If (descripcion Is Nothing) Then
                Throw New Global.System.ArgumentNullException("descripcion")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(descripcion,String)
            End If
            If (naturaleza Is Nothing) Then
                Throw New Global.System.ArgumentNullException("naturaleza")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(naturaleza,String)
            End If
            If (nivel Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nivel")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(nivel,String)
            End If
            If (tipo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipo")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(tipo,String)
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(saldo,Double)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(saldo00,Double)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(debito00,Double)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(credito00,Double)
            Me.Adapter.InsertCommand.Parameters(9).Value = CType(debito01,Double)
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(credito01,Double)
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(saldo01,Double)
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(debito02,Double)
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(credito02,Double)
            Me.Adapter.InsertCommand.Parameters(14).Value = CType(saldo02,Double)
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(debito03,Double)
            Me.Adapter.InsertCommand.Parameters(16).Value = CType(credito03,Double)
            Me.Adapter.InsertCommand.Parameters(17).Value = CType(saldo03,Double)
            Me.Adapter.InsertCommand.Parameters(18).Value = CType(debito04,Double)
            Me.Adapter.InsertCommand.Parameters(19).Value = CType(credito04,Double)
            Me.Adapter.InsertCommand.Parameters(20).Value = CType(saldo04,Double)
            Me.Adapter.InsertCommand.Parameters(21).Value = CType(debito05,Double)
            Me.Adapter.InsertCommand.Parameters(22).Value = CType(credito05,Double)
            Me.Adapter.InsertCommand.Parameters(23).Value = CType(saldo05,Double)
            Me.Adapter.InsertCommand.Parameters(24).Value = CType(debito06,Double)
            Me.Adapter.InsertCommand.Parameters(25).Value = CType(credito06,Double)
            Me.Adapter.InsertCommand.Parameters(26).Value = CType(saldo06,Double)
            Me.Adapter.InsertCommand.Parameters(27).Value = CType(debito07,Double)
            Me.Adapter.InsertCommand.Parameters(28).Value = CType(credito07,Double)
            Me.Adapter.InsertCommand.Parameters(29).Value = CType(saldo07,Double)
            Me.Adapter.InsertCommand.Parameters(30).Value = CType(debito08,Double)
            Me.Adapter.InsertCommand.Parameters(31).Value = CType(credito08,Double)
            Me.Adapter.InsertCommand.Parameters(32).Value = CType(saldo08,Double)
            Me.Adapter.InsertCommand.Parameters(33).Value = CType(debito09,Double)
            Me.Adapter.InsertCommand.Parameters(34).Value = CType(credito09,Double)
            Me.Adapter.InsertCommand.Parameters(35).Value = CType(saldo09,Double)
            Me.Adapter.InsertCommand.Parameters(36).Value = CType(debito10,Double)
            Me.Adapter.InsertCommand.Parameters(37).Value = CType(credito10,Double)
            Me.Adapter.InsertCommand.Parameters(38).Value = CType(saldo10,Double)
            Me.Adapter.InsertCommand.Parameters(39).Value = CType(debito11,Double)
            Me.Adapter.InsertCommand.Parameters(40).Value = CType(credito11,Double)
            Me.Adapter.InsertCommand.Parameters(41).Value = CType(saldo11,Double)
            Me.Adapter.InsertCommand.Parameters(42).Value = CType(debito12,Double)
            Me.Adapter.InsertCommand.Parameters(43).Value = CType(credito12,Double)
            Me.Adapter.InsertCommand.Parameters(44).Value = CType(saldo12,Double)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal codigo As String,  _
                    ByVal descripcion As String,  _
                    ByVal naturaleza As String,  _
                    ByVal nivel As String,  _
                    ByVal tipo As String,  _
                    ByVal saldo As Double,  _
                    ByVal saldo00 As Double,  _
                    ByVal debito00 As Double,  _
                    ByVal credito00 As Double,  _
                    ByVal debito01 As Double,  _
                    ByVal credito01 As Double,  _
                    ByVal saldo01 As Double,  _
                    ByVal debito02 As Double,  _
                    ByVal credito02 As Double,  _
                    ByVal saldo02 As Double,  _
                    ByVal debito03 As Double,  _
                    ByVal credito03 As Double,  _
                    ByVal saldo03 As Double,  _
                    ByVal debito04 As Double,  _
                    ByVal credito04 As Double,  _
                    ByVal saldo04 As Double,  _
                    ByVal debito05 As Double,  _
                    ByVal credito05 As Double,  _
                    ByVal saldo05 As Double,  _
                    ByVal debito06 As Double,  _
                    ByVal credito06 As Double,  _
                    ByVal saldo06 As Double,  _
                    ByVal debito07 As Double,  _
                    ByVal credito07 As Double,  _
                    ByVal saldo07 As Double,  _
                    ByVal debito08 As Double,  _
                    ByVal credito08 As Double,  _
                    ByVal saldo08 As Double,  _
                    ByVal debito09 As Double,  _
                    ByVal credito09 As Double,  _
                    ByVal saldo09 As Double,  _
                    ByVal debito10 As Double,  _
                    ByVal credito10 As Double,  _
                    ByVal saldo10 As Double,  _
                    ByVal debito11 As Double,  _
                    ByVal credito11 As Double,  _
                    ByVal saldo11 As Double,  _
                    ByVal debito12 As Double,  _
                    ByVal credito12 As Double,  _
                    ByVal saldo12 As Double,  _
                    ByVal Original_codigo As String,  _
                    ByVal Original_descripcion As String,  _
                    ByVal Original_naturaleza As String,  _
                    ByVal Original_nivel As String,  _
                    ByVal Original_tipo As String,  _
                    ByVal Original_saldo As Double,  _
                    ByVal Original_saldo00 As Double,  _
                    ByVal Original_debito00 As Double,  _
                    ByVal Original_credito00 As Double,  _
                    ByVal Original_debito01 As Double,  _
                    ByVal Original_credito01 As Double,  _
                    ByVal Original_saldo01 As Double,  _
                    ByVal Original_debito02 As Double,  _
                    ByVal Original_credito02 As Double,  _
                    ByVal Original_saldo02 As Double,  _
                    ByVal Original_debito03 As Double,  _
                    ByVal Original_credito03 As Double,  _
                    ByVal Original_saldo03 As Double,  _
                    ByVal Original_debito04 As Double,  _
                    ByVal Original_credito04 As Double,  _
                    ByVal Original_saldo04 As Double,  _
                    ByVal Original_debito05 As Double,  _
                    ByVal Original_credito05 As Double,  _
                    ByVal Original_saldo05 As Double,  _
                    ByVal Original_debito06 As Double,  _
                    ByVal Original_credito06 As Double,  _
                    ByVal Original_saldo06 As Double,  _
                    ByVal Original_debito07 As Double,  _
                    ByVal Original_credito07 As Double,  _
                    ByVal Original_saldo07 As Double,  _
                    ByVal Original_debito08 As Double,  _
                    ByVal Original_credito08 As Double,  _
                    ByVal Original_saldo08 As Double,  _
                    ByVal Original_debito09 As Double,  _
                    ByVal Original_credito09 As Double,  _
                    ByVal Original_saldo09 As Double,  _
                    ByVal Original_debito10 As Double,  _
                    ByVal Original_credito10 As Double,  _
                    ByVal Original_saldo10 As Double,  _
                    ByVal Original_debito11 As Double,  _
                    ByVal Original_credito11 As Double,  _
                    ByVal Original_saldo11 As Double,  _
                    ByVal Original_debito12 As Double,  _
                    ByVal Original_credito12 As Double,  _
                    ByVal Original_saldo12 As Double) As Integer
            If (codigo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("codigo")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(codigo,String)
            End If
            If (descripcion Is Nothing) Then
                Throw New Global.System.ArgumentNullException("descripcion")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(descripcion,String)
            End If
            If (naturaleza Is Nothing) Then
                Throw New Global.System.ArgumentNullException("naturaleza")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(naturaleza,String)
            End If
            If (nivel Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nivel")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(nivel,String)
            End If
            If (tipo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipo")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(tipo,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(saldo,Double)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(saldo00,Double)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(debito00,Double)
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(credito00,Double)
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(debito01,Double)
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(credito01,Double)
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(saldo01,Double)
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(debito02,Double)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(credito02,Double)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(saldo02,Double)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(debito03,Double)
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(credito03,Double)
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(saldo03,Double)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(debito04,Double)
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(credito04,Double)
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(saldo04,Double)
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(debito05,Double)
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(credito05,Double)
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(saldo05,Double)
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(debito06,Double)
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(credito06,Double)
            Me.Adapter.UpdateCommand.Parameters(26).Value = CType(saldo06,Double)
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(debito07,Double)
            Me.Adapter.UpdateCommand.Parameters(28).Value = CType(credito07,Double)
            Me.Adapter.UpdateCommand.Parameters(29).Value = CType(saldo07,Double)
            Me.Adapter.UpdateCommand.Parameters(30).Value = CType(debito08,Double)
            Me.Adapter.UpdateCommand.Parameters(31).Value = CType(credito08,Double)
            Me.Adapter.UpdateCommand.Parameters(32).Value = CType(saldo08,Double)
            Me.Adapter.UpdateCommand.Parameters(33).Value = CType(debito09,Double)
            Me.Adapter.UpdateCommand.Parameters(34).Value = CType(credito09,Double)
            Me.Adapter.UpdateCommand.Parameters(35).Value = CType(saldo09,Double)
            Me.Adapter.UpdateCommand.Parameters(36).Value = CType(debito10,Double)
            Me.Adapter.UpdateCommand.Parameters(37).Value = CType(credito10,Double)
            Me.Adapter.UpdateCommand.Parameters(38).Value = CType(saldo10,Double)
            Me.Adapter.UpdateCommand.Parameters(39).Value = CType(debito11,Double)
            Me.Adapter.UpdateCommand.Parameters(40).Value = CType(credito11,Double)
            Me.Adapter.UpdateCommand.Parameters(41).Value = CType(saldo11,Double)
            Me.Adapter.UpdateCommand.Parameters(42).Value = CType(debito12,Double)
            Me.Adapter.UpdateCommand.Parameters(43).Value = CType(credito12,Double)
            Me.Adapter.UpdateCommand.Parameters(44).Value = CType(saldo12,Double)
            If (Original_codigo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_codigo")
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_codigo,String)
            End If
            If (Original_descripcion Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_descripcion")
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_descripcion,String)
            End If
            If (Original_naturaleza Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_naturaleza")
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_naturaleza,String)
            End If
            If (Original_nivel Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nivel")
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_nivel,String)
            End If
            If (Original_tipo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_tipo")
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_tipo,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_saldo,Double)
            Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_saldo00,Double)
            Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_debito00,Double)
            Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_credito00,Double)
            Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_debito01,Double)
            Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_credito01,Double)
            Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_saldo01,Double)
            Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_debito02,Double)
            Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_credito02,Double)
            Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_saldo02,Double)
            Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_debito03,Double)
            Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_credito03,Double)
            Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_saldo03,Double)
            Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_debito04,Double)
            Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_credito04,Double)
            Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_saldo04,Double)
            Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_debito05,Double)
            Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_credito05,Double)
            Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_saldo05,Double)
            Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_debito06,Double)
            Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_credito06,Double)
            Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_saldo06,Double)
            Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_debito07,Double)
            Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_credito07,Double)
            Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_saldo07,Double)
            Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_debito08,Double)
            Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_credito08,Double)
            Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_saldo08,Double)
            Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_debito09,Double)
            Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_credito09,Double)
            Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_saldo09,Double)
            Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_debito10,Double)
            Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_credito10,Double)
            Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_saldo10,Double)
            Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_debito11,Double)
            Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_credito11,Double)
            Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_saldo11,Double)
            Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_debito12,Double)
            Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_credito12,Double)
            Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Original_saldo12,Double)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal descripcion As String,  _
                    ByVal naturaleza As String,  _
                    ByVal nivel As String,  _
                    ByVal tipo As String,  _
                    ByVal saldo As Double,  _
                    ByVal saldo00 As Double,  _
                    ByVal debito00 As Double,  _
                    ByVal credito00 As Double,  _
                    ByVal debito01 As Double,  _
                    ByVal credito01 As Double,  _
                    ByVal saldo01 As Double,  _
                    ByVal debito02 As Double,  _
                    ByVal credito02 As Double,  _
                    ByVal saldo02 As Double,  _
                    ByVal debito03 As Double,  _
                    ByVal credito03 As Double,  _
                    ByVal saldo03 As Double,  _
                    ByVal debito04 As Double,  _
                    ByVal credito04 As Double,  _
                    ByVal saldo04 As Double,  _
                    ByVal debito05 As Double,  _
                    ByVal credito05 As Double,  _
                    ByVal saldo05 As Double,  _
                    ByVal debito06 As Double,  _
                    ByVal credito06 As Double,  _
                    ByVal saldo06 As Double,  _
                    ByVal debito07 As Double,  _
                    ByVal credito07 As Double,  _
                    ByVal saldo07 As Double,  _
                    ByVal debito08 As Double,  _
                    ByVal credito08 As Double,  _
                    ByVal saldo08 As Double,  _
                    ByVal debito09 As Double,  _
                    ByVal credito09 As Double,  _
                    ByVal saldo09 As Double,  _
                    ByVal debito10 As Double,  _
                    ByVal credito10 As Double,  _
                    ByVal saldo10 As Double,  _
                    ByVal debito11 As Double,  _
                    ByVal credito11 As Double,  _
                    ByVal saldo11 As Double,  _
                    ByVal debito12 As Double,  _
                    ByVal credito12 As Double,  _
                    ByVal saldo12 As Double,  _
                    ByVal Original_codigo As String,  _
                    ByVal Original_descripcion As String,  _
                    ByVal Original_naturaleza As String,  _
                    ByVal Original_nivel As String,  _
                    ByVal Original_tipo As String,  _
                    ByVal Original_saldo As Double,  _
                    ByVal Original_saldo00 As Double,  _
                    ByVal Original_debito00 As Double,  _
                    ByVal Original_credito00 As Double,  _
                    ByVal Original_debito01 As Double,  _
                    ByVal Original_credito01 As Double,  _
                    ByVal Original_saldo01 As Double,  _
                    ByVal Original_debito02 As Double,  _
                    ByVal Original_credito02 As Double,  _
                    ByVal Original_saldo02 As Double,  _
                    ByVal Original_debito03 As Double,  _
                    ByVal Original_credito03 As Double,  _
                    ByVal Original_saldo03 As Double,  _
                    ByVal Original_debito04 As Double,  _
                    ByVal Original_credito04 As Double,  _
                    ByVal Original_saldo04 As Double,  _
                    ByVal Original_debito05 As Double,  _
                    ByVal Original_credito05 As Double,  _
                    ByVal Original_saldo05 As Double,  _
                    ByVal Original_debito06 As Double,  _
                    ByVal Original_credito06 As Double,  _
                    ByVal Original_saldo06 As Double,  _
                    ByVal Original_debito07 As Double,  _
                    ByVal Original_credito07 As Double,  _
                    ByVal Original_saldo07 As Double,  _
                    ByVal Original_debito08 As Double,  _
                    ByVal Original_credito08 As Double,  _
                    ByVal Original_saldo08 As Double,  _
                    ByVal Original_debito09 As Double,  _
                    ByVal Original_credito09 As Double,  _
                    ByVal Original_saldo09 As Double,  _
                    ByVal Original_debito10 As Double,  _
                    ByVal Original_credito10 As Double,  _
                    ByVal Original_saldo10 As Double,  _
                    ByVal Original_debito11 As Double,  _
                    ByVal Original_credito11 As Double,  _
                    ByVal Original_saldo11 As Double,  _
                    ByVal Original_debito12 As Double,  _
                    ByVal Original_credito12 As Double,  _
                    ByVal Original_saldo12 As Double) As Integer
            Return Me.Update(Original_codigo, descripcion, naturaleza, nivel, tipo, saldo, saldo00, debito00, credito00, debito01, credito01, saldo01, debito02, credito02, saldo02, debito03, credito03, saldo03, debito04, credito04, saldo04, debito05, credito05, saldo05, debito06, credito06, saldo06, debito07, credito07, saldo07, debito08, credito08, saldo08, debito09, credito09, saldo09, debito10, credito10, saldo10, debito11, credito11, saldo11, debito12, credito12, saldo12, Original_codigo, Original_descripcion, Original_naturaleza, Original_nivel, Original_tipo, Original_saldo, Original_saldo00, Original_debito00, Original_credito00, Original_debito01, Original_credito01, Original_saldo01, Original_debito02, Original_credito02, Original_saldo02, Original_debito03, Original_credito03, Original_saldo03, Original_debito04, Original_credito04, Original_saldo04, Original_debito05, Original_credito05, Original_saldo05, Original_debito06, Original_credito06, Original_saldo06, Original_debito07, Original_credito07, Original_saldo07, Original_debito08, Original_credito08, Original_saldo08, Original_debito09, Original_credito09, Original_saldo09, Original_debito10, Original_credito10, Original_saldo10, Original_debito11, Original_credito11, Original_saldo11, Original_debito12, Original_credito12, Original_saldo12)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class documentos01TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "documentos01"
            tableMapping.ColumnMappings.Add("item", "item")
            tableMapping.ColumnMappings.Add("doc", "doc")
            tableMapping.ColumnMappings.Add("tipodoc", "tipodoc")
            tableMapping.ColumnMappings.Add("periodo", "periodo")
            tableMapping.ColumnMappings.Add("dia", "dia")
            tableMapping.ColumnMappings.Add("centro", "centro")
            tableMapping.ColumnMappings.Add("descri", "descri")
            tableMapping.ColumnMappings.Add("debito", "debito")
            tableMapping.ColumnMappings.Add("credito", "credito")
            tableMapping.ColumnMappings.Add("codigo", "codigo")
            tableMapping.ColumnMappings.Add("base", "base")
            tableMapping.ColumnMappings.Add("diasv", "diasv")
            tableMapping.ColumnMappings.Add("fechaven", "fechaven")
            tableMapping.ColumnMappings.Add("nit", "nit")
            tableMapping.ColumnMappings.Add("cheque", "cheque")
            tableMapping.ColumnMappings.Add("modulo", "modulo")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `saeosteomaterial2012`.`documentos01` (`item`, `doc`, `tipodoc`, `per"& _ 
                "iodo`, `dia`, `centro`, `descri`, `debito`, `credito`, `codigo`, `base`, `diasv`"& _ 
                ", `fechaven`, `nit`, `cheque`, `modulo`) VALUES (@item, @doc, @tipodoc, @periodo"& _ 
                ", @dia, @centro, @descri, @debito, @credito, @codigo, @base, @diasv, @fechaven, "& _ 
                "@nit, @cheque, @modulo)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@item"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "item"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@doc"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int64
            param.IsNullable = true
            param.SourceColumn = "doc"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipodoc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipodoc"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@periodo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "periodo"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@dia"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dia"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@centro"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "centro"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@descri"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "descri"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@debito"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "debito"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@credito"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "credito"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@codigo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "codigo"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@base"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "base"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@diasv"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "diasv"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@fechaven"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "fechaven"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nit"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nit"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cheque"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cheque"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@modulo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "modulo"
            Me._adapter.InsertCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection
            Me._connection.ConnectionString = Global.SAE.My.MySettings.Default.saeosteomaterial2012ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `item`, `doc`, `tipodoc`, `periodo`, `dia`, `centro`, `descri`, `debito`, "& _ 
                "`credito`, `codigo`, `base`, `diasv`, `fechaven`, `nit`, `cheque`, `modulo` FROM"& _ 
                " `saeosteomaterial2012`.`documentos01`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As saeosteomaterial2012DataSet.documentos01DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As saeosteomaterial2012DataSet.documentos01DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As saeosteomaterial2012DataSet.documentos01DataTable = New saeosteomaterial2012DataSet.documentos01DataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As saeosteomaterial2012DataSet.documentos01DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As saeosteomaterial2012DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "documentos01")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal item As Integer,  _
                    ByVal doc As Long,  _
                    ByVal tipodoc As String,  _
                    ByVal periodo As String,  _
                    ByVal dia As String,  _
                    ByVal centro As String,  _
                    ByVal descri As String,  _
                    ByVal debito As Double,  _
                    ByVal credito As Double,  _
                    ByVal codigo As String,  _
                    ByVal base As Double,  _
                    ByVal diasv As Integer,  _
                    ByVal fechaven As String,  _
                    ByVal nit As String,  _
                    ByVal cheque As String,  _
                    ByVal modulo As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(item,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(doc,Long)
            If (tipodoc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipodoc")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(tipodoc,String)
            End If
            If (periodo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("periodo")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(periodo,String)
            End If
            If (dia Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dia")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(dia,String)
            End If
            If (centro Is Nothing) Then
                Throw New Global.System.ArgumentNullException("centro")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(centro,String)
            End If
            If (descri Is Nothing) Then
                Throw New Global.System.ArgumentNullException("descri")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(descri,String)
            End If
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(debito,Double)
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(credito,Double)
            If (codigo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("codigo")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(codigo,String)
            End If
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(base,Double)
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(diasv,Integer)
            If (fechaven Is Nothing) Then
                Throw New Global.System.ArgumentNullException("fechaven")
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(fechaven,String)
            End If
            If (nit Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nit")
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(nit,String)
            End If
            If (cheque Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cheque")
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(cheque,String)
            End If
            If (modulo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("modulo")
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(modulo,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class contrato_inmTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "contrato_inm"
            tableMapping.ColumnMappings.Add("cod_contra", "cod_contra")
            tableMapping.ColumnMappings.Add("cod_inm", "cod_inm")
            tableMapping.ColumnMappings.Add("nit_a", "nit_a")
            tableMapping.ColumnMappings.Add("nomb_arr", "nomb_arr")
            tableMapping.ColumnMappings.Add("nit_d", "nit_d")
            tableMapping.ColumnMappings.Add("fechaini", "fechaini")
            tableMapping.ColumnMappings.Add("fechafin", "fechafin")
            tableMapping.ColumnMappings.Add("valor", "valor")
            tableMapping.ColumnMappings.Add("cta_valor", "cta_valor")
            tableMapping.ColumnMappings.Add("por_iva", "por_iva")
            tableMapping.ColumnMappings.Add("cta_iva", "cta_iva")
            tableMapping.ColumnMappings.Add("rtf", "rtf")
            tableMapping.ColumnMappings.Add("cta_rtf", "cta_rtf")
            tableMapping.ColumnMappings.Add("por_comi", "por_comi")
            tableMapping.ColumnMappings.Add("cc", "cc")
            tableMapping.ColumnMappings.Add("mes_total", "mes_total")
            tableMapping.ColumnMappings.Add("mes_fact", "mes_fact")
            tableMapping.ColumnMappings.Add("mes_act", "mes_act")
            tableMapping.ColumnMappings.Add("periodo", "periodo")
            tableMapping.ColumnMappings.Add("nitv", "nitv")
            tableMapping.ColumnMappings.Add("vmto", "vmto")
            tableMapping.ColumnMappings.Add("deposito", "deposito")
            tableMapping.ColumnMappings.Add("fechaF", "fechaF")
            tableMapping.ColumnMappings.Add("nitc", "nitc")
            tableMapping.ColumnMappings.Add("cta_cli", "cta_cli")
            tableMapping.ColumnMappings.Add("cta_cms", "cta_cms")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `saeosteomaterial2012`.`contrato_inm` WHERE ((`cod_contra` = @Origina"& _ 
                "l_cod_contra) AND (`cod_inm` = @Original_cod_inm) AND (`nit_a` = @Original_nit_a"& _ 
                ") AND (`nomb_arr` = @Original_nomb_arr) AND (`nit_d` = @Original_nit_d) AND (`fe"& _ 
                "chaini` = @Original_fechaini) AND (`fechafin` = @Original_fechafin) AND (`valor`"& _ 
                " = @Original_valor) AND (`cta_valor` = @Original_cta_valor) AND (`por_iva` = @Or"& _ 
                "iginal_por_iva) AND (`cta_iva` = @Original_cta_iva) AND (`rtf` = @Original_rtf) "& _ 
                "AND (`cta_rtf` = @Original_cta_rtf) AND (`por_comi` = @Original_por_comi) AND (`"& _ 
                "cc` = @Original_cc) AND (`mes_total` = @Original_mes_total) AND (`mes_fact` = @O"& _ 
                "riginal_mes_fact) AND (`mes_act` = @Original_mes_act) AND (`periodo` = @Original"& _ 
                "_periodo) AND (`nitv` = @Original_nitv) AND (`vmto` = @Original_vmto) AND (`depo"& _ 
                "sito` = @Original_deposito) AND (`fechaF` = @Original_fechaF) AND (`nitc` = @Ori"& _ 
                "ginal_nitc) AND (`cta_cli` = @Original_cta_cli) AND (`cta_cms` = @Original_cta_c"& _ 
                "ms))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cod_contra"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cod_contra"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cod_inm"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cod_inm"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nit_a"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nit_a"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nomb_arr"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nomb_arr"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nit_d"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nit_d"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_fechaini"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fechaini"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_fechafin"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fechafin"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_valor"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "valor"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cta_valor"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_valor"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_por_iva"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_iva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cta_iva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_iva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_rtf"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "rtf"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cta_rtf"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_rtf"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_por_comi"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_comi"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_mes_total"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "mes_total"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_mes_fact"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "mes_fact"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_mes_act"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "mes_act"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_periodo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "periodo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nitv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitv"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_vmto"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "vmto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_deposito"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "deposito"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_fechaF"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fechaF"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nitc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cta_cli"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_cli"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cta_cms"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_cms"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `saeosteomaterial2012`.`contrato_inm` (`cod_contra`, `cod_inm`, `nit_"& _ 
                "a`, `nomb_arr`, `nit_d`, `fechaini`, `fechafin`, `valor`, `cta_valor`, `por_iva`"& _ 
                ", `cta_iva`, `rtf`, `cta_rtf`, `por_comi`, `cc`, `mes_total`, `mes_fact`, `mes_a"& _ 
                "ct`, `periodo`, `nitv`, `vmto`, `deposito`, `fechaF`, `nitc`, `cta_cli`, `cta_cm"& _ 
                "s`) VALUES (@cod_contra, @cod_inm, @nit_a, @nomb_arr, @nit_d, @fechaini, @fechaf"& _ 
                "in, @valor, @cta_valor, @por_iva, @cta_iva, @rtf, @cta_rtf, @por_comi, @cc, @mes"& _ 
                "_total, @mes_fact, @mes_act, @periodo, @nitv, @vmto, @deposito, @fechaF, @nitc, "& _ 
                "@cta_cli, @cta_cms)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cod_contra"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cod_contra"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cod_inm"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cod_inm"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nit_a"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nit_a"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nomb_arr"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nomb_arr"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nit_d"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nit_d"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@fechaini"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fechaini"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@fechafin"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fechafin"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@valor"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "valor"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta_valor"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_valor"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@por_iva"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_iva"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta_iva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_iva"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@rtf"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "rtf"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta_rtf"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_rtf"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@por_comi"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_comi"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cc"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@mes_total"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "mes_total"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@mes_fact"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "mes_fact"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@mes_act"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "mes_act"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@periodo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "periodo"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nitv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitv"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@vmto"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "vmto"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@deposito"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "deposito"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@fechaF"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fechaF"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nitc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitc"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta_cli"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_cli"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta_cms"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_cms"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `saeosteomaterial2012`.`contrato_inm` SET `cod_contra` = @cod_contra, `cod"& _ 
                "_inm` = @cod_inm, `nit_a` = @nit_a, `nomb_arr` = @nomb_arr, `nit_d` = @nit_d, `f"& _ 
                "echaini` = @fechaini, `fechafin` = @fechafin, `valor` = @valor, `cta_valor` = @c"& _ 
                "ta_valor, `por_iva` = @por_iva, `cta_iva` = @cta_iva, `rtf` = @rtf, `cta_rtf` = "& _ 
                "@cta_rtf, `por_comi` = @por_comi, `cc` = @cc, `mes_total` = @mes_total, `mes_fac"& _ 
                "t` = @mes_fact, `mes_act` = @mes_act, `periodo` = @periodo, `nitv` = @nitv, `vmt"& _ 
                "o` = @vmto, `deposito` = @deposito, `fechaF` = @fechaF, `nitc` = @nitc, `cta_cli"& _ 
                "` = @cta_cli, `cta_cms` = @cta_cms WHERE ((`cod_contra` = @Original_cod_contra) "& _ 
                "AND (`cod_inm` = @Original_cod_inm) AND (`nit_a` = @Original_nit_a) AND (`nomb_a"& _ 
                "rr` = @Original_nomb_arr) AND (`nit_d` = @Original_nit_d) AND (`fechaini` = @Ori"& _ 
                "ginal_fechaini) AND (`fechafin` = @Original_fechafin) AND (`valor` = @Original_v"& _ 
                "alor) AND (`cta_valor` = @Original_cta_valor) AND (`por_iva` = @Original_por_iva"& _ 
                ") AND (`cta_iva` = @Original_cta_iva) AND (`rtf` = @Original_rtf) AND (`cta_rtf`"& _ 
                " = @Original_cta_rtf) AND (`por_comi` = @Original_por_comi) AND (`cc` = @Origina"& _ 
                "l_cc) AND (`mes_total` = @Original_mes_total) AND (`mes_fact` = @Original_mes_fa"& _ 
                "ct) AND (`mes_act` = @Original_mes_act) AND (`periodo` = @Original_periodo) AND "& _ 
                "(`nitv` = @Original_nitv) AND (`vmto` = @Original_vmto) AND (`deposito` = @Origi"& _ 
                "nal_deposito) AND (`fechaF` = @Original_fechaF) AND (`nitc` = @Original_nitc) AN"& _ 
                "D (`cta_cli` = @Original_cta_cli) AND (`cta_cms` = @Original_cta_cms))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cod_contra"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cod_contra"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cod_inm"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cod_inm"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nit_a"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nit_a"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nomb_arr"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nomb_arr"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nit_d"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nit_d"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@fechaini"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fechaini"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@fechafin"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fechafin"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@valor"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "valor"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta_valor"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_valor"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@por_iva"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_iva"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta_iva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_iva"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@rtf"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "rtf"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta_rtf"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_rtf"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@por_comi"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_comi"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cc"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@mes_total"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "mes_total"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@mes_fact"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "mes_fact"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@mes_act"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "mes_act"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@periodo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "periodo"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nitv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitv"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@vmto"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "vmto"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@deposito"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "deposito"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@fechaF"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fechaF"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nitc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitc"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta_cli"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_cli"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cta_cms"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_cms"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cod_contra"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cod_contra"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cod_inm"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cod_inm"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nit_a"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nit_a"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nomb_arr"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nomb_arr"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nit_d"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nit_d"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_fechaini"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fechaini"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_fechafin"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fechafin"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_valor"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "valor"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cta_valor"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_valor"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_por_iva"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_iva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cta_iva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_iva"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_rtf"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "rtf"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cta_rtf"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_rtf"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_por_comi"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "por_comi"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_mes_total"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "mes_total"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_mes_fact"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "mes_fact"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_mes_act"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "mes_act"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_periodo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "periodo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nitv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitv"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_vmto"
            param.DbType = Global.System.Data.DbType.Int32
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int32
            param.IsNullable = true
            param.SourceColumn = "vmto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_deposito"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "deposito"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_fechaF"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fechaF"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nitc"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitc"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cta_cli"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_cli"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_cta_cms"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "cta_cms"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection
            Me._connection.ConnectionString = Global.SAE.My.MySettings.Default.saeosteomaterial2012ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `cod_contra`, `cod_inm`, `nit_a`, `nomb_arr`, `nit_d`, `fechaini`, `fechaf"& _ 
                "in`, `valor`, `cta_valor`, `por_iva`, `cta_iva`, `rtf`, `cta_rtf`, `por_comi`, `"& _ 
                "cc`, `mes_total`, `mes_fact`, `mes_act`, `periodo`, `nitv`, `vmto`, `deposito`, "& _ 
                "`fechaF`, `nitc`, `cta_cli`, `cta_cms` FROM `saeosteomaterial2012`.`contrato_inm"& _ 
                "`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As saeosteomaterial2012DataSet.contrato_inmDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As saeosteomaterial2012DataSet.contrato_inmDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As saeosteomaterial2012DataSet.contrato_inmDataTable = New saeosteomaterial2012DataSet.contrato_inmDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As saeosteomaterial2012DataSet.contrato_inmDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As saeosteomaterial2012DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "contrato_inm")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_cod_contra As String,  _
                    ByVal Original_cod_inm As String,  _
                    ByVal Original_nit_a As String,  _
                    ByVal Original_nomb_arr As String,  _
                    ByVal Original_nit_d As String,  _
                    ByVal Original_fechaini As Date,  _
                    ByVal Original_fechafin As Date,  _
                    ByVal Original_valor As Double,  _
                    ByVal Original_cta_valor As String,  _
                    ByVal Original_por_iva As String,  _
                    ByVal Original_cta_iva As String,  _
                    ByVal Original_rtf As Double,  _
                    ByVal Original_cta_rtf As String,  _
                    ByVal Original_por_comi As String,  _
                    ByVal Original_cc As String,  _
                    ByVal Original_mes_total As Double,  _
                    ByVal Original_mes_fact As Double,  _
                    ByVal Original_mes_act As Double,  _
                    ByVal Original_periodo As String,  _
                    ByVal Original_nitv As String,  _
                    ByVal Original_vmto As Integer,  _
                    ByVal Original_deposito As Double,  _
                    ByVal Original_fechaF As Date,  _
                    ByVal Original_nitc As String,  _
                    ByVal Original_cta_cli As String,  _
                    ByVal Original_cta_cms As String) As Integer
            If (Original_cod_contra Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cod_contra")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_cod_contra,String)
            End If
            If (Original_cod_inm Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cod_inm")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_cod_inm,String)
            End If
            If (Original_nit_a Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nit_a")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_nit_a,String)
            End If
            If (Original_nomb_arr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nomb_arr")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_nomb_arr,String)
            End If
            If (Original_nit_d Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nit_d")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_nit_d,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_fechaini,Date)
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_fechafin,Date)
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_valor,Double)
            If (Original_cta_valor Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cta_valor")
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_cta_valor,String)
            End If
            If (Original_por_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_por_iva")
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_por_iva,String)
            End If
            If (Original_cta_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cta_iva")
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_cta_iva,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_rtf,Double)
            If (Original_cta_rtf Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cta_rtf")
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_cta_rtf,String)
            End If
            If (Original_por_comi Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_por_comi")
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_por_comi,String)
            End If
            If (Original_cc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cc")
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_cc,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_mes_total,Double)
            Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_mes_fact,Double)
            Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_mes_act,Double)
            If (Original_periodo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_periodo")
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_periodo,String)
            End If
            If (Original_nitv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nitv")
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_nitv,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_vmto,Integer)
            Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_deposito,Double)
            Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_fechaF,Date)
            If (Original_nitc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nitc")
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_nitc,String)
            End If
            If (Original_cta_cli Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cta_cli")
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_cta_cli,String)
            End If
            If (Original_cta_cms Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cta_cms")
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_cta_cms,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal cod_contra As String,  _
                    ByVal cod_inm As String,  _
                    ByVal nit_a As String,  _
                    ByVal nomb_arr As String,  _
                    ByVal nit_d As String,  _
                    ByVal fechaini As Date,  _
                    ByVal fechafin As Date,  _
                    ByVal valor As Double,  _
                    ByVal cta_valor As String,  _
                    ByVal por_iva As String,  _
                    ByVal cta_iva As String,  _
                    ByVal rtf As Double,  _
                    ByVal cta_rtf As String,  _
                    ByVal por_comi As String,  _
                    ByVal cc As String,  _
                    ByVal mes_total As Double,  _
                    ByVal mes_fact As Double,  _
                    ByVal mes_act As Double,  _
                    ByVal periodo As String,  _
                    ByVal nitv As String,  _
                    ByVal vmto As Integer,  _
                    ByVal deposito As Double,  _
                    ByVal fechaF As Date,  _
                    ByVal nitc As String,  _
                    ByVal cta_cli As String,  _
                    ByVal cta_cms As String) As Integer
            If (cod_contra Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cod_contra")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(cod_contra,String)
            End If
            If (cod_inm Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cod_inm")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(cod_inm,String)
            End If
            If (nit_a Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nit_a")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(nit_a,String)
            End If
            If (nomb_arr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nomb_arr")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(nomb_arr,String)
            End If
            If (nit_d Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nit_d")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(nit_d,String)
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(fechaini,Date)
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(fechafin,Date)
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(valor,Double)
            If (cta_valor Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta_valor")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(cta_valor,String)
            End If
            If (por_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("por_iva")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(por_iva,String)
            End If
            If (cta_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta_iva")
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(cta_iva,String)
            End If
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(rtf,Double)
            If (cta_rtf Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta_rtf")
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(cta_rtf,String)
            End If
            If (por_comi Is Nothing) Then
                Throw New Global.System.ArgumentNullException("por_comi")
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(por_comi,String)
            End If
            If (cc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cc")
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(cc,String)
            End If
            Me.Adapter.InsertCommand.Parameters(15).Value = CType(mes_total,Double)
            Me.Adapter.InsertCommand.Parameters(16).Value = CType(mes_fact,Double)
            Me.Adapter.InsertCommand.Parameters(17).Value = CType(mes_act,Double)
            If (periodo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("periodo")
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(periodo,String)
            End If
            If (nitv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nitv")
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(nitv,String)
            End If
            Me.Adapter.InsertCommand.Parameters(20).Value = CType(vmto,Integer)
            Me.Adapter.InsertCommand.Parameters(21).Value = CType(deposito,Double)
            Me.Adapter.InsertCommand.Parameters(22).Value = CType(fechaF,Date)
            If (nitc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nitc")
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(nitc,String)
            End If
            If (cta_cli Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta_cli")
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(cta_cli,String)
            End If
            If (cta_cms Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta_cms")
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(cta_cms,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal cod_contra As String,  _
                    ByVal cod_inm As String,  _
                    ByVal nit_a As String,  _
                    ByVal nomb_arr As String,  _
                    ByVal nit_d As String,  _
                    ByVal fechaini As Date,  _
                    ByVal fechafin As Date,  _
                    ByVal valor As Double,  _
                    ByVal cta_valor As String,  _
                    ByVal por_iva As String,  _
                    ByVal cta_iva As String,  _
                    ByVal rtf As Double,  _
                    ByVal cta_rtf As String,  _
                    ByVal por_comi As String,  _
                    ByVal cc As String,  _
                    ByVal mes_total As Double,  _
                    ByVal mes_fact As Double,  _
                    ByVal mes_act As Double,  _
                    ByVal periodo As String,  _
                    ByVal nitv As String,  _
                    ByVal vmto As Integer,  _
                    ByVal deposito As Double,  _
                    ByVal fechaF As Date,  _
                    ByVal nitc As String,  _
                    ByVal cta_cli As String,  _
                    ByVal cta_cms As String,  _
                    ByVal Original_cod_contra As String,  _
                    ByVal Original_cod_inm As String,  _
                    ByVal Original_nit_a As String,  _
                    ByVal Original_nomb_arr As String,  _
                    ByVal Original_nit_d As String,  _
                    ByVal Original_fechaini As Date,  _
                    ByVal Original_fechafin As Date,  _
                    ByVal Original_valor As Double,  _
                    ByVal Original_cta_valor As String,  _
                    ByVal Original_por_iva As String,  _
                    ByVal Original_cta_iva As String,  _
                    ByVal Original_rtf As Double,  _
                    ByVal Original_cta_rtf As String,  _
                    ByVal Original_por_comi As String,  _
                    ByVal Original_cc As String,  _
                    ByVal Original_mes_total As Double,  _
                    ByVal Original_mes_fact As Double,  _
                    ByVal Original_mes_act As Double,  _
                    ByVal Original_periodo As String,  _
                    ByVal Original_nitv As String,  _
                    ByVal Original_vmto As Integer,  _
                    ByVal Original_deposito As Double,  _
                    ByVal Original_fechaF As Date,  _
                    ByVal Original_nitc As String,  _
                    ByVal Original_cta_cli As String,  _
                    ByVal Original_cta_cms As String) As Integer
            If (cod_contra Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cod_contra")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(cod_contra,String)
            End If
            If (cod_inm Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cod_inm")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(cod_inm,String)
            End If
            If (nit_a Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nit_a")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(nit_a,String)
            End If
            If (nomb_arr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nomb_arr")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(nomb_arr,String)
            End If
            If (nit_d Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nit_d")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(nit_d,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(fechaini,Date)
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(fechafin,Date)
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(valor,Double)
            If (cta_valor Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta_valor")
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(cta_valor,String)
            End If
            If (por_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("por_iva")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(por_iva,String)
            End If
            If (cta_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta_iva")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(cta_iva,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(11).Value = CType(rtf,Double)
            If (cta_rtf Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta_rtf")
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(cta_rtf,String)
            End If
            If (por_comi Is Nothing) Then
                Throw New Global.System.ArgumentNullException("por_comi")
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(por_comi,String)
            End If
            If (cc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cc")
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(cc,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(mes_total,Double)
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(mes_fact,Double)
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(mes_act,Double)
            If (periodo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("periodo")
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(periodo,String)
            End If
            If (nitv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nitv")
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(nitv,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(20).Value = CType(vmto,Integer)
            Me.Adapter.UpdateCommand.Parameters(21).Value = CType(deposito,Double)
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(fechaF,Date)
            If (nitc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nitc")
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(nitc,String)
            End If
            If (cta_cli Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta_cli")
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(cta_cli,String)
            End If
            If (cta_cms Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cta_cms")
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(cta_cms,String)
            End If
            If (Original_cod_contra Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cod_contra")
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_cod_contra,String)
            End If
            If (Original_cod_inm Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cod_inm")
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_cod_inm,String)
            End If
            If (Original_nit_a Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nit_a")
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_nit_a,String)
            End If
            If (Original_nomb_arr Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nomb_arr")
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_nomb_arr,String)
            End If
            If (Original_nit_d Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nit_d")
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_nit_d,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_fechaini,Date)
            Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_fechafin,Date)
            Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_valor,Double)
            If (Original_cta_valor Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cta_valor")
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_cta_valor,String)
            End If
            If (Original_por_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_por_iva")
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_por_iva,String)
            End If
            If (Original_cta_iva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cta_iva")
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_cta_iva,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_rtf,Double)
            If (Original_cta_rtf Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cta_rtf")
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_cta_rtf,String)
            End If
            If (Original_por_comi Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_por_comi")
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_por_comi,String)
            End If
            If (Original_cc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cc")
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_cc,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_mes_total,Double)
            Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_mes_fact,Double)
            Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_mes_act,Double)
            If (Original_periodo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_periodo")
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_periodo,String)
            End If
            If (Original_nitv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nitv")
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_nitv,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_vmto,Integer)
            Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_deposito,Double)
            Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_fechaF,Date)
            If (Original_nitc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nitc")
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_nitc,String)
            End If
            If (Original_cta_cli Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cta_cli")
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_cta_cli,String)
            End If
            If (Original_cta_cms Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_cta_cms")
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_cta_cms,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal cod_inm As String,  _
                    ByVal nit_a As String,  _
                    ByVal nomb_arr As String,  _
                    ByVal nit_d As String,  _
                    ByVal fechaini As Date,  _
                    ByVal fechafin As Date,  _
                    ByVal valor As Double,  _
                    ByVal cta_valor As String,  _
                    ByVal por_iva As String,  _
                    ByVal cta_iva As String,  _
                    ByVal rtf As Double,  _
                    ByVal cta_rtf As String,  _
                    ByVal por_comi As String,  _
                    ByVal cc As String,  _
                    ByVal mes_total As Double,  _
                    ByVal mes_fact As Double,  _
                    ByVal mes_act As Double,  _
                    ByVal periodo As String,  _
                    ByVal nitv As String,  _
                    ByVal vmto As Integer,  _
                    ByVal deposito As Double,  _
                    ByVal fechaF As Date,  _
                    ByVal nitc As String,  _
                    ByVal cta_cli As String,  _
                    ByVal cta_cms As String,  _
                    ByVal Original_cod_contra As String,  _
                    ByVal Original_cod_inm As String,  _
                    ByVal Original_nit_a As String,  _
                    ByVal Original_nomb_arr As String,  _
                    ByVal Original_nit_d As String,  _
                    ByVal Original_fechaini As Date,  _
                    ByVal Original_fechafin As Date,  _
                    ByVal Original_valor As Double,  _
                    ByVal Original_cta_valor As String,  _
                    ByVal Original_por_iva As String,  _
                    ByVal Original_cta_iva As String,  _
                    ByVal Original_rtf As Double,  _
                    ByVal Original_cta_rtf As String,  _
                    ByVal Original_por_comi As String,  _
                    ByVal Original_cc As String,  _
                    ByVal Original_mes_total As Double,  _
                    ByVal Original_mes_fact As Double,  _
                    ByVal Original_mes_act As Double,  _
                    ByVal Original_periodo As String,  _
                    ByVal Original_nitv As String,  _
                    ByVal Original_vmto As Integer,  _
                    ByVal Original_deposito As Double,  _
                    ByVal Original_fechaF As Date,  _
                    ByVal Original_nitc As String,  _
                    ByVal Original_cta_cli As String,  _
                    ByVal Original_cta_cms As String) As Integer
            Return Me.Update(Original_cod_contra, cod_inm, nit_a, nomb_arr, nit_d, fechaini, fechafin, valor, cta_valor, por_iva, cta_iva, rtf, cta_rtf, por_comi, cc, mes_total, mes_fact, mes_act, periodo, nitv, vmto, deposito, fechaF, nitc, cta_cli, cta_cms, Original_cod_contra, Original_cod_inm, Original_nit_a, Original_nomb_arr, Original_nit_d, Original_fechaini, Original_fechafin, Original_valor, Original_cta_valor, Original_por_iva, Original_cta_iva, Original_rtf, Original_cta_rtf, Original_por_comi, Original_cc, Original_mes_total, Original_mes_fact, Original_mes_act, Original_periodo, Original_nitv, Original_vmto, Original_deposito, Original_fechaF, Original_nitc, Original_cta_cli, Original_cta_cms)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class parcontratoTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "parcontrato"
            tableMapping.ColumnMappings.Add("comentario", "comentario")
            tableMapping.ColumnMappings.Add("ctavent", "ctavent")
            tableMapping.ColumnMappings.Add("ctaiva", "ctaiva")
            tableMapping.ColumnMappings.Add("ctartf", "ctartf")
            tableMapping.ColumnMappings.Add("parf", "parf")
            tableMapping.ColumnMappings.Add("docf", "docf")
            tableMapping.ColumnMappings.Add("tipof1", "tipof1")
            tableMapping.ColumnMappings.Add("a_f1", "a_f1")
            tableMapping.ColumnMappings.Add("hr1", "hr1")
            tableMapping.ColumnMappings.Add("reso1", "reso1")
            tableMapping.ColumnMappings.Add("fecexp1", "fecexp1")
            tableMapping.ColumnMappings.Add("feclim1", "feclim1")
            tableMapping.ColumnMappings.Add("ini1", "ini1")
            tableMapping.ColumnMappings.Add("fin1", "fin1")
            tableMapping.ColumnMappings.Add("pre1", "pre1")
            tableMapping.ColumnMappings.Add("ctacli", "ctacli")
            tableMapping.ColumnMappings.Add("ctacms", "ctacms")
            tableMapping.ColumnMappings.Add("mora", "mora")
            tableMapping.ColumnMappings.Add("logo", "logo")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `saeosteomaterial2012`.`parcontrato` (`comentario`, `ctavent`, `ctaiv"& _ 
                "a`, `ctartf`, `parf`, `docf`, `tipof1`, `a_f1`, `hr1`, `reso1`, `fecexp1`, `fecl"& _ 
                "im1`, `ini1`, `fin1`, `pre1`, `ctacli`, `ctacms`, `mora`, `logo`) VALUES (@comen"& _ 
                "tario, @ctavent, @ctaiva, @ctartf, @parf, @docf, @tipof1, @a_f1, @hr1, @reso1, @"& _ 
                "fecexp1, @feclim1, @ini1, @fin1, @pre1, @ctacli, @ctacms, @mora, @logo)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@comentario"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Text
            param.IsNullable = true
            param.SourceColumn = "comentario"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ctavent"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctavent"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ctaiva"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctaiva"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ctartf"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctartf"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@parf"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "parf"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@docf"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "docf"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipof1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipof1"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@a_f1"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int64
            param.IsNullable = true
            param.SourceColumn = "a_f1"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@hr1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "hr1"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@reso1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "reso1"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@fecexp1"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "fecexp1"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@feclim1"
            param.DbType = Global.System.Data.DbType.[Date]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Date]
            param.IsNullable = true
            param.SourceColumn = "feclim1"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ini1"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int64
            param.IsNullable = true
            param.SourceColumn = "ini1"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@fin1"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int64
            param.IsNullable = true
            param.SourceColumn = "fin1"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@pre1"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "pre1"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ctacli"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctacli"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ctacms"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ctacms"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@mora"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "mora"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@logo"
            param.DbType = Global.System.Data.DbType.[Object]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Blob
            param.IsNullable = true
            param.SourceColumn = "logo"
            Me._adapter.InsertCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection
            Me._connection.ConnectionString = Global.SAE.My.MySettings.Default.saeosteomaterial2012ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT comentario, ctavent, ctaiva, ctartf, parf, docf, tipof1, a_f1, hr1, reso1,"& _ 
                " fecexp1, feclim1, ini1, fin1, pre1, ctacli, ctacms, mora, logo FROM parcontrato"& _ 
                ""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As saeosteomaterial2012DataSet.parcontratoDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As saeosteomaterial2012DataSet.parcontratoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As saeosteomaterial2012DataSet.parcontratoDataTable = New saeosteomaterial2012DataSet.parcontratoDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As saeosteomaterial2012DataSet.parcontratoDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As saeosteomaterial2012DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "parcontrato")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal comentario As String,  _
                    ByVal ctavent As String,  _
                    ByVal ctaiva As String,  _
                    ByVal ctartf As String,  _
                    ByVal parf As String,  _
                    ByVal docf As String,  _
                    ByVal tipof1 As String,  _
                    ByVal a_f1 As Long,  _
                    ByVal hr1 As String,  _
                    ByVal reso1 As String,  _
                    ByVal fecexp1 As Date,  _
                    ByVal feclim1 As Date,  _
                    ByVal ini1 As Long,  _
                    ByVal fin1 As Long,  _
                    ByVal pre1 As String,  _
                    ByVal ctacli As String,  _
                    ByVal ctacms As String,  _
                    ByVal mora As String,  _
                    ByVal logo As Object) As Integer
            If (comentario Is Nothing) Then
                Throw New Global.System.ArgumentNullException("comentario")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(comentario,String)
            End If
            If (ctavent Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctavent")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(ctavent,String)
            End If
            If (ctaiva Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctaiva")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(ctaiva,String)
            End If
            If (ctartf Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctartf")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ctartf,String)
            End If
            If (parf Is Nothing) Then
                Throw New Global.System.ArgumentNullException("parf")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(parf,String)
            End If
            If (docf Is Nothing) Then
                Throw New Global.System.ArgumentNullException("docf")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(docf,String)
            End If
            If (tipof1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipof1")
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(tipof1,String)
            End If
            Me.Adapter.InsertCommand.Parameters(7).Value = CType(a_f1,Long)
            If (hr1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("hr1")
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(hr1,String)
            End If
            If (reso1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("reso1")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(reso1,String)
            End If
            Me.Adapter.InsertCommand.Parameters(10).Value = CType(fecexp1,Date)
            Me.Adapter.InsertCommand.Parameters(11).Value = CType(feclim1,Date)
            Me.Adapter.InsertCommand.Parameters(12).Value = CType(ini1,Long)
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(fin1,Long)
            If (pre1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("pre1")
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(pre1,String)
            End If
            If (ctacli Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctacli")
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(ctacli,String)
            End If
            If (ctacms Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ctacms")
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(ctacms,String)
            End If
            If (mora Is Nothing) Then
                Throw New Global.System.ArgumentNullException("mora")
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(mora,String)
            End If
            If (logo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(logo,Object)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class inm_dpdenTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "inm_dpden"
            tableMapping.ColumnMappings.Add("codigo_inm", "codigo_inm")
            tableMapping.ColumnMappings.Add("descrip", "descrip")
            tableMapping.ColumnMappings.Add("espacio", "espacio")
            tableMapping.ColumnMappings.Add("umedida", "umedida")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `saeosteomaterial2012`.`inm_dpden` (`codigo_inm`, `descrip`, `espacio"& _ 
                "`, `umedida`) VALUES (@codigo_inm, @descrip, @espacio, @umedida)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@codigo_inm"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "codigo_inm"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@descrip"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "descrip"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@espacio"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.NewDecimal
            param.IsNullable = true
            param.SourceColumn = "espacio"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@umedida"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "umedida"
            Me._adapter.InsertCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection
            Me._connection.ConnectionString = Global.SAE.My.MySettings.Default.saeosteomaterial2012ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `codigo_inm`, `descrip`, `espacio`, `umedida` FROM `saeosteomaterial2012`."& _ 
                "`inm_dpden`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As saeosteomaterial2012DataSet.inm_dpdenDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As saeosteomaterial2012DataSet.inm_dpdenDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As saeosteomaterial2012DataSet.inm_dpdenDataTable = New saeosteomaterial2012DataSet.inm_dpdenDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As saeosteomaterial2012DataSet.inm_dpdenDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As saeosteomaterial2012DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "inm_dpden")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal codigo_inm As String, ByVal descrip As String, ByVal espacio As String, ByVal umedida As String) As Integer
            If (codigo_inm Is Nothing) Then
                Throw New Global.System.ArgumentNullException("codigo_inm")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(codigo_inm,String)
            End If
            If (descrip Is Nothing) Then
                Throw New Global.System.ArgumentNullException("descrip")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(descrip,String)
            End If
            If (espacio Is Nothing) Then
                Throw New Global.System.ArgumentNullException("espacio")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(espacio,String)
            End If
            If (umedida Is Nothing) Then
                Throw New Global.System.ArgumentNullException("umedida")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(umedida,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class inm_llavesTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "inm_llaves"
            tableMapping.ColumnMappings.Add("codigo_inm", "codigo_inm")
            tableMapping.ColumnMappings.Add("sitio", "sitio")
            tableMapping.ColumnMappings.Add("cant", "cant")
            tableMapping.ColumnMappings.Add("marca", "marca")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `saeosteomaterial2012`.`inm_llaves` (`codigo_inm`, `sitio`, `cant`, `"& _ 
                "marca`) VALUES (@codigo_inm, @sitio, @cant, @marca)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@codigo_inm"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "codigo_inm"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@sitio"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "sitio"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@cant"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int64
            param.IsNullable = true
            param.SourceColumn = "cant"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@marca"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "marca"
            Me._adapter.InsertCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection
            Me._connection.ConnectionString = Global.SAE.My.MySettings.Default.saeosteomaterial2012ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `codigo_inm`, `sitio`, `cant`, `marca` FROM `saeosteomaterial2012`.`inm_ll"& _ 
                "aves`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As saeosteomaterial2012DataSet.inm_llavesDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As saeosteomaterial2012DataSet.inm_llavesDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As saeosteomaterial2012DataSet.inm_llavesDataTable = New saeosteomaterial2012DataSet.inm_llavesDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As saeosteomaterial2012DataSet.inm_llavesDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As saeosteomaterial2012DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "inm_llaves")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal codigo_inm As String, ByVal sitio As String, ByVal cant As Long, ByVal marca As String) As Integer
            If (codigo_inm Is Nothing) Then
                Throw New Global.System.ArgumentNullException("codigo_inm")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(codigo_inm,String)
            End If
            If (sitio Is Nothing) Then
                Throw New Global.System.ArgumentNullException("sitio")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(sitio,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(cant,Long)
            If (marca Is Nothing) Then
                Throw New Global.System.ArgumentNullException("marca")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(marca,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class inm_serviciosTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "inm_servicios"
            tableMapping.ColumnMappings.Add("codigo_inm", "codigo_inm")
            tableMapping.ColumnMappings.Add("descrip", "descrip")
            tableMapping.ColumnMappings.Add("codigo", "codigo")
            tableMapping.ColumnMappings.Add("numero", "numero")
            tableMapping.ColumnMappings.Add("titular", "titular")
            tableMapping.ColumnMappings.Add("observacion", "observacion")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `saeosteomaterial2012`.`inm_servicios` (`codigo_inm`, `descrip`, `cod"& _ 
                "igo`, `numero`, `titular`, `observacion`) VALUES (@codigo_inm, @descrip, @codigo"& _ 
                ", @numero, @titular, @observacion)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@codigo_inm"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "codigo_inm"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@descrip"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "descrip"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@codigo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "codigo"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@numero"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "numero"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@titular"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "titular"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@observacion"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Text
            param.IsNullable = true
            param.SourceColumn = "observacion"
            Me._adapter.InsertCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection
            Me._connection.ConnectionString = Global.SAE.My.MySettings.Default.saeosteomaterial2012ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `codigo_inm`, `descrip`, `codigo`, `numero`, `titular`, `observacion` FROM"& _ 
                " `saeosteomaterial2012`.`inm_servicios`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As saeosteomaterial2012DataSet.inm_serviciosDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As saeosteomaterial2012DataSet.inm_serviciosDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As saeosteomaterial2012DataSet.inm_serviciosDataTable = New saeosteomaterial2012DataSet.inm_serviciosDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As saeosteomaterial2012DataSet.inm_serviciosDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As saeosteomaterial2012DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "inm_servicios")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal codigo_inm As String, ByVal descrip As String, ByVal codigo As String, ByVal numero As String, ByVal titular As String, ByVal observacion As String) As Integer
            If (codigo_inm Is Nothing) Then
                Throw New Global.System.ArgumentNullException("codigo_inm")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(codigo_inm,String)
            End If
            If (descrip Is Nothing) Then
                Throw New Global.System.ArgumentNullException("descrip")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(descrip,String)
            End If
            If (codigo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("codigo")
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(codigo,String)
            End If
            If (numero Is Nothing) Then
                Throw New Global.System.ArgumentNullException("numero")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(numero,String)
            End If
            If (titular Is Nothing) Then
                Throw New Global.System.ArgumentNullException("titular")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(titular,String)
            End If
            If (observacion Is Nothing) Then
                Throw New Global.System.ArgumentNullException("observacion")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(observacion,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class inmueblesTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "inmuebles"
            tableMapping.ColumnMappings.Add("codigo", "codigo")
            tableMapping.ColumnMappings.Add("nitp", "nitp")
            tableMapping.ColumnMappings.Add("avaluo", "avaluo")
            tableMapping.ColumnMappings.Add("estado", "estado")
            tableMapping.ColumnMappings.Add("direccion", "direccion")
            tableMapping.ColumnMappings.Add("ciudad", "ciudad")
            tableMapping.ColumnMappings.Add("vcanon", "vcanon")
            tableMapping.ColumnMappings.Add("descrip", "descrip")
            tableMapping.ColumnMappings.Add("tipoim", "tipoim")
            tableMapping.ColumnMappings.Add("operacion", "operacion")
            tableMapping.ColumnMappings.Add("dpto", "dpto")
            tableMapping.ColumnMappings.Add("barrio", "barrio")
            tableMapping.ColumnMappings.Add("estrato", "estrato")
            tableMapping.ColumnMappings.Add("conserv", "conserv")
            tableMapping.ColumnMappings.Add("tipoestado", "tipoestado")
            tableMapping.ColumnMappings.Add("destino", "destino")
            tableMapping.ColumnMappings.Add("llaves", "llaves")
            tableMapping.ColumnMappings.Add("previvi", "previvi")
            tableMapping.ColumnMappings.Add("prelocal", "prelocal")
            tableMapping.ColumnMappings.Add("ncatast", "ncatast")
            tableMapping.ColumnMappings.Add("avcatast", "avcatast")
            tableMapping.ColumnMappings.Add("notaria", "notaria")
            tableMapping.ColumnMappings.Add("n_escritura", "n_escritura")
            tableMapping.ColumnMappings.Add("f_escritura", "f_escritura")
            tableMapping.ColumnMappings.Add("matricula", "matricula")
            tableMapping.ColumnMappings.Add("inscripcion", "inscripcion")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `saeosteomaterial2012`.`inmuebles` WHERE ((`codigo` = @Original_codig"& _ 
                "o) AND (`nitp` = @Original_nitp) AND (`avaluo` = @Original_avaluo) AND (`estado`"& _ 
                " = @Original_estado) AND (`direccion` = @Original_direccion) AND (`ciudad` = @Or"& _ 
                "iginal_ciudad) AND (`vcanon` = @Original_vcanon) AND (`avcatast` = @Original_avc"& _ 
                "atast) AND (`barrio` = @Original_barrio) AND (`conserv` = @Original_conserv) AND"& _ 
                " (`destino` = @Original_destino) AND (`dpto` = @Original_dpto) AND (`estrato` = "& _ 
                "@Original_estrato) AND (`f_escritura` = @Original_f_escritura) AND (`inscripcion"& _ 
                "` = @Original_inscripcion) AND (`llaves` = @Original_llaves) AND (`matricula` = "& _ 
                "@Original_matricula) AND (`n_escritura` = @Original_n_escritura) AND (`ncatast` "& _ 
                "= @Original_ncatast) AND (`notaria` = @Original_notaria) AND (`operacion` = @Ori"& _ 
                "ginal_operacion) AND (`prelocal` = @Original_prelocal) AND (`previvi` = @Origina"& _ 
                "l_previvi) AND (`tipoestado` = @Original_tipoestado) AND (`tipoim` = @Original_t"& _ 
                "ipoim))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.MySql.Data.MySqlClient.MySqlParameter = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_codigo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "codigo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nitp"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitp"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_avaluo"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "avaluo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_estado"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_direccion"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "direccion"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ciudad"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ciudad"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_vcanon"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "vcanon"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_avcatast"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "avcatast"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_barrio"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "barrio"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_conserv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "conserv"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_destino"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "destino"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_dpto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dpto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_estrato"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estrato"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_f_escritura"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "f_escritura"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_inscripcion"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "inscripcion"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_llaves"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int64
            param.IsNullable = true
            param.SourceColumn = "llaves"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_matricula"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "matricula"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_n_escritura"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "n_escritura"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ncatast"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ncatast"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_notaria"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "notaria"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_operacion"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "operacion"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_prelocal"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "prelocal"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_previvi"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "previvi"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tipoestado"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipoestado"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tipoim"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipoim"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `saeosteomaterial2012`.`inmuebles` (`codigo`, `nitp`, `avaluo`, `esta"& _ 
                "do`, `direccion`, `ciudad`, `vcanon`, `descrip`, `avcatast`, `barrio`, `conserv`"& _ 
                ", `destino`, `dpto`, `estrato`, `f_escritura`, `inscripcion`, `llaves`, `matricu"& _ 
                "la`, `n_escritura`, `ncatast`, `notaria`, `operacion`, `prelocal`, `previvi`, `t"& _ 
                "ipoestado`, `tipoim`) VALUES (@codigo, @nitp, @avaluo, @estado, @direccion, @ciu"& _ 
                "dad, @vcanon, @descrip, @avcatast, @barrio, @conserv, @destino, @dpto, @estrato,"& _ 
                " @f_escritura, @inscripcion, @llaves, @matricula, @n_escritura, @ncatast, @notar"& _ 
                "ia, @operacion, @prelocal, @previvi, @tipoestado, @tipoim)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@codigo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "codigo"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nitp"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitp"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@avaluo"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "avaluo"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@estado"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@direccion"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "direccion"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ciudad"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ciudad"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@vcanon"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "vcanon"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@descrip"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Text
            param.IsNullable = true
            param.SourceColumn = "descrip"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@avcatast"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "avcatast"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@barrio"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "barrio"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@conserv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "conserv"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@destino"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "destino"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@dpto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dpto"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@estrato"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estrato"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@f_escritura"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "f_escritura"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@inscripcion"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "inscripcion"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@llaves"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int64
            param.IsNullable = true
            param.SourceColumn = "llaves"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@matricula"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "matricula"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@n_escritura"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "n_escritura"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ncatast"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ncatast"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@notaria"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "notaria"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@operacion"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "operacion"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@prelocal"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "prelocal"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@previvi"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "previvi"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipoestado"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipoestado"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipoim"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipoim"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `saeosteomaterial2012`.`inmuebles` SET `codigo` = @codigo, `nitp` = @nitp,"& _ 
                " `avaluo` = @avaluo, `estado` = @estado, `direccion` = @direccion, `ciudad` = @c"& _ 
                "iudad, `vcanon` = @vcanon, `descrip` = @descrip, `avcatast` = @avcatast, `barrio"& _ 
                "` = @barrio, `conserv` = @conserv, `destino` = @destino, `dpto` = @dpto, `estrat"& _ 
                "o` = @estrato, `f_escritura` = @f_escritura, `inscripcion` = @inscripcion, `llav"& _ 
                "es` = @llaves, `matricula` = @matricula, `n_escritura` = @n_escritura, `ncatast`"& _ 
                " = @ncatast, `notaria` = @notaria, `operacion` = @operacion, `prelocal` = @prelo"& _ 
                "cal, `previvi` = @previvi, `tipoestado` = @tipoestado, `tipoim` = @tipoim WHERE "& _ 
                "((`codigo` = @Original_codigo) AND (`nitp` = @Original_nitp) AND (`avaluo` = @Or"& _ 
                "iginal_avaluo) AND (`estado` = @Original_estado) AND (`direccion` = @Original_di"& _ 
                "reccion) AND (`ciudad` = @Original_ciudad) AND (`vcanon` = @Original_vcanon) AND"& _ 
                " (`avcatast` = @Original_avcatast) AND (`barrio` = @Original_barrio) AND (`conse"& _ 
                "rv` = @Original_conserv) AND (`destino` = @Original_destino) AND (`dpto` = @Orig"& _ 
                "inal_dpto) AND (`estrato` = @Original_estrato) AND (`f_escritura` = @Original_f_"& _ 
                "escritura) AND (`inscripcion` = @Original_inscripcion) AND (`llaves` = @Original"& _ 
                "_llaves) AND (`matricula` = @Original_matricula) AND (`n_escritura` = @Original_"& _ 
                "n_escritura) AND (`ncatast` = @Original_ncatast) AND (`notaria` = @Original_nota"& _ 
                "ria) AND (`operacion` = @Original_operacion) AND (`prelocal` = @Original_preloca"& _ 
                "l) AND (`previvi` = @Original_previvi) AND (`tipoestado` = @Original_tipoestado)"& _ 
                " AND (`tipoim` = @Original_tipoim))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@codigo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "codigo"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@nitp"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitp"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@avaluo"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "avaluo"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@estado"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@direccion"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "direccion"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ciudad"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ciudad"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@vcanon"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "vcanon"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@descrip"
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Text
            param.IsNullable = true
            param.SourceColumn = "descrip"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@avcatast"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "avcatast"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@barrio"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "barrio"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@conserv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "conserv"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@destino"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "destino"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@dpto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dpto"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@estrato"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estrato"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@f_escritura"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "f_escritura"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@inscripcion"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "inscripcion"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@llaves"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int64
            param.IsNullable = true
            param.SourceColumn = "llaves"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@matricula"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "matricula"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@n_escritura"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "n_escritura"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@ncatast"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ncatast"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@notaria"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "notaria"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@operacion"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "operacion"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@prelocal"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "prelocal"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@previvi"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "previvi"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipoestado"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipoestado"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@tipoim"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipoim"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_codigo"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "codigo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_nitp"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "nitp"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_avaluo"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "avaluo"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_estado"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estado"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_direccion"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "direccion"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ciudad"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ciudad"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_vcanon"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "vcanon"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_avcatast"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "avcatast"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_barrio"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "barrio"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_conserv"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "conserv"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_destino"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "destino"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_dpto"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "dpto"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_estrato"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "estrato"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_f_escritura"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "f_escritura"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_inscripcion"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "inscripcion"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_llaves"
            param.DbType = Global.System.Data.DbType.Int64
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.Int64
            param.IsNullable = true
            param.SourceColumn = "llaves"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_matricula"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "matricula"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_n_escritura"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "n_escritura"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_ncatast"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "ncatast"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_notaria"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "notaria"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_operacion"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "operacion"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_prelocal"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "prelocal"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_previvi"
            param.DbType = Global.System.Data.DbType.[Double]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.[Double]
            param.IsNullable = true
            param.SourceColumn = "previvi"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tipoestado"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipoestado"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.MySql.Data.MySqlClient.MySqlParameter
            param.ParameterName = "@Original_tipoim"
            param.DbType = Global.System.Data.DbType.[String]
            param.MySqlDbType = Global.MySql.Data.MySqlClient.MySqlDbType.VarChar
            param.IsNullable = true
            param.SourceColumn = "tipoim"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection
            Me._connection.ConnectionString = Global.SAE.My.MySettings.Default.saeosteomaterial2012ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT codigo, nitp, avaluo, estado, direccion, ciudad, vcanon, descrip, avcatast"& _ 
                ", barrio, conserv, destino, dpto, estrato, f_escritura, inscripcion, llaves, mat"& _ 
                "ricula, n_escritura, ncatast, notaria, operacion, prelocal, previvi, tipoestado,"& _ 
                " tipoim FROM inmuebles"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As saeosteomaterial2012DataSet.inmueblesDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As saeosteomaterial2012DataSet.inmueblesDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As saeosteomaterial2012DataSet.inmueblesDataTable = New saeosteomaterial2012DataSet.inmueblesDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As saeosteomaterial2012DataSet.inmueblesDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As saeosteomaterial2012DataSet) As Integer
            Return Me.Adapter.Update(dataSet, "inmuebles")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_codigo As String,  _
                    ByVal Original_nitp As String,  _
                    ByVal Original_avaluo As Double,  _
                    ByVal Original_estado As String,  _
                    ByVal Original_direccion As String,  _
                    ByVal Original_ciudad As String,  _
                    ByVal Original_vcanon As Double,  _
                    ByVal Original_avcatast As Double,  _
                    ByVal Original_barrio As String,  _
                    ByVal Original_conserv As String,  _
                    ByVal Original_destino As String,  _
                    ByVal Original_dpto As String,  _
                    ByVal Original_estrato As String,  _
                    ByVal Original_f_escritura As String,  _
                    ByVal Original_inscripcion As String,  _
                    ByVal Original_llaves As Long,  _
                    ByVal Original_matricula As String,  _
                    ByVal Original_n_escritura As String,  _
                    ByVal Original_ncatast As String,  _
                    ByVal Original_notaria As String,  _
                    ByVal Original_operacion As String,  _
                    ByVal Original_prelocal As Double,  _
                    ByVal Original_previvi As Double,  _
                    ByVal Original_tipoestado As String,  _
                    ByVal Original_tipoim As String) As Integer
            If (Original_codigo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_codigo")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_codigo,String)
            End If
            If (Original_nitp Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nitp")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_nitp,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_avaluo,Double)
            If (Original_estado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_estado")
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_estado,String)
            End If
            If (Original_direccion Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_direccion")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_direccion,String)
            End If
            If (Original_ciudad Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ciudad")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_ciudad,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_vcanon,Double)
            Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_avcatast,Double)
            If (Original_barrio Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_barrio")
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_barrio,String)
            End If
            If (Original_conserv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_conserv")
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_conserv,String)
            End If
            If (Original_destino Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_destino")
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_destino,String)
            End If
            If (Original_dpto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_dpto")
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_dpto,String)
            End If
            If (Original_estrato Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_estrato")
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_estrato,String)
            End If
            If (Original_f_escritura Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_f_escritura")
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_f_escritura,String)
            End If
            If (Original_inscripcion Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_inscripcion")
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_inscripcion,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_llaves,Long)
            If (Original_matricula Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_matricula")
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_matricula,String)
            End If
            If (Original_n_escritura Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_n_escritura")
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_n_escritura,String)
            End If
            If (Original_ncatast Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ncatast")
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_ncatast,String)
            End If
            If (Original_notaria Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_notaria")
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_notaria,String)
            End If
            If (Original_operacion Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_operacion")
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_operacion,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_prelocal,Double)
            Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_previvi,Double)
            If (Original_tipoestado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_tipoestado")
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_tipoestado,String)
            End If
            If (Original_tipoim Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_tipoim")
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_tipoim,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal codigo As String,  _
                    ByVal nitp As String,  _
                    ByVal avaluo As Double,  _
                    ByVal estado As String,  _
                    ByVal direccion As String,  _
                    ByVal ciudad As String,  _
                    ByVal vcanon As Double,  _
                    ByVal descrip As String,  _
                    ByVal avcatast As Double,  _
                    ByVal barrio As String,  _
                    ByVal conserv As String,  _
                    ByVal destino As String,  _
                    ByVal dpto As String,  _
                    ByVal estrato As String,  _
                    ByVal f_escritura As String,  _
                    ByVal inscripcion As String,  _
                    ByVal llaves As Long,  _
                    ByVal matricula As String,  _
                    ByVal n_escritura As String,  _
                    ByVal ncatast As String,  _
                    ByVal notaria As String,  _
                    ByVal operacion As String,  _
                    ByVal prelocal As Double,  _
                    ByVal previvi As Double,  _
                    ByVal tipoestado As String,  _
                    ByVal tipoim As String) As Integer
            If (codigo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("codigo")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(codigo,String)
            End If
            If (nitp Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nitp")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(nitp,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(avaluo,Double)
            If (estado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("estado")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(estado,String)
            End If
            If (direccion Is Nothing) Then
                Throw New Global.System.ArgumentNullException("direccion")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(direccion,String)
            End If
            If (ciudad Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ciudad")
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(ciudad,String)
            End If
            Me.Adapter.InsertCommand.Parameters(6).Value = CType(vcanon,Double)
            If (descrip Is Nothing) Then
                Throw New Global.System.ArgumentNullException("descrip")
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(descrip,String)
            End If
            Me.Adapter.InsertCommand.Parameters(8).Value = CType(avcatast,Double)
            If (barrio Is Nothing) Then
                Throw New Global.System.ArgumentNullException("barrio")
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(barrio,String)
            End If
            If (conserv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("conserv")
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(conserv,String)
            End If
            If (destino Is Nothing) Then
                Throw New Global.System.ArgumentNullException("destino")
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(destino,String)
            End If
            If (dpto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dpto")
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(dpto,String)
            End If
            If (estrato Is Nothing) Then
                Throw New Global.System.ArgumentNullException("estrato")
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(estrato,String)
            End If
            If (f_escritura Is Nothing) Then
                Throw New Global.System.ArgumentNullException("f_escritura")
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(f_escritura,String)
            End If
            If (inscripcion Is Nothing) Then
                Throw New Global.System.ArgumentNullException("inscripcion")
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(inscripcion,String)
            End If
            Me.Adapter.InsertCommand.Parameters(16).Value = CType(llaves,Long)
            If (matricula Is Nothing) Then
                Throw New Global.System.ArgumentNullException("matricula")
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(matricula,String)
            End If
            If (n_escritura Is Nothing) Then
                Throw New Global.System.ArgumentNullException("n_escritura")
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(n_escritura,String)
            End If
            If (ncatast Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ncatast")
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(ncatast,String)
            End If
            If (notaria Is Nothing) Then
                Throw New Global.System.ArgumentNullException("notaria")
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(notaria,String)
            End If
            If (operacion Is Nothing) Then
                Throw New Global.System.ArgumentNullException("operacion")
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(operacion,String)
            End If
            Me.Adapter.InsertCommand.Parameters(22).Value = CType(prelocal,Double)
            Me.Adapter.InsertCommand.Parameters(23).Value = CType(previvi,Double)
            If (tipoestado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipoestado")
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(tipoestado,String)
            End If
            If (tipoim Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipoim")
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(tipoim,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal codigo As String,  _
                    ByVal nitp As String,  _
                    ByVal avaluo As Double,  _
                    ByVal estado As String,  _
                    ByVal direccion As String,  _
                    ByVal ciudad As String,  _
                    ByVal vcanon As Double,  _
                    ByVal descrip As String,  _
                    ByVal avcatast As Double,  _
                    ByVal barrio As String,  _
                    ByVal conserv As String,  _
                    ByVal destino As String,  _
                    ByVal dpto As String,  _
                    ByVal estrato As String,  _
                    ByVal f_escritura As String,  _
                    ByVal inscripcion As String,  _
                    ByVal llaves As Long,  _
                    ByVal matricula As String,  _
                    ByVal n_escritura As String,  _
                    ByVal ncatast As String,  _
                    ByVal notaria As String,  _
                    ByVal operacion As String,  _
                    ByVal prelocal As Double,  _
                    ByVal previvi As Double,  _
                    ByVal tipoestado As String,  _
                    ByVal tipoim As String,  _
                    ByVal Original_codigo As String,  _
                    ByVal Original_nitp As String,  _
                    ByVal Original_avaluo As Double,  _
                    ByVal Original_estado As String,  _
                    ByVal Original_direccion As String,  _
                    ByVal Original_ciudad As String,  _
                    ByVal Original_vcanon As Double,  _
                    ByVal Original_avcatast As Double,  _
                    ByVal Original_barrio As String,  _
                    ByVal Original_conserv As String,  _
                    ByVal Original_destino As String,  _
                    ByVal Original_dpto As String,  _
                    ByVal Original_estrato As String,  _
                    ByVal Original_f_escritura As String,  _
                    ByVal Original_inscripcion As String,  _
                    ByVal Original_llaves As Long,  _
                    ByVal Original_matricula As String,  _
                    ByVal Original_n_escritura As String,  _
                    ByVal Original_ncatast As String,  _
                    ByVal Original_notaria As String,  _
                    ByVal Original_operacion As String,  _
                    ByVal Original_prelocal As Double,  _
                    ByVal Original_previvi As Double,  _
                    ByVal Original_tipoestado As String,  _
                    ByVal Original_tipoim As String) As Integer
            If (codigo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("codigo")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(codigo,String)
            End If
            If (nitp Is Nothing) Then
                Throw New Global.System.ArgumentNullException("nitp")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(nitp,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(avaluo,Double)
            If (estado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("estado")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(estado,String)
            End If
            If (direccion Is Nothing) Then
                Throw New Global.System.ArgumentNullException("direccion")
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(direccion,String)
            End If
            If (ciudad Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ciudad")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(ciudad,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(6).Value = CType(vcanon,Double)
            If (descrip Is Nothing) Then
                Throw New Global.System.ArgumentNullException("descrip")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(descrip,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(avcatast,Double)
            If (barrio Is Nothing) Then
                Throw New Global.System.ArgumentNullException("barrio")
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(barrio,String)
            End If
            If (conserv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("conserv")
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(conserv,String)
            End If
            If (destino Is Nothing) Then
                Throw New Global.System.ArgumentNullException("destino")
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(destino,String)
            End If
            If (dpto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dpto")
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(dpto,String)
            End If
            If (estrato Is Nothing) Then
                Throw New Global.System.ArgumentNullException("estrato")
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(estrato,String)
            End If
            If (f_escritura Is Nothing) Then
                Throw New Global.System.ArgumentNullException("f_escritura")
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(f_escritura,String)
            End If
            If (inscripcion Is Nothing) Then
                Throw New Global.System.ArgumentNullException("inscripcion")
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(inscripcion,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(llaves,Long)
            If (matricula Is Nothing) Then
                Throw New Global.System.ArgumentNullException("matricula")
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(matricula,String)
            End If
            If (n_escritura Is Nothing) Then
                Throw New Global.System.ArgumentNullException("n_escritura")
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(n_escritura,String)
            End If
            If (ncatast Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ncatast")
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(ncatast,String)
            End If
            If (notaria Is Nothing) Then
                Throw New Global.System.ArgumentNullException("notaria")
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(notaria,String)
            End If
            If (operacion Is Nothing) Then
                Throw New Global.System.ArgumentNullException("operacion")
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(operacion,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(prelocal,Double)
            Me.Adapter.UpdateCommand.Parameters(23).Value = CType(previvi,Double)
            If (tipoestado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipoestado")
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(tipoestado,String)
            End If
            If (tipoim Is Nothing) Then
                Throw New Global.System.ArgumentNullException("tipoim")
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(tipoim,String)
            End If
            If (Original_codigo Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_codigo")
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_codigo,String)
            End If
            If (Original_nitp Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_nitp")
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_nitp,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_avaluo,Double)
            If (Original_estado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_estado")
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_estado,String)
            End If
            If (Original_direccion Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_direccion")
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_direccion,String)
            End If
            If (Original_ciudad Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ciudad")
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_ciudad,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_vcanon,Double)
            Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_avcatast,Double)
            If (Original_barrio Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_barrio")
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_barrio,String)
            End If
            If (Original_conserv Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_conserv")
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_conserv,String)
            End If
            If (Original_destino Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_destino")
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_destino,String)
            End If
            If (Original_dpto Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_dpto")
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_dpto,String)
            End If
            If (Original_estrato Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_estrato")
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_estrato,String)
            End If
            If (Original_f_escritura Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_f_escritura")
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_f_escritura,String)
            End If
            If (Original_inscripcion Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_inscripcion")
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_inscripcion,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_llaves,Long)
            If (Original_matricula Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_matricula")
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_matricula,String)
            End If
            If (Original_n_escritura Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_n_escritura")
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_n_escritura,String)
            End If
            If (Original_ncatast Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_ncatast")
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_ncatast,String)
            End If
            If (Original_notaria Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_notaria")
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_notaria,String)
            End If
            If (Original_operacion Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_operacion")
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_operacion,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_prelocal,Double)
            Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_previvi,Double)
            If (Original_tipoestado Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_tipoestado")
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_tipoestado,String)
            End If
            If (Original_tipoim Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_tipoim")
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_tipoim,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal nitp As String,  _
                    ByVal avaluo As Double,  _
                    ByVal estado As String,  _
                    ByVal direccion As String,  _
                    ByVal ciudad As String,  _
                    ByVal vcanon As Double,  _
                    ByVal descrip As String,  _
                    ByVal avcatast As Double,  _
                    ByVal barrio As String,  _
                    ByVal conserv As String,  _
                    ByVal destino As String,  _
                    ByVal dpto As String,  _
                    ByVal estrato As String,  _
                    ByVal f_escritura As String,  _
                    ByVal inscripcion As String,  _
                    ByVal llaves As Long,  _
                    ByVal matricula As String,  _
                    ByVal n_escritura As String,  _
                    ByVal ncatast As String,  _
                    ByVal notaria As String,  _
                    ByVal operacion As String,  _
                    ByVal prelocal As Double,  _
                    ByVal previvi As Double,  _
                    ByVal tipoestado As String,  _
                    ByVal tipoim As String,  _
                    ByVal Original_codigo As String,  _
                    ByVal Original_nitp As String,  _
                    ByVal Original_avaluo As Double,  _
                    ByVal Original_estado As String,  _
                    ByVal Original_direccion As String,  _
                    ByVal Original_ciudad As String,  _
                    ByVal Original_vcanon As Double,  _
                    ByVal Original_avcatast As Double,  _
                    ByVal Original_barrio As String,  _
                    ByVal Original_conserv As String,  _
                    ByVal Original_destino As String,  _
                    ByVal Original_dpto As String,  _
                    ByVal Original_estrato As String,  _
                    ByVal Original_f_escritura As String,  _
                    ByVal Original_inscripcion As String,  _
                    ByVal Original_llaves As Long,  _
                    ByVal Original_matricula As String,  _
                    ByVal Original_n_escritura As String,  _
                    ByVal Original_ncatast As String,  _
                    ByVal Original_notaria As String,  _
                    ByVal Original_operacion As String,  _
                    ByVal Original_prelocal As Double,  _
                    ByVal Original_previvi As Double,  _
                    ByVal Original_tipoestado As String,  _
                    ByVal Original_tipoim As String) As Integer
            Return Me.Update(Original_codigo, nitp, avaluo, estado, direccion, ciudad, vcanon, descrip, avcatast, barrio, conserv, destino, dpto, estrato, f_escritura, inscripcion, llaves, matricula, n_escritura, ncatast, notaria, operacion, prelocal, previvi, tipoestado, tipoim, Original_codigo, Original_nitp, Original_avaluo, Original_estado, Original_direccion, Original_ciudad, Original_vcanon, Original_avcatast, Original_barrio, Original_conserv, Original_destino, Original_dpto, Original_estrato, Original_f_escritura, Original_inscripcion, Original_llaves, Original_matricula, Original_n_escritura, Original_ncatast, Original_notaria, Original_operacion, Original_prelocal, Original_previvi, Original_tipoestado, Original_tipoim)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _articulosTableAdapter As articulosTableAdapter
        
        Private _con_invTableAdapter As con_invTableAdapter
        
        Private _movimientos01TableAdapter As movimientos01TableAdapter
        
        Private _deta_mov01TableAdapter As deta_mov01TableAdapter
        
        Private _tercerosTableAdapter As tercerosTableAdapter
        
        Private _parinvenTableAdapter As parinvenTableAdapter
        
        Private _detafac01TableAdapter As detafac01TableAdapter
        
        Private _facturas01TableAdapter As facturas01TableAdapter
        
        Private _facpagos01TableAdapter As facpagos01TableAdapter
        
        Private _cobdpenTableAdapter As cobdpenTableAdapter
        
        Private _ctas_x_pagarTableAdapter As ctas_x_pagarTableAdapter
        
        Private _parafactsTableAdapter As parafactsTableAdapter
        
        Private _selpucTableAdapter As selpucTableAdapter
        
        Private _documentos01TableAdapter As documentos01TableAdapter
        
        Private _contrato_inmTableAdapter As contrato_inmTableAdapter
        
        Private _parcontratoTableAdapter As parcontratoTableAdapter
        
        Private _inm_dpdenTableAdapter As inm_dpdenTableAdapter
        
        Private _inm_llavesTableAdapter As inm_llavesTableAdapter
        
        Private _inm_serviciosTableAdapter As inm_serviciosTableAdapter
        
        Private _inmueblesTableAdapter As inmueblesTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property articulosTableAdapter() As articulosTableAdapter
            Get
                Return Me._articulosTableAdapter
            End Get
            Set
                Me._articulosTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property con_invTableAdapter() As con_invTableAdapter
            Get
                Return Me._con_invTableAdapter
            End Get
            Set
                Me._con_invTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property movimientos01TableAdapter() As movimientos01TableAdapter
            Get
                Return Me._movimientos01TableAdapter
            End Get
            Set
                Me._movimientos01TableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property deta_mov01TableAdapter() As deta_mov01TableAdapter
            Get
                Return Me._deta_mov01TableAdapter
            End Get
            Set
                Me._deta_mov01TableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tercerosTableAdapter() As tercerosTableAdapter
            Get
                Return Me._tercerosTableAdapter
            End Get
            Set
                Me._tercerosTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property parinvenTableAdapter() As parinvenTableAdapter
            Get
                Return Me._parinvenTableAdapter
            End Get
            Set
                Me._parinvenTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property detafac01TableAdapter() As detafac01TableAdapter
            Get
                Return Me._detafac01TableAdapter
            End Get
            Set
                Me._detafac01TableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property facturas01TableAdapter() As facturas01TableAdapter
            Get
                Return Me._facturas01TableAdapter
            End Get
            Set
                Me._facturas01TableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property facpagos01TableAdapter() As facpagos01TableAdapter
            Get
                Return Me._facpagos01TableAdapter
            End Get
            Set
                Me._facpagos01TableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property cobdpenTableAdapter() As cobdpenTableAdapter
            Get
                Return Me._cobdpenTableAdapter
            End Get
            Set
                Me._cobdpenTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ctas_x_pagarTableAdapter() As ctas_x_pagarTableAdapter
            Get
                Return Me._ctas_x_pagarTableAdapter
            End Get
            Set
                Me._ctas_x_pagarTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property parafactsTableAdapter() As parafactsTableAdapter
            Get
                Return Me._parafactsTableAdapter
            End Get
            Set
                Me._parafactsTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property selpucTableAdapter() As selpucTableAdapter
            Get
                Return Me._selpucTableAdapter
            End Get
            Set
                Me._selpucTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property documentos01TableAdapter() As documentos01TableAdapter
            Get
                Return Me._documentos01TableAdapter
            End Get
            Set
                Me._documentos01TableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property contrato_inmTableAdapter() As contrato_inmTableAdapter
            Get
                Return Me._contrato_inmTableAdapter
            End Get
            Set
                Me._contrato_inmTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property parcontratoTableAdapter() As parcontratoTableAdapter
            Get
                Return Me._parcontratoTableAdapter
            End Get
            Set
                Me._parcontratoTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property inm_dpdenTableAdapter() As inm_dpdenTableAdapter
            Get
                Return Me._inm_dpdenTableAdapter
            End Get
            Set
                Me._inm_dpdenTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property inm_llavesTableAdapter() As inm_llavesTableAdapter
            Get
                Return Me._inm_llavesTableAdapter
            End Get
            Set
                Me._inm_llavesTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property inm_serviciosTableAdapter() As inm_serviciosTableAdapter
            Get
                Return Me._inm_serviciosTableAdapter
            End Get
            Set
                Me._inm_serviciosTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property inmueblesTableAdapter() As inmueblesTableAdapter
            Get
                Return Me._inmueblesTableAdapter
            End Get
            Set
                Me._inmueblesTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._articulosTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._articulosTableAdapter.Connection) Is Nothing)) Then
                    Return Me._articulosTableAdapter.Connection
                End If
                If ((Not (Me._con_invTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._con_invTableAdapter.Connection) Is Nothing)) Then
                    Return Me._con_invTableAdapter.Connection
                End If
                If ((Not (Me._movimientos01TableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._movimientos01TableAdapter.Connection) Is Nothing)) Then
                    Return Me._movimientos01TableAdapter.Connection
                End If
                If ((Not (Me._deta_mov01TableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._deta_mov01TableAdapter.Connection) Is Nothing)) Then
                    Return Me._deta_mov01TableAdapter.Connection
                End If
                If ((Not (Me._tercerosTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tercerosTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tercerosTableAdapter.Connection
                End If
                If ((Not (Me._parinvenTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._parinvenTableAdapter.Connection) Is Nothing)) Then
                    Return Me._parinvenTableAdapter.Connection
                End If
                If ((Not (Me._detafac01TableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._detafac01TableAdapter.Connection) Is Nothing)) Then
                    Return Me._detafac01TableAdapter.Connection
                End If
                If ((Not (Me._facturas01TableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._facturas01TableAdapter.Connection) Is Nothing)) Then
                    Return Me._facturas01TableAdapter.Connection
                End If
                If ((Not (Me._facpagos01TableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._facpagos01TableAdapter.Connection) Is Nothing)) Then
                    Return Me._facpagos01TableAdapter.Connection
                End If
                If ((Not (Me._cobdpenTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cobdpenTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cobdpenTableAdapter.Connection
                End If
                If ((Not (Me._ctas_x_pagarTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._ctas_x_pagarTableAdapter.Connection) Is Nothing)) Then
                    Return Me._ctas_x_pagarTableAdapter.Connection
                End If
                If ((Not (Me._parafactsTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._parafactsTableAdapter.Connection) Is Nothing)) Then
                    Return Me._parafactsTableAdapter.Connection
                End If
                If ((Not (Me._selpucTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._selpucTableAdapter.Connection) Is Nothing)) Then
                    Return Me._selpucTableAdapter.Connection
                End If
                If ((Not (Me._documentos01TableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._documentos01TableAdapter.Connection) Is Nothing)) Then
                    Return Me._documentos01TableAdapter.Connection
                End If
                If ((Not (Me._contrato_inmTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._contrato_inmTableAdapter.Connection) Is Nothing)) Then
                    Return Me._contrato_inmTableAdapter.Connection
                End If
                If ((Not (Me._parcontratoTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._parcontratoTableAdapter.Connection) Is Nothing)) Then
                    Return Me._parcontratoTableAdapter.Connection
                End If
                If ((Not (Me._inm_dpdenTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._inm_dpdenTableAdapter.Connection) Is Nothing)) Then
                    Return Me._inm_dpdenTableAdapter.Connection
                End If
                If ((Not (Me._inm_llavesTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._inm_llavesTableAdapter.Connection) Is Nothing)) Then
                    Return Me._inm_llavesTableAdapter.Connection
                End If
                If ((Not (Me._inm_serviciosTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._inm_serviciosTableAdapter.Connection) Is Nothing)) Then
                    Return Me._inm_serviciosTableAdapter.Connection
                End If
                If ((Not (Me._inmueblesTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._inmueblesTableAdapter.Connection) Is Nothing)) Then
                    Return Me._inmueblesTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._articulosTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._con_invTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._movimientos01TableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._deta_mov01TableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tercerosTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._parinvenTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._detafac01TableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._facturas01TableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._facpagos01TableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._cobdpenTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._ctas_x_pagarTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._parafactsTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._selpucTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._documentos01TableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._contrato_inmTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._parcontratoTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._inm_dpdenTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._inm_llavesTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._inm_serviciosTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._inmueblesTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As saeosteomaterial2012DataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._articulosTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.articulos.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._articulosTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._documentos01TableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.documentos01.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._documentos01TableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._contrato_inmTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.contrato_inm.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._contrato_inmTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._parafactsTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.parafacts.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._parafactsTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._selpucTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.selpuc.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._selpucTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._parcontratoTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.parcontrato.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._parcontratoTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._inm_serviciosTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.inm_servicios.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._inm_serviciosTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._inmueblesTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.inmuebles.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._inmueblesTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._inm_dpdenTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.inm_dpden.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._inm_dpdenTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._inm_llavesTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.inm_llaves.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._inm_llavesTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._ctas_x_pagarTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.ctas_x_pagar.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._ctas_x_pagarTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._deta_mov01TableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.deta_mov01.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._deta_mov01TableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tercerosTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.terceros.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tercerosTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._con_invTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.con_inv.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._con_invTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._movimientos01TableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.movimientos01.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._movimientos01TableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._parinvenTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.parinven.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._parinvenTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._facpagos01TableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.facpagos01.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._facpagos01TableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._cobdpenTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.cobdpen.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cobdpenTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._detafac01TableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.detafac01.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._detafac01TableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._facturas01TableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.facturas01.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._facturas01TableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateInsertedRows(ByVal dataSet As saeosteomaterial2012DataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._articulosTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.articulos.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._articulosTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._documentos01TableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.documentos01.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._documentos01TableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._contrato_inmTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.contrato_inm.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._contrato_inmTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._parafactsTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.parafacts.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._parafactsTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._selpucTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.selpuc.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._selpucTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._parcontratoTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.parcontrato.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._parcontratoTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._inm_serviciosTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.inm_servicios.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._inm_serviciosTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._inmueblesTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.inmuebles.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._inmueblesTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._inm_dpdenTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.inm_dpden.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._inm_dpdenTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._inm_llavesTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.inm_llaves.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._inm_llavesTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._ctas_x_pagarTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.ctas_x_pagar.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._ctas_x_pagarTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._deta_mov01TableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.deta_mov01.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._deta_mov01TableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tercerosTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.terceros.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tercerosTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._con_invTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.con_inv.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._con_invTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._movimientos01TableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.movimientos01.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._movimientos01TableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._parinvenTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.parinven.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._parinvenTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._facpagos01TableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.facpagos01.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._facpagos01TableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._cobdpenTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.cobdpen.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cobdpenTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._detafac01TableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.detafac01.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._detafac01TableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._facturas01TableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.facturas01.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._facturas01TableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateDeletedRows(ByVal dataSet As saeosteomaterial2012DataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._facturas01TableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.facturas01.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._facturas01TableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._detafac01TableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.detafac01.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._detafac01TableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._cobdpenTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.cobdpen.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cobdpenTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._facpagos01TableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.facpagos01.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._facpagos01TableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._parinvenTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.parinven.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._parinvenTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._movimientos01TableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.movimientos01.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._movimientos01TableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._con_invTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.con_inv.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._con_invTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tercerosTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.terceros.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tercerosTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._deta_mov01TableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.deta_mov01.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._deta_mov01TableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._ctas_x_pagarTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.ctas_x_pagar.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._ctas_x_pagarTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._inm_llavesTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.inm_llaves.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._inm_llavesTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._inm_dpdenTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.inm_dpden.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._inm_dpdenTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._inmueblesTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.inmuebles.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._inmueblesTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._inm_serviciosTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.inm_servicios.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._inm_serviciosTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._parcontratoTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.parcontrato.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._parcontratoTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._selpucTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.selpuc.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._selpucTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._parafactsTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.parafacts.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._parafactsTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._contrato_inmTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.contrato_inm.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._contrato_inmTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._documentos01TableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.documentos01.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._documentos01TableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._articulosTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.articulos.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._articulosTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function UpdateAll(ByVal dataSet As saeosteomaterial2012DataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._articulosTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._articulosTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._con_invTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._con_invTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._movimientos01TableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._movimientos01TableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._deta_mov01TableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._deta_mov01TableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._tercerosTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tercerosTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._parinvenTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._parinvenTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._detafac01TableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._detafac01TableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._facturas01TableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._facturas01TableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._facpagos01TableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._facpagos01TableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._cobdpenTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cobdpenTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._ctas_x_pagarTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._ctas_x_pagarTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._parafactsTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._parafactsTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._selpucTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._selpucTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._documentos01TableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._documentos01TableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._contrato_inmTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._contrato_inmTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._parcontratoTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._parcontratoTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._inm_dpdenTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._inm_dpdenTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._inm_llavesTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._inm_llavesTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._inm_serviciosTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._inm_serviciosTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._inmueblesTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._inmueblesTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda"& _ 
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co"& _ 
                        "n las transacciones o el estado actual no permite que comience la transacción.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._articulosTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._articulosTableAdapter, Me._articulosTableAdapter.Connection)
                    Me._articulosTableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._articulosTableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._articulosTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._articulosTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._articulosTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._con_invTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._con_invTableAdapter, Me._con_invTableAdapter.Connection)
                    Me._con_invTableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._con_invTableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._con_invTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._con_invTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._con_invTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._movimientos01TableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._movimientos01TableAdapter, Me._movimientos01TableAdapter.Connection)
                    Me._movimientos01TableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._movimientos01TableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._movimientos01TableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._movimientos01TableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._movimientos01TableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._deta_mov01TableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._deta_mov01TableAdapter, Me._deta_mov01TableAdapter.Connection)
                    Me._deta_mov01TableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._deta_mov01TableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._deta_mov01TableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._deta_mov01TableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._deta_mov01TableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tercerosTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tercerosTableAdapter, Me._tercerosTableAdapter.Connection)
                    Me._tercerosTableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._tercerosTableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._tercerosTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tercerosTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tercerosTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._parinvenTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._parinvenTableAdapter, Me._parinvenTableAdapter.Connection)
                    Me._parinvenTableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._parinvenTableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._parinvenTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._parinvenTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._parinvenTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._detafac01TableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._detafac01TableAdapter, Me._detafac01TableAdapter.Connection)
                    Me._detafac01TableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._detafac01TableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._detafac01TableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._detafac01TableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._detafac01TableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._facturas01TableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._facturas01TableAdapter, Me._facturas01TableAdapter.Connection)
                    Me._facturas01TableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._facturas01TableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._facturas01TableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._facturas01TableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._facturas01TableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._facpagos01TableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._facpagos01TableAdapter, Me._facpagos01TableAdapter.Connection)
                    Me._facpagos01TableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._facpagos01TableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._facpagos01TableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._facpagos01TableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._facpagos01TableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._cobdpenTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cobdpenTableAdapter, Me._cobdpenTableAdapter.Connection)
                    Me._cobdpenTableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._cobdpenTableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._cobdpenTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cobdpenTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cobdpenTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._ctas_x_pagarTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._ctas_x_pagarTableAdapter, Me._ctas_x_pagarTableAdapter.Connection)
                    Me._ctas_x_pagarTableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._ctas_x_pagarTableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._ctas_x_pagarTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._ctas_x_pagarTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._ctas_x_pagarTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._parafactsTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._parafactsTableAdapter, Me._parafactsTableAdapter.Connection)
                    Me._parafactsTableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._parafactsTableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._parafactsTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._parafactsTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._parafactsTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._selpucTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._selpucTableAdapter, Me._selpucTableAdapter.Connection)
                    Me._selpucTableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._selpucTableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._selpucTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._selpucTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._selpucTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._documentos01TableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._documentos01TableAdapter, Me._documentos01TableAdapter.Connection)
                    Me._documentos01TableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._documentos01TableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._documentos01TableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._documentos01TableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._documentos01TableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._contrato_inmTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._contrato_inmTableAdapter, Me._contrato_inmTableAdapter.Connection)
                    Me._contrato_inmTableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._contrato_inmTableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._contrato_inmTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._contrato_inmTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._contrato_inmTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._parcontratoTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._parcontratoTableAdapter, Me._parcontratoTableAdapter.Connection)
                    Me._parcontratoTableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._parcontratoTableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._parcontratoTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._parcontratoTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._parcontratoTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._inm_dpdenTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._inm_dpdenTableAdapter, Me._inm_dpdenTableAdapter.Connection)
                    Me._inm_dpdenTableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._inm_dpdenTableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._inm_dpdenTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._inm_dpdenTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._inm_dpdenTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._inm_llavesTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._inm_llavesTableAdapter, Me._inm_llavesTableAdapter.Connection)
                    Me._inm_llavesTableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._inm_llavesTableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._inm_llavesTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._inm_llavesTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._inm_llavesTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._inm_serviciosTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._inm_serviciosTableAdapter, Me._inm_serviciosTableAdapter.Connection)
                    Me._inm_serviciosTableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._inm_serviciosTableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._inm_serviciosTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._inm_serviciosTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._inm_serviciosTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._inmueblesTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._inmueblesTableAdapter, Me._inmueblesTableAdapter.Connection)
                    Me._inmueblesTableAdapter.Connection = CType(workConnection,Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._inmueblesTableAdapter.Transaction = CType(workTransaction,Global.MySql.Data.MySqlClient.MySqlTransaction)
                    If Me._inmueblesTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._inmueblesTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._inmueblesTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._articulosTableAdapter) Is Nothing) Then
                    Me._articulosTableAdapter.Connection = CType(revertConnections(Me._articulosTableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._articulosTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._con_invTableAdapter) Is Nothing) Then
                    Me._con_invTableAdapter.Connection = CType(revertConnections(Me._con_invTableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._con_invTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._movimientos01TableAdapter) Is Nothing) Then
                    Me._movimientos01TableAdapter.Connection = CType(revertConnections(Me._movimientos01TableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._movimientos01TableAdapter.Transaction = Nothing
                End If
                If (Not (Me._deta_mov01TableAdapter) Is Nothing) Then
                    Me._deta_mov01TableAdapter.Connection = CType(revertConnections(Me._deta_mov01TableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._deta_mov01TableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tercerosTableAdapter) Is Nothing) Then
                    Me._tercerosTableAdapter.Connection = CType(revertConnections(Me._tercerosTableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._tercerosTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._parinvenTableAdapter) Is Nothing) Then
                    Me._parinvenTableAdapter.Connection = CType(revertConnections(Me._parinvenTableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._parinvenTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._detafac01TableAdapter) Is Nothing) Then
                    Me._detafac01TableAdapter.Connection = CType(revertConnections(Me._detafac01TableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._detafac01TableAdapter.Transaction = Nothing
                End If
                If (Not (Me._facturas01TableAdapter) Is Nothing) Then
                    Me._facturas01TableAdapter.Connection = CType(revertConnections(Me._facturas01TableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._facturas01TableAdapter.Transaction = Nothing
                End If
                If (Not (Me._facpagos01TableAdapter) Is Nothing) Then
                    Me._facpagos01TableAdapter.Connection = CType(revertConnections(Me._facpagos01TableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._facpagos01TableAdapter.Transaction = Nothing
                End If
                If (Not (Me._cobdpenTableAdapter) Is Nothing) Then
                    Me._cobdpenTableAdapter.Connection = CType(revertConnections(Me._cobdpenTableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._cobdpenTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._ctas_x_pagarTableAdapter) Is Nothing) Then
                    Me._ctas_x_pagarTableAdapter.Connection = CType(revertConnections(Me._ctas_x_pagarTableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._ctas_x_pagarTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._parafactsTableAdapter) Is Nothing) Then
                    Me._parafactsTableAdapter.Connection = CType(revertConnections(Me._parafactsTableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._parafactsTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._selpucTableAdapter) Is Nothing) Then
                    Me._selpucTableAdapter.Connection = CType(revertConnections(Me._selpucTableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._selpucTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._documentos01TableAdapter) Is Nothing) Then
                    Me._documentos01TableAdapter.Connection = CType(revertConnections(Me._documentos01TableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._documentos01TableAdapter.Transaction = Nothing
                End If
                If (Not (Me._contrato_inmTableAdapter) Is Nothing) Then
                    Me._contrato_inmTableAdapter.Connection = CType(revertConnections(Me._contrato_inmTableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._contrato_inmTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._parcontratoTableAdapter) Is Nothing) Then
                    Me._parcontratoTableAdapter.Connection = CType(revertConnections(Me._parcontratoTableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._parcontratoTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._inm_dpdenTableAdapter) Is Nothing) Then
                    Me._inm_dpdenTableAdapter.Connection = CType(revertConnections(Me._inm_dpdenTableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._inm_dpdenTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._inm_llavesTableAdapter) Is Nothing) Then
                    Me._inm_llavesTableAdapter.Connection = CType(revertConnections(Me._inm_llavesTableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._inm_llavesTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._inm_serviciosTableAdapter) Is Nothing) Then
                    Me._inm_serviciosTableAdapter.Connection = CType(revertConnections(Me._inm_serviciosTableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._inm_serviciosTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._inmueblesTableAdapter) Is Nothing) Then
                    Me._inmueblesTableAdapter.Connection = CType(revertConnections(Me._inmueblesTableAdapter),Global.MySql.Data.MySqlClient.MySqlConnection)
                    Me._inmueblesTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Private Function IsChildAndParent(ByVal child As Global.System.Data.DataRow, ByVal parent As Global.System.Data.DataRow) As Boolean
                Global.System.Diagnostics.Debug.Assert((Not (child) Is Nothing))
                Global.System.Diagnostics.Debug.Assert((Not (parent) Is Nothing))
                Dim newParent As Global.System.Data.DataRow = child.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (newParent) Is Nothing)  _
                            AndAlso ((Object.ReferenceEquals(newParent, child) = false)  _
                            AndAlso (Object.ReferenceEquals(newParent, parent) = false)))
                    newParent = newParent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop
                If (newParent Is Nothing) Then
                    newParent = child.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)
                    Do While ((Not (newParent) Is Nothing)  _
                                AndAlso ((Object.ReferenceEquals(newParent, child) = false)  _
                                AndAlso (Object.ReferenceEquals(newParent, parent) = false)))
                        newParent = newParent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If
                If Object.ReferenceEquals(newParent, parent) Then
                    Return true
                End If
                Return false
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                'Is row1 the child or grandchild of row2
                If Me.IsChildAndParent(row1, row2) Then
                    Return Me._childFirst
                End If

                'Is row2 the child or grandchild of row1
                If Me.IsChildAndParent(row2, row1) Then
                    Return (-1 * Me._childFirst)
                End If
                Return 0
            End Function
        End Class
    End Class
End Namespace
